// ------------------------------------------------------------
// Former Human
// ------------------------------------------------------------
class ZombieStormtrooper:ZombieMan{
	default{
		translation "58:66=128:136","214:223=141:148","176:191=24:47","16:34=68:79";
		health 70; gibhealth 100;
		height 52;radius 12;
		speed 8;
		dropitem "";attacksound "";decal "BulletScratch";
		painchance 250;
		obituary "%o was gunned down by a zombieman.";
		hitobituary "%o was beaten up by a zombieman.";
	}
	double spread;
	double turnamount;
	int mag;
	int firemode; //-1 = semi; -2 = SMG
	override void postbeginplay(){
		super.postbeginplay();
		mag=50;
		firemode=random(-1,5);
	}
	states{
	spawn:
		POSS A 0;
	spawn2:
		#### A 0{
			A_Look();
			A_Recoil(frandom(-0.1,0.1));
		}
		#### EEE 1{
			A_SetTics(random(5,17));
			A_Look();
		}
		#### E 1{
			A_Recoil(frandom(-0.1,0.1));
			A_SetTics(random(10,40));
		}
		#### B 0 A_Jump(28,"spawngrunt");
		#### B 0 A_Jump(132,"spawnswitch");
		#### B 8 A_Recoil(frandom(-0.2,0.2));
		loop;
	spawngrunt:
		#### G 1{
			A_Recoil(frandom(-0.4,0.4));
			A_SetTics(random(30,80));
			A_PlaySound("grunt/active");
		}
		#### A 0 A_Jump(256,"spawn");
	spawnswitch:
		#### A 0 A_JumpIf(bambush,"spawnstill");
		goto spawnwander;
	spawnstill:
		#### A 0 A_Look();
		#### A 0 A_Recoil(random(-1,1)*0.4);
		#### CD 5 A_SetAngle(angle+random(-4,4));
		#### A 0{
			A_Look();
			if(!random(0,127))A_PlaySound("grunt/active");
		}
		#### AB 5 A_SetAngle(angle+random(-4,4));
		#### B 1 A_SetTics(random(10,40));
		#### A 0 A_Jump(256,"spawn");
	spawnwander:
		#### A 0 A_Look();
		#### CD 5 A_Wander();
		#### A 0{
			A_Look();
			if(!random(0,127))A_PlaySound("grunt/active");
		}
		#### AB 5 A_Wander();
		#### A 0 A_Jump(64,"spawn");
		#### A 0 A_Jump(256,"spawn");
	missile:
		#### A 0 A_JumpIf(mag<1,"reload");
		#### A 0 A_JumpIfTargetInLOS(3,120);
		#### CD 2 A_FaceTarget(90);
		#### E 1 A_SetTics(random(4,10)); //when they just start to aim,not for followup shots!
		#### A 0 A_JumpIfTargetInLOS("missile2");
		#### A 0 A_CheckLOF("see",CLOFF_JUMPNONHOSTILE|CLOFF_SKIPTARGET|CLOFF_JUMPOBJECT|CLOFF_MUSTBESOLID|CLOFF_SKIPENEMY,0,0,0,0,44,0);
	missile2:
		#### A 0{
			if(!target){
				setstatelabel("spawn");
				return;
			}
			double enemydist=distance3d(target);
			if(enemydist<200)turnamount=50;
			else if(enemydist<600)turnamount=30;
			else turnamount=10;
		}goto turntoaim;
	turntoaim:
		#### E 2 A_FaceTarget(turnamount,turnamount);
		#### A 0 A_JumpIfTargetInLOS(1);
		goto see;
		#### A 0 A_JumpIfTargetInLOS(1,10);
		loop;
		#### E 1{
			A_FaceTarget(turnamount,turnamount);
			A_SetTics(random(0,100/clamp(turnamount,1,turnamount+1)+4));
			spread=frandom(0.1,0.2)*turnamount;
			if(firemode>=0)firemode=random(0,2);
		}
		#### A 0 A_Jump(256,"shoot");
	shoot:
		#### A 0 A_JumpIfInventory("ZM66Loaded",0,"ohforfuckssake");
		#### F 1 bright light("SHOT"){
			pitch+=frandom(-spread,spread);
			angle+=frandom(-spread,spread);
			if(firemode==-2){
				A_PlaySound("weapons/pistol",CHAN_WEAPON);
				A_GiveInventory("DecoBulleter9");
			}else{
				A_PlaySound("weapons/rifle",CHAN_WEAPON);
				A_GiveInventory("DecoBulleter426");
			}
			mag--;
		}
		#### E 2{
			if(
				mag<1
				||firemode>4
				||-2<firemode<1
			){
				if(firemode>2)firemode=2;
				setstatelabel("postshot");
			}else if(firemode>=2){
				firemode++;
				setstatelabel("shoot");
			}
			else spread++;
		}
		#### A 0 A_Jump(120,"shoot");
		//fallthrough to postshot
	postshot:
		#### E 5{
			if(!random(0,127))A_PlaySound("grunt/active");
			if(mag<1){
				setstatelabel("reload");
				return;
			}
			spread=max(0,spread-1);
			A_SetTics(random(2,6));
		}
		#### E 5;
		#### E 0 A_JumpIfTargetInLOS(1);
		goto coverfire;//even if not in los,occasionally keep shooting anyway
		#### E 0 A_Jump(30,"see");//even if in los,occasionally stop shooting anyway
		goto coverfire;

	coverfire:
		#### E 1 A_SetTics(random(2,12));
		#### E 0{
			spread=2;
		}
		#### E 0 A_Jump(90,"roam");
		#### E 0 A_JumpIfTargetInLOS("missile2");
		#### E 0 A_Jump(216,"shoot");
		loop;

	ohforfuckssake:
		#### E 8;
	reload:
		---- A 4{
			A_PlaySound("weapons/rifleclick2");
			bfrightened=true;
		}
		#### AA 1 A_Chase("melee",null);
		#### A 0{
			A_PlaySound("weapons/rifleload");
			if(firemode==-2)A_SpawnProjectile("HDSMGEmptyMag",38,0,random(90,120));
			else A_SpawnProjectile("HD4mmMagEmpty",38,0,random(90,120));
		}
		#### BBCCDD 1 A_Chase("melee",null);
		#### E 12 A_PlaySound("weapons/pocket");
		#### E 8 A_PlaySound("weapons/rifleload");
		#### E 2{
			A_PlaySound("weapons/rifleclick2");
			if(firemode==-2)mag=30;else mag=50;
			bfrightened=false;
		}
		#### CCBB 2 A_Wander();

	see_evade:
		#### A 0 A_Jump(64,"missile");
		#### A 0{
			A_Chase("missile","melee",CHF_DONTMOVE);
			A_FaceTarget();
			angle+=random(60,100)*randompick(-1,1);
			bnodropoff=true;
		}
	see_evade2:
		#### A 0{angle+=random(-30,30);}
		#### ABCD 4 A_Recoil(-3);
		#### A 0{
			spread=4;
			if(vel.xy.length()<6)bnodropoff=true;
			vel.xy*=0.1;
			if(random(0,15))A_TakeInventory("EvadeNow");
		}
		#### A 0 A_JumpIfTargetInLOS("see");
		goto roam;

	see:
		#### A 0{
			bnopain=true;
			damagemobj(self,target,1,"bleedout");
			bnopain=false;
		}
	see2:
		#### A 0{
			if(
				floorz>pos.z-4
				&&countinv("EvadeNow")
			)setstatelabel("see_evade");
			else if(mag<1)setstatelabel("reload");
		}
		#### AABBCCDD 2 A_Chase();
		#### A 0{
			spread=2;
		}
		#### A 0 A_JumpIfTargetInLOS("see");
		#### A 0 A_Jump(24,"roam");
		loop;
	roam:
		#### A 0 A_TakeInventory("EvadeNow");
		#### A 0 A_Jump(60,"roam2");
	roam1:
		#### E 3;
		#### E 0{spread=1;}
		#### EEEE 1 A_Chase("melee","turnaround",CHF_DONTMOVE);
		#### E 0{spread=0;}
		#### EEEEEEEEEEEEE 1 A_Chase("melee","turnaround",CHF_DONTMOVE);
		#### A 0 A_Jump(60,"roam");
	roam2:
		#### A 0 A_Jump(8,"see");
		#### A 0 HealThing(random(0,2));
		#### AA 3 A_Chase();
		#### BBCC 3 A_Wander();
		#### DD 3 A_Chase();
		#### A 0 A_Jump(140,"Roam");
		#### A 0 A_AlertMonsters();
		#### A 0 A_JumpIfTargetInLOS("see");
		loop;
	turnaround:
		#### A 0 A_FaceTarget(15,0);
		#### E 2 A_JumpIfTargetInLOS("missile2",40);
		#### E 0{spread=3;}
		#### A 0 A_FaceTarget(15,0);
		#### E 0{spread=6;}
		#### E 2 A_JumpIfTargetInLOS("missile2",40);
		#### E 0{spread=4;}
		#### AABBCCDD 2 A_Chase();
		goto see;
	melee:
		#### C 8 A_FaceTarget();
		#### D 4;
		#### E 4 A_CustomMeleeAttack(random(3,20),"weapons/smack","","none",randompick(0,0,0,1));
		#### E 3 A_JumpIfCloser(64,2);
		#### E 4 A_FaceTarget();
		goto missile2;
		#### A 4;
		goto see;
	pain:
		#### G 2;
		#### G 3{
			A_Pain();
			if(!random(0,10))A_AlertMonsters();
			if(target&&distance3d(target)<100)setstatelabel("see");
		}
		#### G 0{bfrightened=true;}
		#### ABCD 2 A_Chase();
		#### G 0{bfrightened=false;}
		goto see;
	death.bleedout:
		#### H 5{
			A_GiveInventory("HDCorpseFlags");
			actor ttt=spawn("tempshield",pos);
			ttt.vel=vel;ttt.master=self;
		}
		#### I 5{
			if(!random(0,2))A_PlaySound("grunt/bleedout",CHAN_VOICE);
		}
		goto deathpostscream;
	death:
		#### H 5{
			A_GiveInventory("HDCorpseFlags");
			actor ttt=spawn("tempshield",pos);
			ttt.vel=vel;ttt.master=self;
		}
		#### I 5 A_Scream();
	deathpostscream:
		#### J 5{
			actor ttt=spawn("tempshield2",pos);
			ttt.vel=vel;ttt.master=self;
			A_GiveInventory("NoBlockWepDrop");
		}
		#### K 5;
	dead:
		#### K 3 canraise{if(abs(vel.z)<2.)frame++;}
		#### L 5 canraise{if(abs(vel.z)>=2.)setstatelabel("dead");}
		wait;
	xdeathbrewtlelulz:
		#### M 5{
			bshootable=false;
			A_GiveInventory("IsGibbed");
		}
		#### N 5{
			spawn("MegaBloodSplatter",pos+(0,0,34));
			A_XScream();
		}
		#### OPQRST 5;
		goto xdead;
	xdeath:
		#### M 5{
			bshootable=false;
			A_GiveInventory("IsGibbed");
		}
		#### N 5{
			spawn("MegaBloodSplatter",pos+(0,0,34));
			A_XScream();
		}
		#### O 0 A_GiveInventory("NoBlockWepDrop");
		#### OP 5 spawn("MegaBloodSplatter",pos+(0,0,34));
		#### QRST 5;
		goto xdead;
	xdead:
		#### T 3 canraise{if(abs(vel.z)<2.)frame++;}
		#### U 5 canraise{if(abs(vel.z)>=2.)setstatelabel("xdead");}
		wait;
	raise:
		#### A 0 A_GiveInventory("HDCorpseFlags");
		#### A 0 A_JumpIfInventory("IsGibbed",1,"RaiseGibbed");
		#### L 4 spawn("MegaBloodSplatter",pos+(0,0,34));
		#### LK 6;
		#### JIH 4;
		goto see;
	raisegibbed:
		#### U 12{
			A_TakeInventory("IsGibbed");
			spawn("MegaBloodSplatter",pos+(0,0,34));
		}
		#### T 8;
		#### SRQ 6;
		#### PONM 4;
		#### L 0 A_Die("Ungibbed");
	death.ungibbed:
		#### H 5{
			A_GiveInventory("HDCorpseFlags");
			actor ttt=spawn("tempshield",pos);
			ttt.vel=vel;ttt.master=self;
		}
		#### I 5;
		#### J 5{
			actor ttt=spawn("tempshield2",pos);
			ttt.vel=vel;ttt.master=self;
			A_NoBlocking();
		}
		#### K 5;
		goto dead;
	}
}
class ZombieSemiStormtrooper:ZombieStormTrooper{
	override void postbeginplay(){
		super.postbeginplay();
		firemode=-1;
	}
}

class ZombieSMGStormtrooper:ZombieStormTrooper{
	default{
		maxtargetrange 12000;
		translation "58:66=128:136","214:223=141:148","176:191=24:47","16:34=68:79","92:111=5:8";
	}
	override void postbeginplay(){
		super.postbeginplay();
		mag=30;
		firemode=-2;
	}
	states{
	missile:
		---- A 0{
			if(
				target
				&&!random(0,39)
				&&(200<distance3d(target)<900)
			)setstatelabel("frag");
		}goto super::missile;
	frag:
		---- A 10 A_PlaySound("grunt/sight",CHAN_VOICE);
		---- A 20{
			A_PlaySound("weapons/pocket",CHAN_WEAPON);
			A_FaceTarget(0,0);
			pitch-=random(10,50);
		}
		---- A 10{
			A_SpawnItemEx("HDFragSpoon",cos(pitch)*4,-1,height-6-sin(pitch)*4,cos(pitch)*cos(angle)*4+vel.x,cos(pitch)*sin(angle)*4+vel.y,sin(-pitch)*4+vel.z,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_GiveInventory("GrenadeForce",random(10,30));
			A_GiveInventory("HDGrenadeToss");
			A_Log("Replace this HDGrenadeToss!");
		}
		---- A 0 A_JumpIf(mag<1,"reload");
		goto see;
	}
}


