// ------------------------------------------------------------
//   GRENADE!
// ------------------------------------------------------------

//delete this once all things have been scriptified
class frags:idledummy{
	states{
	spawn:
		TNT1 A 1 nodelay {
			A_SpawnChunks("HDBulletFrag",242,100,700);
			if(hd_debug)A_Log("deprecated frags. Please use A_SpawnChunks directly.");
		}stop;
	}
}
class HDFragGrenadeRoller:HDActor{
	int fuze;
	vector3 keeprolling;
	default{
		-noextremedeath -floorclip +shootable +noblood
		+activatemcross;-noteleport;
		+missile +bounceonactors +usebouncestate 
			bouncetype "doom";bouncesound "misc/fragknock";
		radius 4;height 4;damagetype "none";
		scale 0.3;
		obituary "%o was fragged by %k.";
		radiusdamagefactor 0.04;pushfactor 1.4;maxstepheight 2;mass 30;
	}
	states{
	spawn:
		FRAG A 0 nodelay{
			A_Frighten(256);
		}
	spawn2:
		#### BCD 2{
			if(abs(vel.z-keeprolling.z)>10)A_PlaySound("misc/fragknock",CHAN_BODY);
			else if(floorz>=pos.z)A_PlaySound("misc/fragroll");
			keeprolling=vel;
			if(abs(vel.x)<0.4 && abs(vel.y)<0.4) setstatelabel("death");
		}loop;
	bounce:
		---- A 0{
			bmissile=false;
			vel*=0.3;
		}goto spawn2;
	death:
		---- A 2{
			if(abs(vel.z-keeprolling.z)>3){
				A_PlaySound("misc/fragknock",CHAN_BODY);
				keeprolling=vel;
			}
			if(abs(vel.x)>0.4 || abs(vel.y)>0.4) setstatelabel("spawn");
		}wait;
	destroy:
		TNT1 A 1{
			bsolid=false;bpushable=false;bmissile=false;bnointeraction=true;bshootable=false;
			spawn("DistantRocket",pos);
			A_DistantQuake(4,35,512,10);
			A_PlaySound("world/explode",1,7);
			A_AlertMonsters();
			actor xpl=spawn("WallChunker",self.pos-(0,0,1),ALLOW_REPLACE);
				xpl.target=target;xpl.master=master;xpl.stamina=stamina;
			xpl=spawn("HDExplosion",self.pos-(0,0,1),ALLOW_REPLACE);
				xpl.target=target;xpl.master=master;xpl.stamina=stamina;
			A_Blast(
				pushradius:256,pushamount:128,fullpushradius:96,
				fragradius:256,fragdamage:256,
				gibradius:24,gibamount:random(2,9)*10
			);
			A_SpawnChunks("BigWallChunk",14,4,12);
			A_SpawnChunks("HDBulletFrag",360,100,800);
		}
		stop;
	}
	override void tick(){
		ClearInterpolation();
		if(globalfreeze||level.Frozen) return;
		else if(bnointeraction){
			nexttic();
			return;
		}else{
			fuze++;
			if(fuze>=140 && !bnointeraction){
				setstatelabel("destroy");
				nexttic();
				return;
			}else super.tick();
		}
	}
}
class HDFragGrenade:SlowProjectile{
	int fuze;
	vector3 keeprolling;
	default{
		-noextremedeath -floorclip +bloodlessimpact
		+shootable -noblockmap +noblood
		radius 5;height 5;damagetype "none";
		scale 0.3;
		obituary "%o was fragged by %k.";
		mass 500;
		+activatemcross;-noteleport;
	}
	override void tick(){
		ClearInterpolation();
		if(globalfreeze||level.Frozen)return;
		if(fuze<140){
			fuze++;
			keeprolling=vel;
			super.tick();
		}else{
			if(inthesky){
				spawn("DistantRocket",pos);
				A_SpawnChunks("HDBulletFrag",360,400,800);
				destroy();return;
			}
			actor gr=spawn("HDFragGrenadeRoller",pos);
			gr.target=self.target;gr.master=self.master;gr.vel=self.vel;
			gr.setstatelabel("destroy");
			destroy();return;
		}
	}
	override void postbeginplay(){
		actor.postbeginplay();
		shootz = height*0.5+8;
		divrad=1./(radius*1.9);
		grav=getgravity();
	}
	states{
	spawn:
		FRAG BCD 2;
		loop;
	death:
		TNT1 A 10{
			bmissile=false;
			let gr=HDFragGrenadeRoller(spawn("HDFragGrenadeRoller",self.pos));
			if(!gr)return;
			gr.target=self.target;gr.master=self.master;
			gr.fuze=self.fuze;
			gr.vel=self.keeprolling;
			gr.keeprolling=self.keeprolling;
			gr.A_Frighten(256);
			gr.A_PlaySound("misc/fragknock",CHAN_BODY);
		}stop;
	}
}
class HDFragSpoon:HDDebris{
	default{
		scale 0.3;bouncefactor 0.8;
		bouncesound "misc/casing4";
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_PlaySound("weapons/grenopen",0,2);
	}
	states{
	spawn:
		FRGP A 2{roll+=40;}wait;
	death:
		FRGP A -1;
	}
}


class HDGrenadeToss:ActionItem{
	action vector3 SwingThrow(){
		vector2 iyy=(angle,pitch);
		double cosp=cos(iyy.y);
		vector3 oldpos=(
			cosp*cos(iyy.x),
			cosp*sin(iyy.x),
			sin(iyy.y)
		);
		iyy+=(getplayerinput(MODINPUT_YAW),getplayerinput(MODINPUT_PITCH))*(360./65536.);
		cosp=cos(iyy.y);
		vector3 newpos=(
			cosp*cos(iyy.x),
			cosp*sin(iyy.x),
			sin(iyy.y)
		);
		return newpos-oldpos;
	}
	states{
	pickup:
		TNT1 A 0{
			if(countinv("SpoonOff")<1){A_SpawnItemEx("HDFragSpoon",cos(pitch)*-4,-3,height-6-sin(pitch)*-4,cos(pitch)*cos(angle-random(30,45))*3+vel.x,cos(pitch)*sin(angle-random(30,45))*3+vel.y,-sin(pitch+random(10,20))*3+vel.z,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
			int garbage;actor gg;
			[garbage,gg]=A_SpawnItemEx("HDFragGrenade",0,0,height-6,cos(pitch)*cos(angle)*4+vel.x,cos(pitch)*sin(angle)*4+vel.y,-sin(pitch)*4+vel.z,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);

			A_TakeInventory("HDFragGrenadeAmmo",1,TIF_NOTAKEINFINITE);
			int gforce=clamp(countinv("GrenadeForce"),2,40+health*0.1);

			let grenade=HDFragGrenade(gg);if(!grenade) return;
			if(countinv("powerstrength"))gforce*=2;
			grenade.pitch=pitch;grenade.angle=angle;
			grenade.fuze=countinv("fragtimer");

			if(player)let wp=HDFragGrenades(player.readyweapon);
			if(wp){
				grenade.vel+=SwingThrow()*gforce;
			}
			grenade.a_changevelocity(cos(pitch)*gforce*0.5,0,-sin(pitch)*gforce*0.5,CVF_RELATIVE);
			A_TakeInventory("fragtimer");
			A_TakeInventory("grenadeforce");
		}fail;
	}
}



class HDFragGrenades:HDWeapon{
	default{
		+WEAPON.NO_AUTO_SWITCH +weapon.noalert +weapon.wimpy_weapon
		weapon.selectionorder 803;weapon.slotnumber 0;
		weapon.bobstyle "Alpha";
		weapon.bobspeed 2.5;weapon.bobrangex 0.1;weapon.bobrangey 0.5;
		weapon.ammotype "HDFragGrenadeAmmo";
		weapon.ammotype2 "HDFragGrenadeAmmo";
		weapon.ammogive 0;weapon.ammogive2 0;
		weapon.ammouse 1;weapon.ammouse2 1;
	}
	states{
	select0:
		TNT1 A 0 A_JumpIf(!countinv("HDFragGrenadeAmmo"),"selectinstant");
		TNT1 A 8{
			if(!countinv("NulledWeapon"))A_SetTics(tics+4);
			A_TakeInventory("NulledWeapon");
			A_TakeInventory("FragTimer");
			A_TakeInventory("GrenadeForce");
			A_TakeInventory("NotShot");
		}
		FRGG B 1 A_Raise(32);
		wait;
	selectinstant:
		TNT1 A 0 A_SelectWeapon("Ring");
		TNT1 A 1 A_WeaponReady(WRF_NOFIRE);
		wait;
	deselectinstant:
		TNT1 A 0 A_SelectWeapon("Ring");
		TNT1 A 0 A_Lower(999);
		wait;
	deselect0:
		TNT1 A 0 A_TakeInventory("GrenadeForce");
		TNT1 A 0 A_JumpIfInventory("SpoonOff",1,"deselectoshi");
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"deselectpinbackin");
		TNT1 A 0 A_TakeInventory("FragTimer");
		TNT1 A 0 A_JumpIf(!countinv("HDFragGrenadeAmmo"),"deselectinstant");
	deselect2:
		FRGG B 1 A_Lower(72);
		loop;
	deselectpinbackin:
		TNT1 A 8{
			A_PlaySound("weapons/fragpinin",CHAN_WEAPON);
			A_TakeInventory("FragOut");
			A_TakeInventory("SpoonOff");
			A_TakeInventory("ReallyPull");
		}
		FRGG A 1 A_Lower(72);
		wait;
	deselectoshi:
		TNT1 A 0{
			A_TakeInventory("FragOut");
			A_TakeInventory("SpoonOff");
			A_TakeInventory("ReallyPull");
			A_GiveInventory("GrenadeForce",random(10,20));
			A_GiveInventory("HDGrenadeToss");
		}
		TNT1 A 1 A_Lower(72);
		wait;
	ready:
		TNT1 A 0 A_JumpifInventory("SpoonOff",1,"cooking");
		TNT1 A 0 A_JumpifInventory("FragOut",1,"pinout");
		TNT1 A 0{
			A_TakeInventory("GrenadeForce");
			A_TakeInventory("FragTimer");
			A_TakeInventory("ReallyPull");
		}
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,"ready2");
		TNT1 A 0 A_JumpIf(!countinv("HDFragGrenadeAmmo"),"selectinstant");
		FRGG B 1 A_WeaponReady();
		goto ready3;
	ready3:
		TNT1 A 0{
			A_TakeInventory("JustThrew");
			A_TakeInventory("WeaponBusy");
		}goto readyend;

	pinout:
		FRGG A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		loop;
	cooking:
		FRGG A 0 A_JumpIfInventory("FragTimer",136,"oshi");
		FRGG A 0 A_GiveInventory("FragTimer",1);
		FRGG A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		loop;

	altfire:
		TNT1 A 0 A_JumpIfInventory("SpoonOff",1,"altidle");
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"startcooking");
		TNT1 A 0 A_JumpIf(!countinv("HDFragGrenadeAmmo"),"selectinstant");
		goto altidle;
	althold:
		TNT1 A 0 A_JumpIfInventory("SpoonOff",1,"altidle");
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"altidle");
		TNT1 A 0 A_JumpIf(!countinv("HDFragGrenadeAmmo"),"selectinstant");
		goto startpull;
	altidle:
		TNT1 A 0{
			if(countinv("SpoonOff"))A_GiveInventory("FragTimer",1);
		}
		TNT1 A 0 A_JumpIfInventory("FragTimer",136,"oshi");
		TNT1 A 1 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_Refire();
		goto ready;
	startpull:
		FRGG B 0 A_JumpifInventory("ReallyPull",26,"endpull");
		FRGG B 1 A_GiveInventory("ReallyPull");
		FRGG B 0 A_Refire();
		goto ready;
	endpull:
		FRGG B 1 offset(0,34)A_TakeInventory("ReallyPull");
		FRGG B 1 offset(0,36);
		FRGG B 1 offset(0,38);
		TNT1 A 6;
		TNT1 A 3{
			A_GiveInventory("FragOut");
			A_PlaySound("weapons/fragpinout",CHAN_WEAPON);
			A_Refire();
		}goto ready;
	startcooking:
		TNT1 A 6{
			A_SpawnItemEx("HDFragSpoon",
				cos(pitch)*4,-1,height-6-sin(pitch)*4,
					cos(pitch)*cos(angle)*4+vel.x,
					cos(pitch)*sin(angle)*4+vel.y,
					-sin(pitch)*4+vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			A_GiveInventory("SpoonOff",1);
			if(getcvar("hd_helptext"))
				A_Print("\cgThe fuze is lit!\n\n\n\n\cgRemember to throw!",4,"SMALLFONT");
			A_PlaySound("weapons/fragspoonoff",0,1,0,20);
		}
		TNT1 A 0 A_Refire();
		goto ready;
	oshi:
		TNT1 A 0 A_GiveInventory("GrenadeForce",random(10,20));
		goto throw;
	fire:
		TNT1 A 0 A_JumpIfInventory("JustThrew",1,"nope");
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"hold2");
		TNT1 A 0 A_JumpIf(!countinv("HDFragGrenadeAmmo"),"selectinstant");
		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,3);
		FRGG B 1 offset(0,34);
		FRGG B 1 offset(0,36);
		FRGG B 1 offset(0,38);
		TNT1 A 0 A_Refire();
		goto ready;
	hold:
		TNT1 A 0 A_JumpIfInventory("JustThrew",1,"nope");
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"hold2");
		TNT1 A 0 A_JumpIf(!countinv("HDFragGrenadeAmmo"),"selectinstant");
		TNT1 A 0 A_JumpIfInventory("GrenadeForce",1,"hold2");
		TNT1 A 8 A_JumpIfInventory("PowerStrength",1,1);
		TNT1 A 0 A_GiveInventory("FragOut",1);
		TNT1 A 3 A_PlaySound("weapons/rifleclick",CHAN_WEAPON);
	hold2:
		TNT1 A 0 A_JumpIfInventory("FragTimer",136,"oshi");
		FRGG E 0 A_JumpIfInventory("GrenadeForce",40,"hold3a");
		FRGG D 0 A_JumpIfInventory("GrenadeForce",30,"hold3a");
		FRGG C 0 A_JumpIfInventory("GrenadeForce",20,"hold3");
		FRGG B 0 A_JumpIfInventory("GrenadeForce",10,"hold3");
		goto hold3;
	hold3a:
		FRGG "#" 0 A_GiveInventory("GrenadeForce");
	hold3:
		FRGG "#" 0 A_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD);
		FRGG "#" 1 A_GiveInventory("GrenadeForce",1);
		TNT1 A 0{
			if(countinv("SpoonOff"))A_GiveInventory("FragTimer",1);
		}
		TNT1 A 0 A_Refire();
		goto throw;
	throw:
		TNT1 A 0 A_GiveInventory("HDGrenadeToss");
		goto followthrough;
	followthrough:
		FRGG A 1 offset(0,34){
			A_TakeInventory("FragOut");
			A_TakeInventory("SpoonOff");
			A_TakeInventory("ReallyPull");
			A_GiveInventory("JustThrew");
		}
		FRGG A 1 offset(0,38);
		FRGG A 1 offset(0,48);
		FRGG A 1 offset(0,52);
		FRGG A 0 A_Refire();
		goto ready;
	reload:
		TNT1 A 0 A_JumpIfInventory("GrenadeForce",1,"pinbackin");
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"altpinbackin");
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,"Ready");
		goto nope;
	pinbackin:
		FRGG A 0 A_TakeInventory("GrenadeForce");
		FRGG B 1 offset(0,34);
		FRGG B 1 offset(0,36);
		FRGG B 1 offset(0,38);
	altpinbackin:
		FRGG A 0 A_JumpIfInventory("FragTimer",1,"juststopthrowing");
		TNT1 A 8 A_PlaySound("weapons/shotgr",CHAN_WEAPON);
		FRGG A 0 A_TakeInventory("FragOut");
		FRGG A 0 A_TakeInventory("SpoonOff");
		FRGG A 0 A_TakeInventory("ReallyPull");
		TNT1 A 0 A_Refire("nullhold");
		FRGG B 1 offset(0,38);
		FRGG B 1 offset(0,36);
		FRGG B 1 offset(0,34);
		goto ready;
	juststopthrowing:
		TNT1 A 10;
		FRGG A 0 A_TakeInventory("GrenadeForce");
		TNT1 A 0 A_Refire();
		FRGG B 1 offset(0,38);
		FRGG B 1 offset(0,36);
		FRGG B 1 offset(0,34);
		goto ready;
	nullhold:
		TNT1 A 1;
		TNT1 A 0 A_Refire("nullhold");
		goto ready;
	spawn:
		TNT1 A 1;
		TNT1 A 0 A_JumpIfInTargetInventory("HDFragGrenades",1,"spawnfresh");
		TNT1 A 0{
			A_GiveToTarget("HDFragGrenades");
			A_GiveToTarget("DropFrag");
		}stop;
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("HDFragGrenadePickup",0,0,0,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
		stop;
	}
}



class FragOut:InventoryFlag{}
class SpoonOff:InventoryFlag{}
class ReallyPull:InventoryFlag{
	default{
		inventory.maxamount 28;
	}
}
class FragTimer:InventoryFlag{
	default{
		inventory.maxamount 140;
	}
}
class GrenadeForce:InventoryFlag{
	default{
		inventory.maxamount 50;
	}
}
class JustThrew:InventoryFlag{}
class HDFragGrenadeAmmo:Ammo{
	default{
		+forcexybillboard
		inventory.icon "FRAGA0";
		inventory.amount 1;
		inventory.maxamount 16;
		ammo.backpackamount 0;
		ammo.backpackmaxamount 60;
		scale 0.3;
		inventory.pickupmessage "Picked up a hand grenade.";
		inventory.pickupsound "weapons/pocket";
	}
	states{
	spawn:
		FRAG A 0 nodelay{
			while(amount>0){
				amount--;
				A_SpawnItemEx("FragP",0,0,0,
					vel.x+frandom(-1,1),vel.y+frandom(-1,1),vel.z+frandom(-1,1),
					0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
				);
			}
		}stop;
	}
}
class FragP:HDUPK replaces HDFragGrenadeAmmo{
	default{
		+forcexybillboard
		scale 0.3;
		height 3;radius 3;
	}
	states{
	spawn:
		FRAG A -1 A_Stop();
	give:
		---- A 0 A_JumpIfInTargetInventory("HDFragGrenadeAmmo",0,"spawn");
		---- A 0{
			A_PlaySound("weapons/pocket");
			ammo g=ammo(spawn("HDFragGrenadeAmmo",pos));
			g.touch(target);
		}stop;
	}
}
