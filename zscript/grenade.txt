// ------------------------------------------------------------
//   GRENADE!
// ------------------------------------------------------------

//delete this once all things have been scriptified
class frags:idledummy{
	states{
	spawn:
		TNT1 A 1 nodelay {
			A_SpawnChunks("nbfrag",242,100,700);
			if(hd_debug)A_Log("deprecated frags. Please use A_SpawnChunks directly.");
		}stop;
	}
}

//grenade fragment - old, to delete
class HDFrag:HDBullet{
	default{
//		missiletype "bullettail";
		damagefunction(0); -painless;
		mass 30; accuracy 2; woundhealth 0;
		decal "BulletScratchSmall"; obituary "%o was fragged.";
	}
	override void postbeginplay(){
		super.postbeginplay();
		master=target;target=null;
		mass=random(20,40);
	}
	states{
	spawn:
		TNT1 A 0;
		goto spawn2;
	death:
		TNT1 A 0{
			actor pf=Spawn("FragPuff",pos,ALLOW_REPLACE);
			pf.target=self.master;
		}goto death1;
	xdeath:
		TNT1 A 1{
			if(user_damage<3) user_damage=random(3,14);
			A_DamageTracer(user_damage,"smallarms0",DMSS_AFFECTARMOR,"None","None",AAPTR_MASTER);
		}stop;
	}
}
class HDFragGrenadeRoller:HDActor{
	int fuze;
	vector3 keeprolling;
	default{
		radius 4;height 4;damagetype "none";
		scale 0.3;
		obituary "%o was fragged by %k.";
		radiusdamagefactor 0.04;pushfactor 3;maxstepheight 2;mass 30;
		-noextremedeath;-floorclip;+pushable;+solid;+noblood;
		+activatemcross;-noteleport;
		+missile;bouncetype "doom";+bounceonactors;+usebouncestate;
			bouncesound "misc/fragknock";
	}
	states{
	spawn:
		FRAG A 0 nodelay{
			A_Frighten(256);
		}
	spawn2:
		FRAG BCD 2{
			keeprolling=vel;
			if(abs(vel.x)<2 && abs(vel.y)<2) setstatelabel("death");
			if(floorz>=pos.z) A_PlaySound("misc/fragroll");
			if(abs(vel.z-keeprolling.z)>10) A_PlaySound("misc/fragknock",CHAN_BODY);
		}loop;
	bounce:
		"----" A 0{
			bmissile=false;bbounceonactors=false;busebouncestate=false;
			vel*=0.3;
		}goto spawn2;
	death:
		"----" A 2{
			if(abs(vel.z-keeprolling.z)>5){
				A_PlaySound("misc/fragknock",CHAN_BODY);
				keeprolling=vel;
			}
			if(abs(vel.x)>2 || abs(vel.y)>2) setstatelabel("spawn");
		}wait;
	destroy:
		TNT1 A 1{
			bsolid=false;bpushable=false;bmissile=false;bnointeraction=true;
			spawn("DistantRocket",pos);
			A_SpawnChunks("BigWallChunk",14,4,12);
			actor xpl=spawn("WallChunker",self.pos-(0,0,1),ALLOW_REPLACE);
				xpl.target=target;xpl.master=master;xpl.stamina=stamina;
			xpl=spawn("HDExplosion",self.pos-(0,0,1),ALLOW_REPLACE);
				xpl.target=target;xpl.master=master;xpl.stamina=stamina;
			A_AlertMonsters();
			A_Blast(
				pushradius:256,pushamount:128,fullpushradius:96,
				fragradius:256,fragdamage:256,
				gibradius:24,gibamount:random(2,9)*10
			);
			A_DistantQuake(4,35,512,10);
			A_PlaySound("world/explode",1,7);
			A_SpawnChunks("nbfrag",360,100,800);
		}
		stop;
	}
	override void tick(){
		if(fuze>=140 && !bnointeraction) setstatelabel("destroy");
		else{
			if(globalfreeze||level.Frozen) return;
			super.tick();
			fuze++;
		}
	}
}
class HDFragGrenade:nb{
	int fuze;
	vector3 keeprolling;
	default{
//		radius 4;height 4;damagetype "none";
		scale 0.3;
		obituary "%o was fragged by %k.";
		-noextremedeath;-floorclip;+noblood;+bloodlessimpact;
		mass 500;
		+activatemcross;-noteleport;
	}
	override void tick(){
		if(fuze<140){
			fuze++;
			keeprolling=vel;
			super.tick();
		}else{
			if(inthesky){
				spawn("DistantRocket",pos);
				A_SpawnChunks("nbfrag",360,400,800);
				destroy();return;
			}
			actor gr=spawn("HDFragGrenadeRoller",pos);
			gr.target=self.target;gr.master=self.master;gr.vel=self.vel;
			gr.setstatelabel("destroy");
			destroy();return;
		}
	}
	override void postbeginplay(){
		actor.postbeginplay();
		shootz = height*0.5+8;
		grav=getgravity();
		if(target){
			speed=2+target.countinv("grenadeforce");
			pitch=target.pitch;
			if(target.countinv("powerstrength")) speed*=2;
			fuze=target.countinv("fragtimer");
			target.A_TakeInventory("fragtimer");
			target.A_TakeInventory("grenadeforce");
			a_changevelocity(cos(pitch)*speed,0,-sin(pitch)*speed,CVF_RELATIVE);
		}
	}
	override void BulletImpact(){
		let gr=HDActor(spawn("HDFragGrenadeRoller",self.pos));
		gr.target=self.target;gr.master=self.master;gr.vel=self.keeprolling;
		gr.A_Frighten(256);
		let gre=HDFragGrenadeRoller(gr);
		if(gre){
			gre.fuze=self.fuze;
			gre.keeprolling=self.keeprolling;
		}
		gr.A_PlaySound("misc/fragknock",CHAN_BODY);
		destroy();return;
	}
	states{
	spawn:
		FRAG BCD 2;
		loop;
	}
}

class HDFragSpoon:HDDebris{
	default{
		scale 0.3;bouncefactor 0.8;
		bouncesound "misc/casing4";
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_PlaySound("weapons/grenopen",0,2);
	}
	states{
	spawn:
		FRGP A 2{roll+=40;}wait;
	death:
		FRGP A -1;
	}
}



