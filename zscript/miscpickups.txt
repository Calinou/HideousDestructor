//-------------------------------------------------
// Map replacers
//-------------------------------------------------
class ClipMagPickup:RandomSpawner replaces Clip{
	default{
		dropitem "ZM66RifleMags",256,12;
		dropitem "HDPistolMag",256,2;
		dropitem "HDSMGMag",256,1;
		dropitem "ArmorBonus",256,1;
	}
}
class ClipBoxPickup:RandomSpawner replaces ClipBox{
	default{
		dropitem "ClipBoxPickup1",256,14;
		dropitem "ClipBoxPickup2",256,4;
		dropitem "HDAB",256,6;
		dropitem "BossRifleSpawner",256,1;
	}
}
class ClipBoxPickup1:ZM66RifleMags{
	override void postbeginplay(){
		super.postbeginplay();
		if(random(0,2))A_SpawnItemEx("HDFragGrenadeAmmo",-3,-3,flags:SXF_NOCHECKPOSITION);
		if(random(0,2)){
			A_SpawnItemEx("HDRocketAmmo",3,3,flags:SXF_NOCHECKPOSITION);
			A_SpawnItemEx("ZM66AssaultRifle",1,1,flags:SXF_NOCHECKPOSITION);
		}else A_SpawnItemEx("ZM66Random",1,1,flags:SXF_NOCHECKPOSITION);
	}
}
class ClipBoxPickup2:HDSMGMag{
	override void postbeginplay(){
		super.postbeginplay();
		if(random(0,2))A_SpawnItemEx("HDFragGrenadeAmmo",-3,-3,flags:SXF_NOCHECKPOSITION);
		if(random(0,2))A_SpawnItemEx("HDSMGMag",3,3,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("HDSMG",1,1,flags:SXF_NOCHECKPOSITION);
	}
}
class ShellRandom:RandomSpawner replaces Shell{
	default{
		dropitem "ShellPickup",256,8;
		dropitem "HDFumbledShell",256,4;
		dropitem "DecoPusher",200,4;
		dropitem "BFGVileShard",200,1;
		dropitem "HDCellpacks",256,1;
		dropitem "ZM66RifleMags",256,1;
		dropitem "HDAB",200,1;
		dropitem "YokaiSpawner",128,1;
	}
}
class ShellBoxRandom:RandomSpawner replaces ShellBox{
	default{
		dropitem "ShellBoxPickup",256,10;
		dropitem "DecoPusher",200,1;
		dropitem "HDCellpacks",256,2;
		dropitem "HDAB",256,1;
	}
}
class RocketBoxRandom:RandomSpawner replaces RocketBox{
	default{
		dropitem "RocketBigPickup",256,14;
		dropitem "HDFragGrenadePickup",256,3;
		dropitem "PortableLadder",256,1;
	}
}
class CellRandom:RandomSpawner replaces Cell{
	default{
		dropitem "BFGVileShard",128,1;
		dropitem "LiberatorMag",256,3;
		dropitem "BrontornisRound",256,2;
		dropitem "HDCellpacks",256,7;
	}
}
class CellPackReplacer:RandomSpawner replaces CellPack{
	default{
		dropitem "BFGVileShard",196,1;
		dropitem "LiberatorMag",256,3;
		dropitem "BrontornisSpawner",256,1;
		dropitem "HDCellpacks",256,4;
		dropitem "HDAB",256,1;
		dropitem "PortableLadder",256,1;
		dropitem "YokaiSpawner",256,1;
	}
}




//-------------------------------------------------
//  The box of MYSTERY!
//-------------------------------------------------
class HDAB:RandomSpawner{
	default{
		dropitem "HDAmBox",256,1;
		dropitem "HDAmBoxUnarmed",256,5;
	}
}
class HDAmBox:HDActor{
	default{
		//$Category "Misc/Hideous Destructor/Traps"
		//$Title "Ammo Box"
		//$Sprite "AMMOA0"

		+shootable +noblood +nopain +ghost
		+lookallaround +nofear
		scale 0.6;
		height 16; radius 16;
		health 100; mass 120;
		meleerange 42;
		radiusdamagefactor 0.5;
		obituary "%o paid no attention to Admiral Ackbar.";
	}
	bool tapped;
	bool disarmed;
	int disarmsteps;
	int skullkey;
	override void postbeginplay(){
		super.postbeginplay();
		if(!random(0,7))skullkey=random(1,3);else skullkey=0;
		disarmed=false;
	}
	override bool used(actor user){
		if(!user||user.countinv("IsMoving"))return false;
		if(tapped&&distance3d(user)<42){
			if(
				!random(0,63)
				||skullkey==1&&user.countinv("RedSkull")
				||skullkey==2&&user.countinv("YellowSkull")
				||skullkey==3&&user.countinv("BlueSkull")
			)setstatelabel("disarm");
			else{
				target=user;
				setstatelabel("trapped");
			}
			return true;
		}else if(disarmsteps>random(5,10)){
			setstatelabel("disarm");
			return true;
		}else{
			vel.z++;
			disarmsteps++;
			tapped=true;
			setstatelabel("tap");
			return true;
		}
		return false;
	}
	void A_DropStuff(
		class<actor> type,
		int amount=1
	){
		for(int i=0;i<amount;i++)A_SpawnItemEx(type,
			frandom(-4,4),frandom(-4,4),5,
			frandom(0,3),0,frandom(-4,4),
			frandom(1,360),SXF_NOCHECKPOSITION
		);
	}
	states{
	tap:
		AMMO A 10;
		AMMO A 0{tapped=false;}
	spawn:
		AMMO A -1;
		stop;
	death:
	trapped:
		AMMO A 3 A_PlaySound("weapons/rifleclick",CHAN_WEAPON);
		AMMO A 0{
			tapped=false;
			switch(random(0,5)){
			case 1:
				A_SpawnItemEx("BFGVileShard",
					flags:SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS
				);
				break;
			case 2:
				A_SpawnItemEx("YokaiSpawner",
					flags:SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS
				);
				break;
			case 3:
				A_FaceTarget(0,0);
				angle+=frandom(-20,20);
				pitch+=frandom(-20,20);
				actor b=spawn("HDBullet9",pos+(0,0,12));
				b.pitch=pitch;b.angle=angle;b.target=self;b.vel+=vel;
				A_SpawnItemEx("HDSpent9mm", -3,1,-1,
					random(-1,-3),random(-1,1),random(-3,-4),
					0,SXF_NOCHECKPOSITION|SXF_SETTARGET
				);
				A_PlaySound("weapons/pistol",CHAN_VOICE);
				break;
			case 4:
				A_SpawnItemEx("HDFragGrenade",0,0,10,1,0,3,
					0,SXF_NOCHECKPOSITION|SXF_SETTARGET
				);
				A_SpawnItemEx("HDFragSpoon",0,0,10,
					random(3,6),0,random(8,16),
					random(-12,12),SXF_NOCHECKPOSITION
				);
				break;
			default:
				spawn("HDExplosion");
				A_Explode(64,64);
				break;
			}
		}goto brokengoodies;
	disarm:
		---- A 0{
			if(!random(0,63)){
				setstatelabel("trapped");
				return;
			}
			class<actor> deadtrap="HDFragGrenadeAmmo";
			int rnd=random(0,3);
			switch(rnd){
			case 1:
			case 2:
				deadtrap="BFGVileShard";
				break;
			case 3:
				deadtrap="HDLoose9mm";
				break;
			default:
				break;
			}
			A_DropItem(deadtrap);
			A_SpawnItemEx("HDAmBoxDisarmed",0,0,1,flags:SXF_NOCHECKPOSITION);
		}stop;
	goodies:
		---- A 0 A_PlaySound("weapons/pocket",CHAN_VOICE);
		---- A 0 A_Jump(256,
			"zeds","smgs","piss",
			"libs","clip","rocs",
			"bron","cell","shel",
			"ieds"
		);
		zeds: ---- AAAAA 0 A_DropItem("ZM66RifleMags");stop;
		smgs: ---- AAAA 0 A_DropItem("HDSMGMag");stop;
		piss: ---- AAAAAA 0 A_DropItem("HDPistolMag");stop;
		libs: ---- AAAA 0 A_DropItem("LiberatorMag");stop;
		clip: ---- AAAAA 0 A_DropItem("BossClip");stop;
		rocs: ---- AAAAA 0 A_DropItem("HDRocketAmmo");stop;
		bron: ---- AAAAA 0 A_DropItem("BrontornisRound");stop;
		cell: ---- AAAAA 0 A_DropItem("HDCellPacks");stop;
		shel: ---- AAAAA 0 A_DropItem("ShellPickup");stop;
		ieds: ---- AAAAAAA 0 A_DropItem("HDIEDKits");stop;
	brokengoodies:
		---- A 0 A_PlaySound("weapons/plasmax",CHAN_VOICE);
		---- A 0 A_DropStuff("HDSmokeChunk",random(0,6));
		---- AAA 0 A_SpawnItemEx("HDSmoke",
			frandom(-1,1),frandom(-1,1),frandom(-1,1),
			0,0,frandom(0,2),0,SXF_NOCHECKPOSITION
		);
		---- A 0 A_Jump(256,
			"brokenzeds","brokensmgs","brokenpiss",
			"brokenlibs","brokenclip","brokenrocs",
			"brokenbron","brokencell","brokenshel"
		);
	brokenzeds:
		---- A 0 A_DropItem("ZM66RifleMags");
		---- AAA 0 A_DropItem("HD4mmMagEmpty");
		---- A 0 A_SpawnItemEx("HDSmokeChunk",
			frandom(-10,10),frandom(-10,10),frandom(1,10),
			frandom(-4,4),frandom(-4,4),frandom(0,2),
			0,SXF_NOCHECKPOSITION,24
		);
		stop;
	brokensmgs:
		---- A 0 A_DropItem("HDSMGMag");
		---- AA 0 A_DropItem("HDSMGEmptyMag");
		---- A 0 A_DropStuff("HDSpent9mm",random(14,30));
		---- A 0 A_DropStuff("HDLoose9mm",random(4,12));
		stop;
	brokenpiss:
		---- A 0 A_DropItem("HDPistolMag");
		---- AAAA 0 A_DropItem("HDPistolEmptyMag");
		---- A 0 A_DropStuff("HDSpent9mm",random(12,20));
		---- A 0 A_DropStuff("HDLoose9mm",random(8,16));
		stop;
	brokenlibs:
		---- A 0 A_DropItem("LiberatorMag");
		---- A 0 A_DropItem("LiberatorEmptyMag");
		---- A 0 A_DropStuff("HDSpent7mm",random(7,14));
		---- A 0 A_DropStuff("HDLoose7mm",random(6,10));
		stop;
	brokenclip:
		---- A 0 A_DropItem("BossClip");
		---- A 0 A_DropStuff("HDSpent7mm",random(12,20));
		---- A 0 A_DropStuff("HDLoose7mm",random(12,30));
		stop;
	brokenrocs:
		---- A 0 A_DropItem("HDRocketAmmo");
		---- AA 0 A_DropItem("DudRocket");
		stop;
	brokenbron:
		---- A 0 A_DropItem("BrontornisRound");
		---- AAA 0 A_SpawnItemEx("HDSmoke",
			frandom(-10,10),frandom(-10,10),frandom(1,10),
			0,0,frandom(0,2),0,SXF_NOCHECKPOSITION
		);
		---- AAA 0 A_SpawnItemEx("HDGunSmoke",
			frandom(-1,1),frandom(-1,1),frandom(2,10),
			0,0,frandom(0,2),0,SXF_NOCHECKPOSITION
		);
		---- A 0{
			actor bbb=spawn("TerrorBolt",pos);
			bbb.vel.z=min(-50,bbb.floorz-bbb.pos.z);
		}
		---- AAAA 0 A_SpawnItemEx("HDSmokeChunk",
			frandom(-10,10),frandom(-10,10),frandom(1,10),
			frandom(-6,6),frandom(-6,6),frandom(0,4),
			0,SXF_NOCHECKPOSITION,24
		);
		stop;
	brokencell:
		---- A 0 A_DropItem("HDCellPackEmpty");
		---- A 0 A_DropItem("HDCellPacks");
		---- AAA 0 A_SpawnItemEx("HDSmoke",
			frandom(-1,1),frandom(-1,1),frandom(1,4),
			0,0,frandom(0,2),0,SXF_NOCHECKPOSITION
		);
		---- AAA 0 A_SpawnItemEx("HDGunSmoke",
			frandom(-1,1),frandom(-1,1),frandom(1,10),
			0,0,frandom(0,2),0,SXF_NOCHECKPOSITION
		);
		---- A 0 A_SpawnItemEx("HDExplosion",
			frandom(-1,1),frandom(-1,1),frandom(3,4),
			0,0,frandom(0,2),0,SXF_NOCHECKPOSITION
		);
		---- AAAAAA random(1,8) A_GiveInventory("CacoZapper");
		stop;
	brokenshel:
		---- A 0 A_DropItem("ShellPickup");
		---- A 0 A_DropStuff("HDFumblingShell",random(8,12));
		---- A 0 A_DropStuff("HDSpentShell",random(4,8));
		stop;
	}
}
class HDAmBoxUnarmed:HDAmBox{
		//$Category "Misc/Hideous Destructor/Traps"
		//$Title "Ammo Box(Unarmed)"
		//$Sprite "OWWVA0"

	states{
	open:
		---- A 0 A_Jump(256,"goodies");
	death:
	trapped:
		---- A 0 A_PlaySound("weapons/plasmax",CHAN_VOICE);
		goto brokengoodies;
	}
}
class HDAmBoxDisarmed:HDAmBoxUnarmed{
	states{
	tap:
		---- A 0 A_Jump(256,"goodies");
	spawn:
		OWWV A -1;
		stop;
	}
}


//-------------------------------------------------
// Health/armour bonus replacers
//-------------------------------------------------
class HDFragGrenadePickup:FragP{
	override void postbeginplay(){
		super.postbeginplay();
		A_SpawnItemEx("FragP",-4,0,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("FragP",-4,4,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("FragP",0,4,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("FragP",4,0,flags:SXF_NOCHECKPOSITION);
		A_SpawnItemEx("FragP",4,4,flags:SXF_NOCHECKPOSITION);
	}
}

class DecoPusher:IdleDummy{
	states{
	spawn:
		TNT1 A 0 nodelay{
			int times=random(1,5);
			class<actor> thingy="HDGoreBits";
			if(!random(0,64)){
				if(!random(0,6))thingy="InnocentBarrel";
				else thingy="InnocentFireCan";
			}else if(!random(0,2)){
				times=random(2,6);
				switch(random(0,3)){
				case 0: thingy="HDSpentShell";times*=random(1,3);break;
				case 1: thingy="HDSpent9mm";times*=random(1,5);break;
				case 2: thingy="HDSpent7mm";break;
				case 3: thingy="TerrorCasing";times=random(1,3);break;
				}
			}
			flinetracedata spawnpos;
			for(int i=0;i<times;i++){
				LineTrace(
					frandom(0,360),frandom(0,512),frandom(-45,45),
					offsetz:32,
					data:spawnpos
				);
				actor aaa=spawn(thingy,spawnpos.hitlocation-spawnpos.hitdir);
				aaa.setz(aaa.floorz);
			}
		}stop;
	}
}
class HDCasingBits:RandomSpawner{
	default{
		dropitem "HDFumblingShell",256,1;
		dropitem "HDSpentShell",256,9;
		dropitem "HDSpent9mm",256,24;
		dropitem "HDSpent7mm",256,6;
		dropitem "TerrorCasing",256,1;
	}
}
class HDGoreBits:RandomSpawner{
	default{
		dropitem "DeadDemon",126,1;
		dropitem "DeadDoomImp",126,1;
		dropitem "DeadZombieMan",96,1;
		dropitem "DeadShotgunGuy",96,1;
		dropitem "DeadRifleman",96,1;
		dropitem "ReallyDeadRifleman",46,1;
		dropitem "ColonGibs",256,4;
		dropitem "Gibs",256,6;
		dropitem "SmallBloodPool",256,8;
		dropitem "BarrelGibs",256,8;
		dropitem "HDCasingBits",256,32;
		dropitem "HDFumbledShell",256,8;
		dropitem "HDSMGEmptyMag",256,3;
		dropitem "HDPistolEmptyMag",256,3;
		dropitem "LiberatorEmptyMag",96,1;
		dropitem "HD4mmMagEmpty",256,8;
	}
}
class HelmFrag:RandomSpawner replaces ArmorBonus{
	default{
		dropitem "DecoPusher",96,20;
		dropitem "SpiritualArmour",96,2;
		dropitem "HDFragGrenades",72,1;
		dropitem "LiberatorMag",48,1;
		dropitem "ZM66RifleMags",48,1;
		dropitem "BFGVileShard",96,1;
		dropitem "HDCellPacks",48,1;
		dropitem "PortableStimpack",48,1;
		dropitem "ClipBox",48,1;
		dropitem "HDAB",48,1;
	}
}
class BlueFrag:RandomSpawner replaces HealthBonus{
	default{
		dropitem "DecoPusher",96,20;
		dropitem "BluePotion",96,2;
		dropitem "HDFragGrenades",72,1;
		dropitem "BFGVileShard",96,1;
		dropitem "HDPistolMag",48,1;
		dropitem "HDCellPacks",72,1;
		dropitem "PortableMedikit",48,1;
		dropitem "PortableStimpack",48,1;
		dropitem "HDAB",48,1;
	}
}





//-------------------------------------------------
// BIG BALLS
//-------------------------------------------------
class RedSphere:RandomSpawner replaces BlurSphere{
	default{
		dropitem "SquadSummoner",256,14;
		dropitem "HDFragGrenades",256,6;
		dropitem "HDBlurSphere",256,1;
		dropitem "GreenArmor",256,2;
		dropitem "BluePotion",256,2;
	}
}
class BlueSphere:HDActor replaces Soulsphere{
	default{
		//$Category "Items/Hideous Destructor/Magic"
		//$Title "Soul Sphere"
		//$Sprite "SOULA0"

		+floatbob
		alpha 0.8;
		scale 0.8;
		stamina 777;
	}
	override bool used(actor user){
		let hdp=hdplayerpawn(user);
		if(hdp)hdp.regenblues+=stamina;
		else user.health+=stamina;
		setstatelabel("grab");
		return true;
	}
	states{
	spawn:
		SOUL ABCDCB random(2,7) bright light("SOULSPHERE");
		loop;
	grab:
		---- A 0{
			vel.z++;
			gravity=0;
			A_PlaySound("misc/p_pkup",CHAN_BODY);
		}
		---- A 1 bright{
			A_SetScale(scale.x*1.01);
			A_FadeOut(0.1);
			A_SpawnItemEx("HDGunSmoke",
				frandom(-4,4),frandom(-4,4),frandom(6,24),
				frandom(-1,1),frandom(-1,1),1,0,
				SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_ABSOLUTEPOSITION
			);
		}wait;
	}
}
class BrownSphere:BlueSphere replaces Megasphere{
		//$Category "Items/Hideous Destructor/Magic"
		//$Title "Megasphere"
		//$Sprite "MEGAA0"

	override bool used(actor user){
		user.A_GiveInventory("SpiritualArmour",1);
		return super.used(user);
	}
	states{
	spawn:
		MEGA ABCD random(2,7) bright;
		loop;
	}
}
class GreenSphere:BlueSphere replaces Invulnerabilitysphere{
	default{
		//$Category "Items/Hideous Destructor/Magic"
		//$Title "Invulnerability Sphere"
		//$Sprite "PINVA0"

		-floatbob -nogravity
		+shootable
		renderstyle "normal";
		scale 0.6;
		health 200;
		mass 1000;
		height 12;
		radius 12;
	}
	override bool used(actor user){
		user.A_GiveInventory("HDInvuln");
		user.A_Quake(3,26,0,220,"none");
		user.A_RadiusGive("HDFireStarter",128,
			RGF_PLAYERS|RGF_MONSTERS|RGF_OBJECTS|RGF_CORPSES,1
		);
		for(int i=45;i<360;i+=90){
			user.A_SpawnItemEx("HDExplosion",
				4,-4,20,user.vel.x,user.vel.y,user.vel.z+1,i,
				SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_ABSOLUTEMOMENTUM
			);
			user.A_SpawnItemEx("HDSmokeChunk",0,0,0,
				user.vel.x+frandom(-12,12),
				user.vel.y+random(-12,12),
				user.vel.z+frandom(4,16),
				0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
			);
		}
		destroy();
		return true;
	}
	states{
	spawn:
		PINV ABCD 6 bright;
		loop;
	death.telefrag:
		TNT1 A 0{
			if(target)used(target);
			else setstatelabel("death");
		}stop;
	death:
		TNT1 A 0{
			for(int i=45;i<360;i+=90){
				A_SpawnItemEx("HDExplosion",
					4,-4,20,vel.x,vel.y,vel.z+1,i,
					SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_ABSOLUTEMOMENTUM
				);
				A_SpawnItemEx("HDSmokeChunk",0,0,0,
					vel.x+frandom(-12,12),
					vel.y+random(-12,12),
					vel.z+frandom(4,16),
					0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
				);
			}
			A_Quake(3,26,0,220,"none");
			actor aaa=spawn("Archangel",pos);
		}
		TNT1 AAAAA 2 A_SpawnItemEx("HDSmoke",
			frandom(-4,4),frandom(-4,4),frandom(1,4),
			flags:SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
		);
		TNT1 AAAAA 4 A_SpawnItemEx("HDSmoke",
			frandom(-4,4),frandom(-4,4),frandom(1,4),
			flags:SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
		);
		stop;
	}
}
class HDInvuln:InvulnerabilitySphere{
	default{
		+inventory.persistentpower
		Powerup.Duration -90;
	}
}


