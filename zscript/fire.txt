// ------------------------------------------------------------
//   Setting things on fire
// ------------------------------------------------------------

class HDFireEnder:InventoryFlag{
	default{
		inventory.maxamount 5;
	}
}

class HDSmokeSmall:HDPuff{
	default{
		scale 0.6;gravity 0.1;
	}
	override void postbeginplay(){
	hdactor.postbeginplay();
		roll=random(0,3)*90;
		fadeafter=0;
		grow=0.01;
		fade=0.9;
		decel=0.9;
		vel.z+=2;
		minalpha=0.1;
	}
	states{
	spawn:
		SMOK BCD 10;
		wait;
	}
}
class HDRedFlame:HDPuff{
	default{
		scale 0.5;gravity 0;renderstyle "add";
	}
	override void postbeginplay(){
		hdactor.postbeginplay();
		roll=random(0,3)*90;
		fadeafter=3;
		grow=-0.01;
		fade=0.8;
		decel=0.8;
		vel.z+=4;
		tracer=spawn("HDSmokeSmall",pos,ALLOW_REPLACE);
		tracer.vel+=self.vel*0.4+(0,0,0.05);
		minalpha=0.15;
	}
	states{
	spawn:
		BAL1 ABCDE 2 bright light("REDFIRE");
		wait;
	}
}


class HDFireStarter:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			if(!self) return;
			if(hd_debug)a_log("deprecated fire. please use A_Immolate() directly.");
			actor f=spawn("HDFire",pos);
			f.target=self;f.master=self.target;
			f.stamina=random(40,80);
			return;
		}fail;
	}
}


//how to immolate
extend class HDActor{
	//should be in HDActor once all conversions are done
	//A_Immolate(tracer,target);
	virtual void A_Immolate(
		actor victim,
		actor perpetrator,
		int duration=0
	){
		actor f=victim.spawn("HDFire",victim.pos);
		f.target=victim;f.master=perpetrator;
		if(duration<1) f.stamina=random(40,80);
		else f.stamina=duration;
		if(victim is "PlayerPawn")f.changetid(-7677);
	}
}
//fire actor
class HDFire:IdleDummy{
	int halfrad;int minz;int maxz;int lastheight;
	default{
		obituary "%o was burned by %k.";
	}
	override void postbeginplay(){
		super.postbeginplay();
		if(target){
			stamina=target.ApplyDamageFactor("Thermal",stamina);
			if(target is "PlayerPawn" || target is "HDPlayerCorpse"){
				changetid(-7677);
				if(!skill||hd_lowdamage)stamina=max(1,stamina*0.3);
			}
		}
		if(A_CheckProximity("null","HDFire",64,12,CPXF_CHECKSIGHT|CPXF_SETTRACER)){
			tracer.stamina+=stamina;
			destroy();
			return;
		}
		if(hd_debug)A_Log(string.format("fire duration \ci%i",stamina));
	}
	override void ondestroy(){
		if(target && target is "PersistentDamager") target.destroy();
		super.ondestroy();
	}
	states{
	spawn:
		TNT1 A 4{
			if(waterlevel){
				destroy();
				if(waterlevel<2)spawn("HDSmoke",pos);
				return;
			}
			if(!master)master=self;
			if(!target){
				target=spawn("PersistentDamager",self.pos);
				target.target=master;
				if(stamina>20) stamina=20;
			}
			A_SetTics(clamp(random(8,30-stamina*0.1),4,12));
			if(stamina<=0 || target.countinv("HDFireEnder")>0){
				A_TakeFromTarget("HDFireEnder");
				destroy();
				return;
			}
			stamina--;

			//damage the target
			//don't touch the bsolid, else crash trying to hurt the plasma beamspot
			if(target.bsolid)
				target.damagemobj(self,master,1,"Thermal",flags:DMG_NO_FACTOR);

			//set flame spawn point
			if(lastheight!=target.height){ //poll only height
				lastheight=target.height;
				if(target.radius<8) halfrad=4;
				else halfrad=ceil(target.radius*0.5);
				minz=floor(target.height*0.2);
				if(target.height<4) maxz=4;
				else maxz=ceil(target.height*0.75);
			}

			//spawn the flame
			setorigin(target.pos+(random(-halfrad,halfrad),random(-halfrad,halfrad),random(minz,maxz)),false);
			actor sp=spawn("HDRedFlame",pos);
			sp.vel+=target.vel+(frandom(-2,2),frandom(-2,2),frandom(-1,3));
			A_PlaySound("misc/firecrkl",CHAN_AUTO,0.4,0,6);

			//check if player
			let tgt=HDPlayerPawn(target);
			if(tgt){
				A_AlertMonsters();
				A_TakeFromTarget("PowerFrightener");
				A_TakeFromTarget("IsWeaponReady");
				A_GiveToTarget("IsHurt",1);
				A_GiveToTarget("IsMoving",4);
				//radsuit stops fire
				if(tgt.countinv("PowerIronFeet")>0){
					if(random(1,256)>250){
						A_TakeFromTarget("PowerIronFeet");
						A_TakeFromTarget("HDRadSuit");
						A_TakeFromTarget("PortableRadSuit");
					}
					if(stamina>3)stamina=random(0,3);
				}
			}
		}wait;
	}
}
