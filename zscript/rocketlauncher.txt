// ------------------------------------------------------------
// Rocket Launcher
// ------------------------------------------------------------
class HDRL:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Rocket Launcher"
		//$Sprite "LAUNA0"

		+weapon.explosive
		weapon.selectionorder 92;
		weapon.slotnumber 5;
		scale 0.6;
		inventory.pickupmessage "You got the rocket launcher!";
	}
	override void tick(){
		super.tick();
		drainheat(RLS_SMOKE,12);
	}
	override void postbeginplay(){
		super.postbeginplay();
		if(owner&&owner.player){
			int glm=cvar.getcvar("hd_rlmode",owner.player).getint();
			if(!glm)weaponstatus[0]|=RLF_GRENADEMODE;
			else{
				weaponstatus[0]&=~RLF_GRENADEMODE;
				if(glm>1)weaponstatus[RLS_CHAMBER]=2;
			}

			if(cvar.getcvar("hd_rlzoom",owner.player).getbool())
				weaponstatus[0]|=RLF_ZOOM;
				else weaponstatus[0]&=~RLF_ZOOM;
		}
	}
	states{
	select0:
		MISG A 0;
		goto select0big;
	deselect0:
		MISG A 0;
		goto deselect0small;

	ready:
		MISG A 1 A_WeaponReady(WRF_ALL);
		goto readyend;

	firemode:
	abadjust:
		---- A 2;
		---- A 0{
			if(PressingFire()||PressingAltfire()){
				if(PressingFire())invoker.airburst++;
				else invoker.airburst=
					max(0,invoker.airburst-1);
				setweaponstate("abadjust");
			}else if(PressingZoom()){
				invoker.airburst=0;
				setweaponstate("nope");
			}else if(PressingFireMode())setweaponstate("abadjust");
		}goto nope;


	fire:
		MISG A 1;
		goto shoot;
	althold:
	hold:
		---- A 0;
		goto nope;
	shoot:
		MISG A 2{
			int chm=invoker.weaponstatus[RLS_CHAMBER];
			if(chm<1){
				setweaponstate("chamber_manual");
				return;
			}
			gyrogrenade rkt;
			if(
				invoker.weaponstatus[0]&RLF_GRENADEMODE
				&&chm==1
			){
				//shoot a grenade
				A_FireHDGL();
				invoker.weaponstatus[RLS_SMOKE]+=5;
				invoker.weaponstatus[RLS_CHAMBER]=0;
				setweaponstate("chamber");
			}else{
				//shoot a rocket
				if(chm>1){
					rkt=gyrogrenade(spawn("HDHEAT",pos+(0,0,height-8)));
					A_ChangeVelocity(cos(pitch)*-1,0,sin(pitch)*1,CVF_RELATIVE);
				}else rkt=gyrogrenade(spawn("GyroGrenade",pos+(0,0,height-8)));
				invoker.weaponstatus[RLS_SMOKE]+=50;
				rkt.angle=angle;rkt.target=self;rkt.master=self;
				if(invoker.weaponstatus[0]&RLF_ZOOM)rkt.pitch=pitch-1;else rkt.pitch=pitch;
				rkt.primed=false;
				rkt.isrocket=true;
				if(
					chm==1
					&&invoker.airburst>0
				)rkt.fuze=max(2,invoker.airburst); //airburst 1 is a bad idea
					else rkt.fuze=0;
				invoker.airburst=0;
				invoker.weaponstatus[RLS_CHAMBER]=0;
				A_PlaySound("weapons/rockignite",CHAN_AUTO);
				A_PlaySound("weapons/bronto",5);
			}
		}
		MISG A 2{
			A_ZoomFactor(0.98);
			if(gunbraced()){
				hdplayerpawn(self).gunbraced=false;
				A_MuzzleClimb(
					0,0,
					frandom(1,1.2),-frandom(1,1.5),
					frandom(0.7,0.9),-frandom(1.5,2),
					-frandom(0.8,1.),frandom(2,3)
				);
				A_ChangeVelocity(cos(pitch)*-1,0,sin(pitch)*1,CVF_RELATIVE);
			}else{
				A_MuzzleClimb(
					0,0,
					frandom(1.2,1.7),-frandom(2,2.5),
					frandom(1.,1.2),-frandom(2.5,3),
					frandom(0.6,0.8),-frandom(2,3)
				);
				A_ChangeVelocity(cos(pitch)*-3,0,sin(pitch)*3,CVF_RELATIVE);
				if(self is "hdplayerpawn")hdplayerpawn(self).stunned+=10;
			}
		} 
		MISG B 4{
			A_ZoomFactor(1.);
			A_Gunflash();
		}goto chamber;
	flash:
		MISF A 1 bright{
			A_PlaySound("weapons/rocklaunch",CHAN_AUTO,0.6);
			HDFlashAlpha(128);
			A_Light1();
		}
		MISF B 2 bright A_Light2();
		MISF C 2 bright A_Light1();
		MISF D 1 bright A_Light0();
		TNT1 A 0 A_AlertMonsters();
		stop;

	chamber:
		MISG A 1 offset(0,34){
			if(invoker.weaponstatus[RLS_CHAMBER]>0){
				setweaponstate("nope");
				return;
			}
			A_PlaySound("weapons/shotgr",CHAN_AUTO);
		}
		MISG A 1 offset(1,36){
			if(invoker.weaponstatus[RLS_MAG]>0){
				invoker.weaponstatus[RLS_CHAMBER]=1;
				invoker.weaponstatus[RLS_MAG]--;
			}
		}
		MISG A 1 offset(0,34);
		goto nope;
	chamber_manual:
		MISG A 1 offset(0,34){
			if(invoker.weaponstatus[RLS_CHAMBER]>0){
				setweaponstate("nope");
				return;
			}
			A_PlaySound("weapons/shotgr",CHAN_AUTO);
		}
		MISG A 1 offset(0,37);
		MISG A 2 offset(1,36){
			if(invoker.weaponstatus[RLS_MAG]>0){
				invoker.weaponstatus[RLS_CHAMBER]=1;
				invoker.weaponstatus[RLS_MAG]--;
			}
		}
		MISG A 1 offset(0,34);
		goto nope;

	altfire:
	grenadeorrocket:
		MISG A 1 offset(0,34){
			if(invoker.weaponstatus[RLS_CHAMBER]>1){
				invoker.weaponstatus[0]&=~RLF_GRENADEMODE;
				setweaponstate("nope");
				return;
			}
			A_GiveInventory("WeaponBusy");
		}
		MISG A 2 offset(0,36) A_PlaySound("weapons/shotgr",CHAN_AUTO);
		MISG A 1 offset(0,37);
		MISG A 2 offset(1,38);
		MISG A 3 offset(2,37){
			invoker.weaponstatus[0]^=RLF_GRENADEMODE;
		}
		MISG A 2 offset(1,36);
		MISG A 1 offset(0,34);
		goto nope;
	zoom:
		MISG A 1 offset(0,34);
		MISG A 1 offset(0,36);
		MISG A 2 offset(2,37){
			invoker.weaponstatus[0]^=RLF_ZOOM;
		}
		MISG A 1 offset(1,36);
		MISG A 1 offset(0,34);
		goto nope;
	reload:
		MISG A 0 A_JumpIf(invoker.weaponstatus[RLS_CHAMBER]>1,"altreload");
		MISG A 0 A_JumpIf(
			(invoker.weaponstatus[RLS_CHAMBER]>0&&invoker.weaponstatus[RLS_MAG]>=5)
			||!countinv("HDRocketAmmo"),
			"nope"
		);
		MISG B 1 offset(2,34);
		MISG B 1 offset(4,36) A_MuzzleClimb(-frandom(1.2,2.4),frandom(1.2,2.4));
		MISG B 1 offset(10,38);
		MISG B 4 offset(12,40){
			A_MuzzleClimb(-frandom(1.2,2.4),frandom(1.2,2.4));
			A_PlaySound("weapons/rifleclick2",7);
		}
		MISG B 10 offset(11,38) A_PlaySound("weapons/grenopen",7);
	reload2:
		MISG B 0 A_JumpIf(
			(invoker.weaponstatus[RLS_CHAMBER]>0&&invoker.weaponstatus[RLS_MAG]>=5)
			||!countinv("HDRocketAmmo"),
			"reloadend"
		);
		MISG B 9 offset(10,38) A_PlaySound("weapons/pocket",CHAN_WEAPON);
		MISG B 0{
			if(health<40)A_SetTics(7);
			else if(health<60)A_SetTics(3);
		}
		MISG B 2 offset(12,40)A_PlaySound("weapons/rockreload",CHAN_WEAPON);
		MISG B 3 offset(10,38){
			A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
			if(invoker.weaponstatus[RLS_CHAMBER]<1)invoker.weaponstatus[RLS_CHAMBER]=1;
			else invoker.weaponstatus[RLS_MAG]++;
		}
		MISG BB 1 offset(10,34){
			if(
				PressingUnload()
				||PressingReload()
				||PressingFire()
				||PressingAltfire()
			)setweaponstate("reloadend");
		}loop;
	reloadend:
		MISG B 5 offset(10,36) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		MISG B 1 offset(8,38) A_PlaySound("weapons/rifleclick2",7);
		MISG B 1 offset(4,36);
		MISG B 1 offset(2,34);
		goto nope;

	user1:
	altreload:
		MISG A 4{
			if(
				invoker.weaponstatus[RLS_CHAMBER]<2
				&&!countinv("HEATAmmo")
			)setweaponstate("nope");
		}
		MISG A 1 offset(0,34);
		MISG A 1 offset(0,36);
		MISG B 1 offset(0,38);
		MISG B 4 offset(0,40) A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		MISG B 10 offset(0,38) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		MISG B 9 offset(1,38) A_PlaySound("weapons/pocket",CHAN_WEAPON);
		MISG B 0{
			if(health<40)A_SetTics(7);
			else if(health<60)A_SetTics(3);
		}
		MISG B 4 offset(0,40) A_PlaySound("weapons/rockreload",CHAN_WEAPON);

		MISG B 6{
			int chh=invoker.weaponstatus[RLS_CHAMBER];
			if(chh>1){
				setweaponstate("removeheatfromchamber");
				return;
			}

			if(invoker.weaponstatus[RLS_CHAMBER]<1){
				setweaponstate("loadheatintoemptychamber");
				return;
			}else{
				invoker.weaponstatus[RLS_CHAMBER]=0;
				if(invoker.weaponstatus[RLS_MAG]<5){
					invoker.weaponstatus[RLS_MAG]++;
					return;
				}
				if(A_JumpIfInventory("HDRocketAmmo",0,"null"))A_SpawnItemEx(
					"HDRocketAmmo",10,0,10,vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION
				);else A_GiveInventory("HDRocketAmmo",1);
			}
		}goto loadheatintoemptychamber;
	loadheatintoemptychamber:
		MISG B 3 offset(0,38);
		MISG B 2 offset(0,34){
			invoker.weaponstatus[RLS_CHAMBER]=2;
			invoker.weaponstatus[0]&=~RLF_GRENADEMODE;
			A_TakeInventory("HEATAmmo",1,TIF_NOTAKEINFINITE);
		}goto altreloadend;
	removeheatfromchamber:
		MISG B 10 offset(1,35){
			invoker.weaponstatus[RLS_CHAMBER]=0;
			if(
				A_JumpIfInventory("HEATAmmo",0,"null")
				||(!PressingUnload()&&!PressingAltReload())
			){
				A_SpawnItemEx(
					"HEATAmmo",10,0,height-16,vel.x,vel.y,vel.z+2,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION
				);
				setweaponstate("altreloadend");
			}else{
				A_PlaySound("weapons/pocket",7);
				A_GiveInventory("HEATAmmo",1);
			}
		}goto altreloadend;
	altreloadend:
		MISG B 5 offset(0,36) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		MISG B 0 A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		MISG B 1 offset(0,38);
		MISG A 1 offset(0,36);
		MISG A 1 offset(0,34);
		goto nope;

	user4:
	unload:
		MISG B 4{
			if(
				invoker.weaponstatus[RLS_CHAMBER]>1
			)setweaponstate("altreload");
			else if(
				invoker.weaponstatus[RLS_CHAMBER]<1
				&&invoker.weaponstatus[RLS_MAG]<1
			)setweaponstate("nope");
		}
		MISG B 1 offset(2,34);
		MISG B 1 offset(4,36) A_MuzzleClimb(-frandom(1.2,2.4),frandom(1.2,2.4));
		MISG B 1 offset(10,38);
		MISG B 4 offset(12,40){
			A_MuzzleClimb(-frandom(1.2,2.4),frandom(1.2,2.4));
			A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		}
		MISG B 2 offset(11,38) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
	unload2:
		MISG B 10 offset(12,40) A_PlaySound("weapons/rockreload",7);
		MISG B 9 offset(10,38){
			if(!invoker.weaponstatus[RLS_CHAMBER]){
				invoker.weaponstatus[RLS_MAG]--;
			}else{
				invoker.weaponstatus[RLS_CHAMBER]=0;
			}
			if(
				A_JumpIfInventory("HDRocketAmmo",0,"null")
				||(!PressingUnload()&&!PressingReload())
			){
				A_SpawnItemEx(
					"HDRocketAmmo",10,0,height-16,vel.x,vel.y,vel.z+2,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION
				);
			}else{
				A_PlaySound("weapons/pocket");
				A_GiveInventory("HDRocketAmmo",1);
			}
		}
		MISG B 5 offset(10,36) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		MISG B 4{
			if(health<40)A_SetTics(4);
			A_PlaySound("weapons/rifleclick2",CHAN_AUTO);
		}
		MISG B 0{
			if(
				(invoker.weaponstatus[RLS_CHAMBER]<1&&invoker.weaponstatus[RLS_MAG]<1)
				||PressingUnload()
				||PressingReload()
				||PressingFire()
				||PressingAltfire()
			)setweaponstate("unloadend");
		}goto unload2;
	unloadend:
		MISG B 1 offset(8,38);
		MISG B 1 offset(4,36);
		MISG B 1 offset(2,34);
		goto nope;

	spawn:
		LAUN A -1;
	}
	override void InitializeWepStats(bool idfa){
		weaponstatus[RLS_MAG]=5;
		if(idfa){
			weaponstatus[RLS_CHAMBER]=max(1,weaponstatus[RLS_CHAMBER]);
		}else{
			weaponstatus[0]=0;
			weaponstatus[RLS_CHAMBER]=1;
			airburst=0;
			if(!owner){
				weaponstatus[0]+=random(0,1)*RLF_GRENADEMODE;
				weaponstatus[0]+=random(0,1)*RLF_ZOOM;
			}
		}
	}
}
enum rocketstatus{
	RLF_GRENADEMODE=2,
	RLF_ZOOM=4,

	RLS_STATUS=0,
	RLS_MAG=1,
	RLS_CHAMBER=2,
	RLS_AIRBURST=3,
	RLS_SMOKE=4,
};



class HDRocketAmmo:HDAmmo replaces RocketAmmo{
	default{
		//$Category "Ammo/Hideous Destructor/"
		//$Title "Rocket Grenade"
		//$Sprite "ROQPA0"

		inventory.maxamount 16;
		inventory.pickupmessage "Picked up a rocket grenade.";
		scale 0.5;
	}
	states{
	spawn2:
		ROQP A -1;
		stop;
	}
}
class HEATAmmo:HDAmmo{
	default{
		//$Category "Ammo/Hideous Destructor/"
		//$Title "H.E.A.T. Rocket"
		//$Sprite "ROCKA0"

		+inventory.ignoreskill
		inventory.maxamount 6;
		inventory.pickupmessage "Picked up a H.E.A.T. round.";
		scale 0.4;
	}
	states{
	spawn2:
		ROCK A -1;
		stop;
	}
}





// ------------------------------------------------------------
// Bloop Launcher
// ------------------------------------------------------------
class Blooper:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Grenade Launcher"
		//$Sprite "BLOPA0"

		+WEAPON.EXPLOSIVE
		weapon.selectionorder 93;
		weapon.slotnumber 5;
		scale 0.6;
		inventory.pickupmessage "You got the grenade launcher!";
	}
	states{
	select0:
		BLOG A 0;
		goto select0small;
	deselect0:
		BLOG A 0;
		goto deselect0small;

	ready:
		BLOG A 1 A_WeaponReady(WRF_ALL);
		goto readyend;
	hold:
	altfire:
		BLOG A 0{invoker.airburst=0;}
		goto nope;
	firemode:
	abadjust:
		---- A 2;
		---- A 0{
			if(PressingFire()||PressingAltfire()){
				if(PressingFire())invoker.airburst++;
				else invoker.airburst=
					max(0,invoker.airburst-1);
				setweaponstate("abadjust");
			}else if(PressingZoom()){
				invoker.airburst=0;
				setweaponstate("nope");
			}else if(PressingFireMode())setweaponstate("abadjust");
		}goto nope;

	fire:
		BLOG B 0 A_JumpIf(invoker.weaponstatus[0]&BLOPF_LOADED,"reallyshoot");
		goto nope;
	reallyshoot:
		BLOG A 1{
			A_ZoomFactor(0.965,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			A_FireHDGL();
			invoker.weaponstatus[0]&=~BLOPF_LOADED;
		}
		BLOG A 1 offset(0,37);
		BLOG B 0{
			A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			A_MuzzleClimb(-frandom(2.,2.7),-frandom(3.4,5.2));
		}goto nope;
	loadcommon:
		BLOG B 1 offset(2,34);
		BLOG B 1 offset(4,36) A_MuzzleClimb(-frandom(1.2,2.4),frandom(1.2,2.4));
		BLOG B 1 offset(10,38);
		BLOG B 6 offset(12,40){
			A_MuzzleClimb(-frandom(1.2,2.4),frandom(1.2,2.4));
			A_PlaySound("weapons/rifleclick2",7);
		}
		BLOG B 9 offset(11,38) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		BLOG B 7 offset(10,38) A_PlaySound("weapons/pocket",CHAN_WEAPON);
		BLOG B 0{
			if(health<40)A_SetTics(7);
			else if(health<60)A_SetTics(3);
		}
		BLOG B 4 offset(12,40) A_PlaySound("weapons/rockreload",CHAN_WEAPON);
		BLOG B 2 offset(10,38){
			if(invoker.weaponstatus[0]&BLOPF_JUSTUNLOAD){
				if(
					!(invoker.weaponstatus[0]&BLOPF_LOADED)
				)setweaponstate("reloadend");else{
					invoker.weaponstatus[0]&=~BLOPF_LOADED;
					if(
						(!PressingUnload()&&!PressingReload())
						||A_JumpIfInventory("HDRocketAmmo",0,"null")
					)
					A_SpawnItemEx(
						"HDRocketAmmo",10,0,height-16,vel.x,vel.y,vel.z+2,
						0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION
					);
					else{
						A_GiveInventory("HDRocketAmmo",1);
						A_PlaySound("weapons/pocket",CHAN_WEAPON);
						A_SetTics(4);
					}
				}
			}else{
				if(
					invoker.weaponstatus[0]&BLOPF_LOADED
					||!countinv("HDRocketAmmo")
				)setweaponstate("reloadend");else{
					A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
					invoker.weaponstatus[0]|=BLOPF_LOADED;
					A_SetTics(5);
				}
			}
		}
	reloadend:
		BLOG B 5 offset(10,36) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		BLOG B 0 A_PlaySound("weapons/rifleclick2",7);
		BLOG B 1 offset(8,38);
		BLOG B 1 offset(4,36);
		BLOG B 1 offset(2,34);
		goto ready;
	altreload:
	reload:
		BLOG B 0 A_JumpIf(
			invoker.weaponstatus[0]&BLOPF_LOADED
			||!countinv("HDRocketAmmo"),
			"nope"
		);
		BLOG B 0{
			if(
				invoker.weaponstatus[0]&BLOPF_LOADED
				||!countinv("HDRocketAmmo")
			)setweaponstate("nope");else{
				invoker.weaponstatus[0]&=~BLOPF_JUSTUNLOAD;
			}
		}goto loadcommon;
	unload:
		BLOG B 0{
			if(
				!(invoker.weaponstatus[0]&BLOPF_LOADED)
			)setweaponstate("nope");else{
				invoker.weaponstatus[0]|=BLOPF_JUSTUNLOAD;
			}
		}goto loadcommon;

	spawn:
		BLOP A -1;
	}
	override void InitializeWepStats(bool idfa){
		weaponstatus[0]|=BLOPF_LOADED;
		if(!idfa && !owner){
			airburst=0;
		}
	}
}
enum bloopstatus{
	BLOPF_LOADED=1,
	BLOPF_JUSTUNLOAD=2,

	BLOPS_STATUS=0,
	BLOPS_AIRBURST=1,
};





// ------------------------------------------------------------
// Pickups
// ------------------------------------------------------------
class RocketBigPickup:HDUPK{
	default{
		//$Category "Ammo/Hideous Destructor/"
		//$Title "Box of Rocket Grenades"
		//$Sprite "BROKA0"

		scale 0.5;
	}
	states{
	spawn:
		BROK A 0 A_Stop();
		BROK A -1{
			if(!countinv("Clip")){
				A_GiveInventory("Clip");
				A_SpawnItemEx("HEATAmmo",10,0,0,0,0,0,0,0,220);
				A_SpawnItemEx("HEATAmmo",13,0,0,0,0,0,0,0,220);
				A_SpawnItemEx("HEATAmmo",16,0,0,0,0,0,0,0,220);
			}
		}
	give:
		---- A 0 A_JumpIfInTargetInventory("HDRocketAmmo",0,"spawn");
		---- A 0 A_GiveToTarget("HDRocketAmmo",1);
		---- A 0 A_GiveInventory("HDRocketAmmo",1);
		---- A 0 A_JumpIfInventory("HDRocketAmmo",5,1);
		loop;
		TNT1 A 0;
		stop;
	}
}

