// ------------------------------------------------------------
// HD HUD. HUD for HD. Hdhdhdhdhhdhdhhdhd
// ------------------------------------------------------------
class HDStatusBar:DoomStatusBar{
	int gimmehud;
	int healthbars[14];
	hudfont psmallfont;
	hdplayerpawn hpl;
	override void Init(){
		BaseStatusBar.Init();
		SetSize(0,320,200);

		//Create the font used for the fullscreen HUD
		Font fnt = "HUDFONT_DOOM";
		pSmallFont=HUDFont.Create("SmallFont");
		mHUDFont = HUDFont.Create(fnt,fnt.GetCharWidth("0"),true,1,1);
		fnt = "INDEXFONT_DOOM";
		mIndexFont = HUDFont.Create(fnt,fnt.GetCharWidth("0"),true);
		mAmountFont = HUDFont.Create("INDEXFONT");
		diparms = InventoryBarState.Create();
	}
	enum HDStatBar{
		STB_COMPRAD=12,
		STB_BEATERSIZE=14,
		DI_TOPRIGHT=DI_SCREEN_RIGHT_TOP|DI_ITEM_RIGHT_TOP,
		DI_TOPLEFT=DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP,
		DI_BOTTOMLEFT=DI_SCREEN_LEFT_BOTTOM|DI_ITEM_LEFT_BOTTOM,
		DI_BOTTOMRIGHT=DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM,
	}
	override void Draw(int state,double TicFrac){
		hpl=hdplayerpawn(cplayer.mo);
		if(
			!cplayer
			||!hpl
			||hpl.countinv("WipedOut")
		)return;
		cplayer.inventorytics=0;

		setwepsprites(cplayer.mo);

		if(automapactive){
			DrawAutomapHUD(ticfrac);
			DrawAutomapStuff();
		}else{
			DrawAlwaysStuff();
			if(hpl.health<1)return;
			BeginHUD(forcescaled:true);
			if(state==HUD_StatusBar){
				DrawCommonStuff(state);
			}
			else if(state==HUD_Fullscreen){
				DrawCommonStuff(state);
				DrawFullScreenStuff();
			}
		}
		if(idmypos)drawmypos();
	}
	void DrawAutomapStuff(){
		//KEYS!
		if(hpl.countinv("BlueCard"))drawimage("BKEYB0",(10,24),DI_TOPLEFT);
		if(hpl.countinv("YellowCard"))drawimage("YKEYB0",(10,44),DI_TOPLEFT);
		if(hpl.countinv("RedCard"))drawimage("RKEYB0",(10,64),DI_TOPLEFT);
		if(hpl.countinv("BlueSkull"))drawimage("BSKUA0",(6,30),DI_TOPLEFT);
		if(hpl.countinv("YellowSkull"))drawimage("YSKUA0",(6,50),DI_TOPLEFT);
		if(hpl.countinv("RedSkull"))drawimage("RSKUB0",(6,70),DI_TOPLEFT);

		//lives
		if(!(deathmatch&&teamplay)) //TDM just uses your frags anyway
		drawlives(30,deathmatch?44:24,DI_TOPLEFT|DI_TEXT_ALIGN_LEFT);

		//frags
		if(deathmatch)drawstring(
			mHUDFont,FormatNumber(CPlayer.fragcount),
			(30,24),DI_TOPLEFT|DI_TEXT_ALIGN_LEFT,
			Font.CR_RED
		);

		//mugshot
		if(cplayer.getgender()==0)DrawTexture(GetMugShot(5),(6,-14),DI_BOTTOMLEFT);
		else if(cplayer.getgender()==1)DrawTexture(GetMugShot(5,Mugshot.CUSTOM,"SFF"),(6,-14),DI_BOTTOMLEFT);

		//heartbeat/playercolour tracker
		if(hpl && hpl.beatmax){
			float cpb=hpl.beatcount*1./hpl.beatmax;
			drawimage(
				"GREENPXL",(32,-24-cpb*3),DI_BOTTOMLEFT|DI_TRANSLATABLE,
				cpb,scale:(4,4+hpl.bloodpressure*0.05)
			);
		}
		//health
		if(hd_debug)drawstring(
			mAmountFont,FormatNumber(CPlayer.mo.health),
			(34,-24),DI_BOTTOMLEFT|DI_TEXT_ALIGN_CENTER,
			cplayer.mo.health>70?Font.CR_OLIVE:(cplayer.mo.health>33?Font.CR_GOLD:Font.CR_RED)
		);else DrawHealthTicker((40,-24),DI_BOTTOMLEFT);

		//armour
		DrawArmour((4,86),DI_TOPLEFT);

		//inventory
		DrawInvSel(6,110,10,109,DI_TOPLEFT);
		if(hpl.countinv("WornRadsuit"))drawimage("SUITC0",(11,137),DI_TOPLEFT);

		//guns
		drawselectedweapon(-100,-24,DI_BOTTOMRIGHT);

		drawammocounters(-18);
		drawweaponstash(true,-48);

		drawmypos(10);
	}

	void DrawMyPos(int downpos=(STB_COMPRAD<<2)){
		//permanent mypos
		drawstring(
			psmallfont,string.format("%i  x",hpl.pos.x),
			(-4,downpos+10),DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_TOP,
			Font.CR_OLIVE
		);
		drawstring(
			psmallfont,string.format("%i  y",hpl.pos.y),
			(-4,downpos+18),DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_TOP,
			Font.CR_OLIVE
		);
		drawstring(
			psmallfont,string.format("%i  z",hpl.pos.z),
			(-4,downpos+26),DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_TOP,
			Font.CR_OLIVE
		);
	}
	void DrawFullScreenStuff(){
		int cpg=cplayer.getgender();
		if(cpg==0)DrawTexture(GetMugShot(5),(0,-14),DI_ITEM_CENTER_BOTTOM|DI_SCREEN_CENTER_BOTTOM);
		else if(cpg==1)DrawTexture(GetMugShot(5,Mugshot.CUSTOM,"SFF"),(0,-14),DI_ITEM_CENTER_BOTTOM|DI_SCREEN_CENTER_BOTTOM);
	}
	void DrawAlwaysStuff(){
		if(
			hpl.health>0&&(
				hpl.binvisible
				||hpl.alpha<=0
			)
		)return;

		if(hpl.bshadow&&hpl.countinv("HDBlurSphere")){
			SetSize(0,320,200);
			BeginHUD(forcescaled:true);
			texman.setcameratotexture(hpl.scopecamera,"HDXHCAM4",97);
			let bls=HDBlurSphere(hpl.findinventory("HDBlurSphere"));
			double lv=bls.stamina+frandom[blurhud](-2,2);
			double camalpha=bls.intensity*0.001*clamp(lv,0,9);
			drawimage(
				"HDXHCAM4",(-random[blurhud](30,32)-lv,0),DI_SCREEN_CENTER|DI_ITEM_CENTER,
				alpha:camalpha,scale:(2.0,2.0)*frandom[blurhud](0.99,1.01)
			);
			texman.setcameratotexture(hpl.scopecamera,"HDXHCAM4",110);
			drawimage(
				"HDXHCAM4",(random[blurhud](30,32)+lv,0),DI_SCREEN_CENTER|DI_ITEM_CENTER,
				alpha:camalpha*0.6,scale:(2.0,2.0)*frandom[blurhud](0.99,1.01)
			);
			drawimage(
				"DUSTA0",(0,0),DI_SCREEN_CENTER|DI_ITEM_CENTER,
				alpha:0.01*lv,scale:(1000,600)
			);
			return;
		}

		//draw the crosshair.
		if(hpl.health>0)DrawHDXHair(hpl);

		SetSize(0,320,200);
		BeginHUD(forcescaled:true);
		if(hpl.countinv("WornRadsuit"))drawimage(
			"DRKGRNPX",(0,0),DI_SCREEN_CENTER|DI_ITEM_CENTER,
			alpha:0.6,scale:(1000,600)
		);

		//draw the goggles when they do something.
		let hdla=portableliteamp(hpl.findinventory("PortableLiteAmp"));
		if(hdla && hdla.worn){
			drawimage(
				"GOGGA0",
				-hpl.hudbob,
				DI_SCREEN_CENTER|DI_ITEM_CENTER,
				scale:(2.2,2.4)
			);
		}
	}
	void DrawCommonStuff(int state){
		let cp=HDPlayerPawn(CPlayer.mo);
		if(!cp)return;

		int mxht=-4-mIndexFont.mFont.GetHeight();
		int mhht=-4-mHUDFont.mFont.getheight();

		//inventory
		DrawInvSel(25,-4,42,mxht,DI_SCREEN_CENTER_BOTTOM);

		//keys
		string keytype="";
		if(hpl.countinv("BlueCard"))keytype="STKEYS0";
		if(hpl.countinv("BlueSkull")){
			if(keytype=="")keytype="STKEYS3";
			else keytype="STKEYS6";
		}
		if(keytype!="")drawimage(
			keytype,
			(50,-16),
			DI_SCREEN_CENTER_BOTTOM
		);
		keytype="";
		if(hpl.countinv("YellowCard"))keytype="STKEYS1";
		if(hpl.countinv("YellowSkull")){
			if(keytype=="")keytype="STKEYS4";
			else keytype="STKEYS7";
		}
		if(keytype!="")drawimage(
			keytype,
			(50,-10),
			DI_SCREEN_CENTER_BOTTOM
		);
		keytype="";
		if(hpl.countinv("RedCard"))keytype="STKEYS2";
		if(hpl.countinv("RedSkull")){
			if(keytype=="")keytype="STKEYS5";
			else keytype="STKEYS8";
		}
		if(keytype!="")drawimage(
			keytype,
			(50,-4),
			DI_SCREEN_CENTER_BOTTOM
		);

		//backpack
		if(hpl.countinv("Backpack"))drawimage("BPAKA0",(-55,-4),DI_SCREEN_CENTER_BOTTOM|DI_ITEM_CENTER_BOTTOM);

		//radsuit
		if(hpl.countinv("WornRadsuit"))drawimage(
			"SUITC0",(64,-4),DI_SCREEN_CENTER_BOTTOM|DI_ITEM_CENTER_BOTTOM
		);


		//health
		if(hd_debug)drawstring(
			mAmountFont,FormatNumber(hpl.health),
			(0,mxht),DI_TEXT_ALIGN_CENTER|DI_SCREEN_CENTER_BOTTOM,
			hpl.health>70?Font.CR_OLIVE:(hpl.health>33?Font.CR_GOLD:Font.CR_RED)
		);else DrawHealthTicker();


		//frags
		if(deathmatch)drawstring(
			mHUDFont,FormatNumber(CPlayer.fragcount),
			(74,mhht),DI_TEXT_ALIGN_LEFT|DI_SCREEN_CENTER_BOTTOM,
			Font.CR_RED
		);


		//lives
		if(!(deathmatch&&teamplay)) //TDM just uses your frags anyway
		drawlives(-74,mhht,DI_TEXT_ALIGN_RIGHT|DI_SCREEN_CENTER_BOTTOM);


		//heartbeat/playercolour tracker
		if(hpl.beatmax){
			float cpb=hpl.beatcount*1./hpl.beatmax;
			drawimage(
				"GREENPXL",(-8,-6-cpb*2),DI_SCREEN_CENTER_BOTTOM|DI_TRANSLATABLE,
				cpb,scale:(3,3+hpl.bloodpressure*0.03)
			);
		}

		//armour
		DrawArmour(
			state==HUD_Fullscreen?(-55,-4):(0,-mIndexFont.mFont.GetHeight()*2),
			DI_ITEM_CENTER_BOTTOM|DI_SCREEN_CENTER_BOTTOM
		);


		//full hud consequences
		if(cplayer.buttons&BT_USE)gimmehud=max(0,gimmehud-1);
			else gimmehud=max(cvar.getcvar("hd_hudusedelay",cplayer).getint(),0);
		if(!gimmehud){
			drawweaponstash();
			drawammocounters(mxht);

			//encumbrance
			if(hpl.enc)drawstring(
				mAmountFont,formatnumber(hpl.enc),
				(8,mxht),DI_TEXT_ALIGN_LEFT|DI_SCREEN_LEFT_BOTTOM,
				hpl.overloaded<1.2?Font.CR_OLIVE:(hpl.overloaded>2?Font.CR_RED:Font.CR_GOLD)
			);

			//compass
			int STB_COMPRAD=12;vector2 compos=(-STB_COMPRAD,STB_COMPRAD)*2;
			double compangle=hpl.angle;
			drawstring(psmallfont,"S",
				(cos(compangle),sin(compangle))*STB_COMPRAD+compos,
				DI_TEXT_ALIGN_CENTER|DI_SCREEN_RIGHT_TOP,Font.CR_BLACK
			);
			compangle-=90;
			drawstring(psmallfont,"E",
				(cos(compangle),sin(compangle))*STB_COMPRAD+compos,
				DI_TEXT_ALIGN_CENTER|DI_SCREEN_RIGHT_TOP,Font.CR_GOLD
			);
			compangle-=90;
			drawstring(psmallfont,"N",
				(cos(compangle),sin(compangle))*STB_COMPRAD+compos,
				DI_TEXT_ALIGN_CENTER|DI_SCREEN_RIGHT_TOP,Font.CR_WHITE
			);
			compangle-=90;
			drawstring(psmallfont,"W",
				(cos(compangle),sin(compangle))*STB_COMPRAD+compos,
				DI_TEXT_ALIGN_CENTER|DI_SCREEN_RIGHT_TOP,Font.CR_RED
			);
			drawmypos();
		}

		//weapon readouts!
		if(cplayer.readyweapon)drawweaponstatus(cplayer.readyweapon);

		//weapon sprite
		if(
			cvar.getcvar("hd_hudsprite",cplayer).getbool()
			||!cvar.getcvar("r_drawplayersprites",cplayer).getbool()
			||!gimmehud
		)
		drawselectedweapon(58,-6,DI_SCREEN_CENTER_BOTTOM|DI_ITEM_LEFT_BOTTOM);

		//debug centre line
		if(hd_debug)drawimage(
			"GREENPXL",(0,0),DI_SCREEN_CENTER_BOTTOM,
			0.06,scale:(0.6,100)
		);

	}
	void drawnum(
		int num,double xpos,double ypos,
		int flags=DI_SCREEN_RIGHT_BOTTOM,
		int fnt=Font.CR_OLIVE
	){
		drawstring(
			mAmountFont,formatnumber(num),
			(xpos,ypos),flags|DI_TEXT_ALIGN_RIGHT,
			fnt
		);
	}
	void DrawStrings(
		HUDFont font,
		String brokenstring,
		Vector2 pos,
		int flags=0,
		int translation=Font.CR_DARKGRAY,
		double Alpha=1.,
		int wrapwidth=-1,
		int linespacing=0
	){
		double breakspace=linespacing+smallfont.getheight();
		string stringpiece="";

		while(brokenstring.length()>0){
			int nextbreakindex=brokenstring.indexof("\n");
			if(nextbreakindex<0){
				stringpiece=brokenstring;
				brokenstring="";
			}else{
				stringpiece=brokenstring.left(nextbreakindex);
				brokenstring=brokenstring.mid(nextbreakindex+1,brokenstring.length());
			}
			DrawString(font,stringpiece,pos,flags,translation,Alpha,wrapwidth,linespacing);
			pos.y+=breakspace;
		}
	}
	void drawlives(int posx,int posy,int flags){
		if(
			(
				multiplayer||level.allowrespawn||skill>5
			)&&(
				fraglimit>100||
				(fraglimit>0&&!deathmatch)
			)
		){
			int liv=HDHandlers(eventhandler.find("HDHandlers")).lives[consoleplayer];
			drawstring(
				mHUDFont,FormatNumber(liv),
				(posx,posy),flags|DI_ITEM_RIGHT_BOTTOM|DI_TEXT_ALIGN_LEFT,
				liv>3?Font.CR_GOLD:(liv?Font.CR_BRICK:Font.CR_DARKGRAY)
			);
			
		}
	}
	void DrawHealthTicker(
		vector2 drawpos=(-1,-7),
		int flags=DI_SCREEN_CENTER_BOTTOM
	){
		let cp=hdplayerpawn(cplayer.mo);
		if(!hpl.beatcount){
			for(int i=0;i<(STB_BEATERSIZE-2);i++){
				healthbars[i]=healthbars[i+2];
			}
			int erraticalness=(max(100-hpl.health,hpl.bloodpressure,0)>>4);
			healthbars[STB_BEATERSIZE-2]=clamp(4+random[heart](-erraticalness,erraticalness+1),1,8);
			healthbars[STB_BEATERSIZE-1]=clamp(random[heart](1,erraticalness+1),1,8);
		}
		for(int i=0;i<STB_BEATERSIZE;i++){
			drawimage(
				(cp.health>70?"GREENPXL":cp.health>33?"YELOPXL":"REDPXL"),
				drawpos+(i-(STB_BEATERSIZE>>2),0),
				flags|DI_ITEM_CENTER|(cp.health>70?DI_TRANSLATABLE:0),
				scale:(0.8,healthbars[i])
			);
		}
	}
	void drawambar(
		string ongfx,string offgfx,
		class<inventory> type,
		vector2 coords,
		int flags=DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM
	){
		inventory inv=cplayer.mo.findinventory(type);
		if(!inv||!inv.amount){
			drawimage(offgfx,coords,flags);
		}else drawbar(
				ongfx,offgfx,
				inv.amount,inv.maxamount,
				coords,-1,
				SHADER_VERT,flags
		);
	}
	void DrawArmour(vector2 armourcoords,int flags){
		let armour=HDArmourWorn(cplayer.mo.findinventory("HDArmourWorn"));
		if(armour){
			string armoursprite="ARMSA0";
			string armourback="ARMER0";
			if(armour.meleethreshold==3){
				armoursprite="ARMCA0";
				armourback="ARMER1";
			}
			drawbar(
				armoursprite,armourback,
				armour.amount,armour.maxamount,
				armourcoords,-1,SHADER_VERT,
				flags
			);
		}
	}
	void DrawInvSel(int posx,int posy,int numposx,int numposy,int flags){
		if(CPlayer.mo.InvSel){
			inventory ivs=cplayer.mo.invsel;
			drawinventoryicon(ivs,(posx,posy),
				flags|DI_ITEM_CENTER_BOTTOM
				|((
					ivs is "HDArmour"
					||ivs is "PortableStimpack"
					||ivs is "PortableMedikit"
				)?0:DI_TRANSLATABLE)
			);

			let herp=HERPUsable(ivs);
			if(herp)drawstring(
				mAmountFont,FormatNumber(herp.botid),
				(numposx,numposy-7),flags|DI_TEXT_ALIGN_RIGHT,Font.CR_SAPPHIRE
			);
			let derp=DERPUsable(ivs);
			if(derp)drawstring(
				mAmountFont,FormatNumber(derp.botid),
				(numposx,numposy-7),flags|DI_TEXT_ALIGN_RIGHT,Font.CR_SAPPHIRE
			);
			let ied=HDIEDKit(ivs);
			if(ied)drawstring(
				mAmountFont,FormatNumber(ied.botid),
				(numposx,numposy-7),flags|DI_TEXT_ALIGN_RIGHT,Font.CR_SAPPHIRE
			);

			if(ivs is "PortableLiteAmp"){
				let pla=PortableLiteAmp(ivs);
				if(pla)drawstring(
					mAmountFont,FormatNumber((84000-pla.spent)/840),
					(numposx,numposy),flags|DI_TEXT_ALIGN_RIGHT,Font.CR_OLIVE
				);
			}
			else drawstring(mAmountFont,FormatNumber(ivs.amount),
				(numposx,numposy),flags|DI_TEXT_ALIGN_RIGHT,Font.CR_OLIVE
			);
		}
	}
	string huntersprite;string slayersprite;
	string smgsprite;string zm66sprite;string liberatorsprite;
	string medisprite;string pistolsprite;string pistolsprite2;
	void setwepsprites(playerpawn cp){
		let pstl=hdpistol(hpl.findinventory("HDPistol"));
		if(pstl){
			if(pstl.weaponstatus[PISS_CHAMBER]>0){
				if(pstl.weaponstatus[PISS_AUTO]>=0)
					pistolsprite="PISTC0";else pistolsprite="PISTA0";
			}else{
				if(pstl.weaponstatus[PISS_AUTO]>=0)
					pistolsprite="PISTD0";else pistolsprite="PISTB0";
			}
			let pstl2=hdsecondpistol(hpl.findinventory("HDSecondPistol"));
			if(pstl2){
				if(pstl2.weaponstatus[PISS_CHAMBER]>0){
					if(pstl2.weaponstatus[PISS_AUTO]>=0)
						pistolsprite2="PISTC0";else pistolsprite2="PISTA0";
				}else{
					if(pstl2.weaponstatus[PISS_AUTO]>=0)
						pistolsprite2="PISTD0";else pistolsprite2="PISTB0";
				}
			}
		}

		//smg
		let smgg=hdsmg(hpl.findinventory("HDSMG"));
		if(smgg){
			if(smgg.weaponstatus[SMGS_MAG]<0)smgsprite="SMGNB0";else smgsprite="SMGNA0";
		}

		//zm66
		if(hpl.countinv("ZM66AssaultRifle")){
			string zm66pre;
			let zzz=ZM66AssaultRifle(hpl.findinventory("ZM66AssaultRifle"));
			if(zzz.weaponstatus[0]&ZM66F_NOFIRESELECT)zm66pre="RIFS";
			else if(zzz.weaponstatus[0]&ZM66F_NOLAUNCHER)zm66pre="RIFL";
			else zm66pre="RIGL";
			if(zzz.weaponstatus[ZM66S_MAG]<0)zm66sprite="D";else zm66sprite="A";
			zm66sprite=string.format("%s%s0",zm66pre,zm66sprite);
		}

		//liberator
		if(hpl.countinv("LiberatorRifle")){
			let llb=LiberatorRifle(hpl.findinventory("LiberatorRifle"));
			if(llb.weaponstatus[0]&LIBF_NOLAUNCHER){
				if(llb.weaponstatus[LIBS_MAG]<0)liberatorsprite="BRFLC0";
				else liberatorsprite="BRFLA0";
			}else{
				if(llb.weaponstatus[LIBS_MAG]<0)liberatorsprite="BRFLD0";
				else liberatorsprite="BRFLB0";
			}
		}

		//hunter
		if(hpl.countinv("Hunter")){
			int shl=HDWeapon(hpl.findinventory("Hunter")).weaponstatus[HUNTS_SIDESADDLE];
			if(shl>10)huntersprite="HUNTA0";
			else if(shl>8)huntersprite="HUNTB0";
			else if(shl>6)huntersprite="HUNTC0";
			else if(shl>4)huntersprite="HUNTD0";
			else if(shl>2)huntersprite="HUNTE0";
			else if(shl)huntersprite="HUNTF0";
			else huntersprite="HUNTG0";
		}

		//slayer
		if(hpl.countinv("Slayer")){
			int shl=HDWeapon(hpl.findinventory("Slayer")).weaponstatus[SLAYS_SIDESADDLE];
			if(shl>10)slayersprite="SLAYA0";
			else if(shl>8)slayersprite="SLAYB0";
			else if(shl>6)slayersprite="SLAYC0";
			else if(shl>4)slayersprite="SLAYD0";
			else if(shl>2)slayersprite="SLAYE0";
			else if(shl)slayersprite="SLAYF0";
			else slayersprite="SLAYG0";
		}

		//medikit
		HDMedikitter mdk=HDMedikitter(hpl.findinventory("HDMedikitter"));
		if(mdk){
			if(mdk.usedon)medisprite="MEDIC0";
			else medisprite="MEDIB0";
		}
	}
	void drawselectedweapon(int posx,int posy,int flags){
		if(!cplayer.readyweapon)return;
		weapon w=cplayer.readyweapon;
		string wx="";
		if(w is "")wx="";
		else if(w is "Lumberjack")wx="CSAWA0";
		else if(w is "HDPistol"){
			wx=pistolsprite;
			if(hdpistol(w).weaponstatus[PISS_CHAMBER]>0)posx+=2;
		}
		else if(w is "HDSMG")wx=smgsprite;
		else if(w is "Slayer")wx=slayersprite;
		else if(w is "Hunter")wx=huntersprite;
		else if(w is "ZM66AssaultRifle")wx=zm66sprite;
		else if(w is "Vulcanette")wx="VULCA0";
		else if(w is "Blooper")wx="BLOPA0";
		else if(w is "HDRL")wx="LAUNA0";
		else if(w is "LiberatorRifle")wx=liberatorsprite;
		else if(w is "ThunderBuster")wx="PLASA0";
		else if(w is "Brontornis")wx="BLSTA0";
		else if(w is "BFG9k")wx="BFUGA0";
		else if(w is "BossRifle")wx="BORFA0";
		else if(w is "HDFragGrenades" || w is "Tripwire")wx="FRAGA0";
		else if(w is "HDMedikitter")wx=medisprite;
		else if(w is "HDBerserker")wx="PSTRA0";
		else if(w is "HDBlueBottler")wx="BON1A0";
		else if(w is "HDStimpacker")wx="STIMA0";
		else if(w is "SelfBandage")wx="BLUDC0";
		if(wx!="")drawimage(wx,(posx,posy),flags,
			scale:wx=="CSAWA0"?(0.7,0.7):(wx=="FRAGA0"||wx==medisprite?(0.6,0.6):(1,1))
		);
	}
	void drawwep(class<inventory> type,string img,int zoffs,float scl=1.,bool right=false){
		if(cplayer.mo.countinv(type) && !(cplayer.readyweapon is type)){
			drawimage(img,(right?-8:8,zoffs),
				(right?DI_SCREEN_RIGHT_BOTTOM:DI_SCREEN_LEFT_BOTTOM)|
				(right?DI_ITEM_RIGHT:DI_ITEM_LEFT),
				scale:(scl,scl)
			);
		}
	}
	void drawweaponstash(bool rt=false,int yofs=0){
		drawwep("Lumberjack","CSAWA0",-163+yofs,scl:0.6,right:rt);
		drawwep("HDSMG",smgsprite,-141+yofs,scl:0.8,right:rt);
		drawwep("HDSecondPistol",pistolsprite2,-139+yofs,scl:0.7,right:rt);
		drawwep("HDPistol",pistolsprite,-143+yofs,scl:0.7,right:rt);
		drawwep("Hunter",huntersprite,-128+yofs,right:rt);
		drawwep("Slayer",slayersprite,-120+yofs,right:rt);
		drawwep("Vulcanette","VULCA0",-108+yofs,right:rt);
		drawwep("ZM66AssaultRifle",zm66sprite,-103+yofs,right:rt);
		drawwep("HDRL","LAUNA0",-83+yofs,scl:0.9,right:rt);
		drawwep("Blooper","BLOPA0",-78+yofs,right:rt);
		drawwep("ThunderBuster","PLASA0",-63+yofs,scl:0.8,right:rt);
		drawwep("LiberatorRifle",liberatorsprite,-53+yofs,right:rt);
		drawwep("BFG9k","BFUGA0",-28+yofs,right:rt);
		drawwep("Brontornis","BLSTA0",-23+yofs,right:rt);
		drawwep("BossRifle","BORFA0",-16+yofs,right:rt);
		if(
			cplayer.mo.countinv("HDFragGrenadeAmmo")
			&&!(cplayer.readyweapon is "HDFragGrenades")
		)drawimage(
			"FRAGA0",(rt?-8:8,-11+yofs),
			(rt?DI_SCREEN_RIGHT_BOTTOM:DI_SCREEN_LEFT_BOTTOM)|
			(rt?DI_ITEM_RIGHT:DI_ITEM_LEFT),
			scale:(0.6,0.6)
		);
	}
	void drawammocounters(int mxht){
		int mxhtplus=mxht-24;
		actor cp=cplayer.mo;
		drawimage("CLP3A0",(-78,mxhtplus+4),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM,scale:(2.4,2.4));
		drawimage("CLP2A0",(-74,mxhtplus),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM,scale:(2.4,2.4));
		drawambar("PISARED","HDPISAMO","HDPistolAmmo",(-76,mxhtplus-1));
		drawambar("CLIPRED","CLIPC0","FourMilAmmo",(-54,mxhtplus));
		drawimage("RMAGA0",(-32,mxhtplus+3),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM,scale:(1.5,1.5));

		drawambar("MAGRED","MAGSTAT","SevenMilAmmo",(-35,mxhtplus-1));
		drawbar(
				"RBRSRED","RBRSA3A7",
				hpl.countinv("SevenMilBrass"),hdmath.maxinv(cp,"SevenMilBrass"),
				(-38,mxhtplus+2),-1,
				SHADER_HORZ,DI_ITEM_RIGHT_BOTTOM|DI_SCREEN_RIGHT_BOTTOM
		);
		drawimage("SHELA0",(-10,mxhtplus-1),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM);

		drawimage("BROCA0",(-81,mxht),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM);		
		drawimage("ROCKB0",(-58,mxht-2),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM);
		drawimage("ROQPA0",(-62,mxht+2),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM,scale:(0.85,0.85));
		drawambar("CELLRED","CELLA0","HDCellAmmo",(-30,mxht));
		drawimage("FRAGA0",(-10,mxht),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM,scale:(0.7,0.7));

		drawnum(hpl.countinv("HDPistolMag"),-71,mxhtplus-6);
		drawnum(hpl.countinv("HDSMGMag"),-71,mxhtplus);

		drawnum(hpl.countinv("ZM66RifleMags"),-52,mxhtplus);

		drawnum(hpl.countinv("BossClip"),-30,mxhtplus-6);
		drawnum(hpl.countinv("LiberatorMag"),-30,mxhtplus);

		if(hpl.countinv("Slayer"))drawnum(
			hdweapon(hpl.findinventory("Slayer")).weaponstatus[SLAYS_SIDESADDLE],-4,mxhtplus-14,
			DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_BOTTOM,
			Font.CR_BROWN
		);
		if(hpl.countinv("Hunter"))drawnum(
			hdweapon(hpl.findinventory("Hunter")).weaponstatus[HUNTS_SIDESADDLE],-4,mxhtplus-8,
			DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_BOTTOM,
			fnt:Font.CR_BROWN
		);
		drawnum(hpl.countinv("HDShellAmmo"),-5,mxhtplus,
			DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_BOTTOM
		);

		drawnum(hpl.countinv("BrontornisRound"),-76,mxht);

		drawnum(hpl.countinv("HEATAmmo"),-54,mxht-6);
		drawnum(hpl.countinv("HDRocketAmmo"),-54,mxht);
		drawnum(hpl.countinv("DudRocketAmmo"),-66,mxht-2,
			DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_BOTTOM,
			fnt:Font.CR_BROWN
		);

		drawnum(hpl.countinv("HDCellPacks"),-28,mxht,
			DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_BOTTOM
		);
		drawnum(hpl.countinv("HDCellPackEmpty"),-38,mxht,
			DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_BOTTOM,
			fnt:Font.CR_BROWN
		);
		drawnum(hpl.countinv("HDFragGrenadeAmmo"),-6,mxht,
			DI_TEXT_ALIGN_RIGHT|DI_SCREEN_RIGHT_BOTTOM
		);
	}
}





