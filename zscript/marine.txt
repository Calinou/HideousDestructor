// ------------------------------------------------------------
// Rifleman and derivatives
// ------------------------------------------------------------
class HDMarine:HDActor{// replaces ScriptedMarine{
	default{
		monster;
		+friendly
		+quicktoretaliate
		height 52;
		radius 12;
		health 130;
		speed 8;
		maxdropoffheight 48;
		maxstepheight 48;
		maxtargetrange 65536;
		mass 150;
		seesound "marine/sight";
		painchance 240;
		obituary "%o was shot up by a marine.";
		hitobituary "%o violated a marine's personal space.";

		accuracy 0; //set to hdmw_*+1
		stamina 0; //+1 for setting
	}
	double spread;
	double turnamount;
	int gunloaded;
	int gunloadmax;
	int pistolloaded;
	bool hasdropped;
	int wep;
	override void postbeginplay(){
		super.postbeginplay();
		hasdropped=false;
		spread=0;

		//weapon
		pistolloaded=15;
		if(!accuracy)wep=clamp(random(0,3)-random(0,3),0,3);
		else wep=accuracy-1;

		if(wep==HDMW_ZM66)gunloadmax=51;
		else if(wep==HDMW_HUNTER)gunloadmax=8;
		else if(wep==HDMW_SMG)gunloadmax=31;
		else if(wep==HDMW_ROCKET)gunloadmax=6;
		gunloaded=gunloadmax;


		//appearance
		string trnsl="";
		if(bfriendly){
			bpushable=true;
			if(wep==HDMW_ZM66)trnsl="Rifleman";
			else if(wep==HDMW_HUNTER)trnsl="Enforcer";
			else if(wep==HDMW_SMG)trnsl="Infiltrator";
			else if(wep==HDMW_ROCKET)trnsl="Rocketeer";
		}else trnsl="Tango";

		int melanin=stamina+1;
		if(!accuracy)melanin=random(0,2);
		if(!melanin)trnsl=string.format("White%s",trnsl);
		else if(melanin==1)trnsl=string.format("Brown%s",trnsl);
		else if(melanin==2)trnsl=string.format("Black%s",trnsl);

		A_SetTranslation(trnsl);

		if(random(0,1)){
			painsound="marinef/pain";
			deathsound="marinef/death";
		}else{
			painsound="marine/pain";
			deathsound="marine/death";
		}

		hdmobster.spawnmobster(self);
	}
	enum HDMarineStats{
		HDMW_ZM66=0,
		HDMW_HUNTER=1,
		HDMW_SMG=2,
		HDMW_ROCKET=3,
	}
	states{

	spawn:
//		#### A -1;
		PLAY A -1;
}}
/*
	spawn:
		#### AA 4{hdmobai.wander(self);}
		#### A 0 A_Look();
		#### BB 4{hdmobai.wander(self);}
		#### A 0 A_Look();
		#### CC 4{hdmobai.wander(self);}
		#### A 0 A_Look();
		#### DD 4{hdmobai.wander(self);}
		#### A 0 HealThing(1);
	spawn2:
		#### A 0 A_Jump(60,"spawn");
		#### A 0{angle+=random(-30,30);}
		#### EEE 3 A_Look();
		#### A 0{angle+=random(-30,30);}
		#### EEE 3 A_Look();
		#### A 0 A_Jump(60,"spawn");
		loop;
	see:
		#### A 0 A_JumpIf(gunloaded<1,"reload");
		#### A 0 A_JumpIf(pistolloaded<1,"reloadpistol");
		#### AABBCCDD 2{hdmobai.chase(self);}
		#### A 0{
			if(health<40){A_DamageSelf(random(1,4),"bleedout");}
			else{HealThing(1);}
			A_SetSolid;
		}
		#### E 0 A_JumpIfTargetInLOS("See")
		#### E 0 A_Jump(256,"spwander")
	spwander:
		#### E 0 A_ClearTarget();
		#### AA 3{hdmobai.wander(self);}
		#### A 0 A_Chase(flags:CHF_DONTMOVE);
		#### BB 3{hdmobai.wander(self);}
		#### A 0 A_Chase(flags:CHF_DONTMOVE);
		#### CC 3{hdmobai.wander(self);}
		#### A 0 A_Chase(flags:CHF_DONTMOVE);
		#### DD 3{hdmobai.wander(self);}
		#### A 0 HealThing(1);
		#### E 0 A_Jump(128,"spwander");
	spwander2:
		#### A 0 A_Look();
		#### A 0 A_Jump(4,"spawn");
		#### A 0{angle+=random(-30,30);}
		#### EEE 2 A_Chase(flags:CHF_DONTMOVE);
		#### A 0{angle+=random(-30,30);}
		#### EEE 2 A_Chase(flags:CHF_DONTMOVE);
		#### A 0 A_Jump(60,"spwander");
		#### E 0 A_JumpIfTargetInLOS("see");
		goto spwander
	missile:
		#### A 0 A_JumpIf(gunloaded<1,"reload");
		#### A 0 A_JumpIfTargetInLOS(3,120);
		#### CD 2 A_FaceTarget(90);
		#### E 1 A_SetTics(random(4,10)); //when they just start to aim, not for followup shots!
	missile2:
		#### A 0 A_JumpIfCloser(500,4)
		#### A 0 A_JumpIfCloser(1200,2)
		#### A 0 A_SetUserVar("turnamount",10)
		goto turntoaim
		#### A 0 A_SetUserVar("turnamount",30)
		goto turntoaim
		#### A 0 A_SetUserVar("turnamount",50)
		goto turntoaim
	turntoaim:
		#### E 2 A_FaceTarget(turnamount,turnamount)
		#### A 0 A_JumpIfTargetInLOS(1)
		goto see
		#### A 0 A_JumpIfTargetInLOS(1,10)
		loop
		#### A 0 A_FaceTarget(turnamount,turnamount)
		#### E 1 A_SetTics(random(0,80/turnamount))
		#### A 0 A_SetUserVar("spread",turnamount/10)
		#### A 0 A_Jump(256,"shoot")
	shoot:
		#### A 0 A_JumpIf(gunloaded<1,"shootpistol");
		#### F 10 bright light("SHOT") A_Log("Bang!");
		#### E;
		goto see;

	shootpistol:
		#### A 0 A_JumpIf(pistolloaded<1,"ohforfuckssake");
		#### F 10 bright light("SHOT") A_Log("bangbangbang...");
		#### E;
		goto see;

	ohforfuckssake:
		#### E 4 A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);

	reloadzm66:
		#### AA 1{hdmobai.chase(self,"melee","",flee:true);}
		#### A{
			A_PlaySound("weapons/rifleload",CHAN_WEAPON);
			A_SpawnProjectile("HD4mmMagEmpty",38,0,random(90,120));
		}
		#### BBCC 1{hdmobai.chase(self,"melee","",flee:true);}
		#### DD 1{hdmobai.chase(self,"melee","");}
		#### A 0 A_PlaySound("weapons/pocket",CHAN_WEAPON);
		#### E 10 A_FaceTarget(60,60);
		#### E 8 A_PlaySound("weapons/rifleload",CHAN_WEAPON);
		#### E 2 A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		#### A 0{
			A_PlaySound("weapons/rifleclick",CHAN_WEAPON);
			gunloaded=gunloadmax;
		}
		#### EEE 1 A_Chase(flags:CHF_DONTMOVE);
		goto see;

	melee:
		#### C 7 A_FaceTarget();
		#### D 2;
		#### E 6 A_CustomMeleeAttack(
			random(10,100),"weapons/smack","","none",randompick(0,0,0,1)
		);
		#### ABCD 2{
			if(gunloaded>0){
				setwstatelabel("missile");
				return;
			}
			A_FaceTarget(0,0);
			A_Recoil(-3);
			if(target&&distance3d(target)-target.radius<meleerange)setwstatelabel("melee");
		}goto see;
	pain:
		#### G 3;
		#### G 3 A_Pain();
		#### G 0 A_Jump(100,"se;e")
		#### AB 2 A_FaceTarget(50,50);
		#### CD 3 A_FastChase();
		#### G 0 A_CPosRefire();
		goto missile;
	death:
		#### H 5{
			bpushable=false;
			A_SpawnItemEx("tempshield", 0,0,0, vel.x,vel.y,vel.z, 0,SXF_SETMASTER);
		}
		#### I 5 A_Scream();
	death.bleedout:
		#### J 5 A_GiveInventory("NoBlockWepDrop");
		#### KLM 5;
		#### A 0 A_Jump(256,"Dead");
	xdeath:
		#### O 5 A_UnsetShootable(); 
		#### P 5{
			A_SpawnItemEx("MegaBloodSplatter",0,0,34,flags:SXF_NOCHECKPOSITION);
			A_XScream();
		}
		#### Q 5{
			A_SpawnItemEx("MegaBloodSplatter",0,0,34,flags:SXF_NOCHECKPOSITION);
			A_GiveInventory("NoBlockWepDrop");
		}
		#### Q 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,flags:SXF_NOCHECKPOSITION);
		#### RSTUV 5;
		goto xdead;
	dead:
		#### N -1;
NEED FLOPPY AND GIBBABLE
		stop;
	xdead:
		#### W -1;
		stop;
	raise:
		#### MLKJIH 4;
		#### A 0 A_ChangeFlag("pushable",1);
		goto see;
	}
}

class Rifleman:HDMarine{default{accuracy 1;}}
class BlackRifleman:HDMarine{default{accuracy 1;stamina 3;}}
class BrownRifleman:HDMarine{default{accuracy 1;stamina 2;}}
class WhiteRifleman:HDMarine{default{accuracy 1;stamina 1;}}
class RifleFistman:Rifleman replaces MarineFist{}
class RifleChaingunman:Rifleman replaces MarineChaingun{}

class Enforcer:HDMarine{default{accuracy 2;}}
class BlackEnforcer:HDMarine{default{accuracy 2;stamina 3;}}
class BrownEnforcer:HDMarine{default{accuracy 2;stamina 2;}}
class WhiteEnforcer:HDMarine{default{accuracy 2;stamina 1;}}
class EnforcerShot:Enforcer replaces MarineShotgun {}
class EnforcerSuperShot:Enforcer replaces MarineSSG {}
class EnforcerNoShot:Enforcer replaces MarineBerserk {}

class Infiltrator:HDMarine{default{accuracy 3;}}
class BlackInfiltrator:HDMarine{default{accuracy 3;stamina 3;}}
class BrownInfiltrator:HDMarine{default{accuracy 3;stamina 2;}}
class WhiteInfiltrator:HDMarine{default{accuracy 3;stamina 1;}}
class InfiltratorPistol:Infiltrator replaces MarinePistol{}
class InfiltratorChainsaw:Infiltrator replaces MarineChainsaw{}

class Rocketeer:HDMarine{default{accuracy 4;}}
class BlackRocketeer:HDMarine{default{accuracy 4;stamina 3;}}
class BrownRocketeer:HDMarine{default{accuracy 4;stamina 2;}}
class WhiteRocketeer:HDMarine{default{accuracy 4;stamina 1;}}
class RRocketeer:Rocketeer replaces MarineRocket{}
class BFuglyteer:Rocketeer replaces MarineBFG{}
class Plasmateer:Rocketeer replaces MarinePlasma{}
class Railgunteer:Rocketeer replaces MarineRailgun{}


class Tango:HDMarine{default{-friendly}}
class BlackTango:Tango{default{stamina 3;}}
class BrownTango:Tango{default{stamina 2;}}
class WhiteTango:Tango{default{stamina 1;}}

class BlackRifleTango:Tango{default{accuracy 1;stamina 3;}}
class BrownRifleTango:Tango{default{accuracy 1;stamina 2;}}
class WhiteRifleTango:Tango{default{accuracy 1;stamina 1;}}

class BlackShotTango:Tango{default{accuracy 2;stamina 3;}}
class BrownShotTango:Tango{default{accuracy 2;stamina 2;}}
class WhiteShotTango:Tango{default{accuracy 2;stamina 1;}}

class BlackSMGTango:Tango{default{accuracy 3;stamina 3;}}
class BrownSMGTango:Tango{default{accuracy 3;stamina 2;}}
class WhiteSMGTango:Tango{default{accuracy 3;stamina 1;}}

class BlackRocketTango:Tango{default{accuracy 4;stamina 3;}}
class BrownRocketTango:Tango{default{accuracy 4;stamina 2;}}
class WhiteRocketTango:Tango{default{accuracy 4;stamina 1;}}



// ------------------------------------------------------------
// Marine corpse used by player pawn
// ------------------------------------------------------------
class DeadRifleman replaces DeadMarine{
	translation "112:120=152:159","121:127=9:12"
	-solid
	+shootable
	+ismonster
	+telestomp
	+alwaystelefrag
	mass 200
	radius 12
	height 56
	health 1
	gibhealth 100
	States
	{
	Spawn:
		#### A 0 nodelay
	Spawn2:
		"----" A 1 A_Die("Spawn")
		wait
	XDeath:
	Death:
		"----" A 0{
			A_NoBlocking;
			A_GiveInventory("HDCorpseFlags");
		}
	Dead:
		"####" K 3 canraise A_JumpIf(abs(vel.z)<2,1)
		loop
		"####" LM 5 canraise A_JumpIf(abs(vel.z)>=2,"Dead")
	Death.Spawn:
		"####" A 0 A_NoBlocking
		"####" A 0 A_ChangeFlag("shootable",1)
	Dead2:
		"####" N 5 canraise A_JumpIf(abs(vel.z)>=2,"Dead")
		loop
	Raise:
		"----" A 0 A_GiveInventory("HDCorpseFlags",1)
		"----" A 0 A_UnsetShootable
		"####" A 0 A_SetSolid
		"####" MMK 7 A_SpawnItemEx("MegaBloodSplatter",0,0,4,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		"####" JHE 4
		"####" A 0 A_UnsetSolid
		"####" H 0 A_Jump(32,3)
		#### A 1 A_SpawnItemEx("UndeadRifleman", 0,0,0, 0,0,0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION|SXF_ISTRACER)
		#### A 0 A_GiveInventory("HasDroppedGun",1,AAPTR_TRACER)
		stop
		#### A 1 A_SpawnItemEx("RiflemanBase", 0,0,0, 0,0,0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION|SXF_ISTRACER)
		#### A 0 A_GiveInventory("HasDroppedGun",1,AAPTR_TRACER)
		stop
	XXDeath:
		#### O 5 A_ChangeFlag("shootable",0)
		#### O 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,SXF_NOCHECKPOSITION)
		#### P 5 A_XScream
		#### P 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,SXF_NOCHECKPOSITION)
		#### Q 5 A_NoBlocking
		#### Q 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,SXF_NOCHECKPOSITION)
		#### RSTUV 5
		#### N 0 A_SpawnItemEx("ReallyDeadRifleman",0,0,0,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
		stop
	}
}
class DeadRiflemanCrouched:DeadRifleman
{
	States
	{
	Spawn:
		PLYC A 0 nodelay
		goto super::spawn2
	}
}
class ReallyDeadRifleman:DeadRifleman replaces GibbedMarine
{
	States
	{
	Spawn:
		#### A 0
		"####" A 1 A_Die
		wait
	XDeath:
	Death:
		"####" W 1 A_NoBlocking
	XDead:
		"####" V 3 canraise A_JumpIf(abs(vel.z)<2,1)
		wait
		"####" W 5 canraise A_JumpIf(floorz<=z-6,"XDead")
		wait
	Raise:
		"----" A 0 A_UnsetShootable
		"####" A 0 A_Jump(172, "RaiseZombie")
		"####" WW 8 A_SpawnItemEx("MegaBloodSplatter",0,0,4,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		"####" VUT 7
		"####" SRQ 5
		"####" POH 4
		"####" IJKLM 4
		"----" A 1 A_SpawnItemEx("DeadRifleman", 0,0,0, 0,0,0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION|SXF_ISTRACER)
		"----" A 0 A_GiveInventory("HasDroppedGun",1,AAPTR_TRACER)
		stop
	RaiseZombie:
		#### U 4 A_SpawnItemEx("MegaBloodSplatter",0,0,4,vel.x,vel.y,vel.z+3,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		"####" U 8
		"####" T 4
		"####" T 2 A_PlaySound("weapons/bigcrack",6)
		POSS S 2 A_PlaySound("misc/wallchunks",7)
		POSS AAAAA 0 A_SpawnItemEx("HugeWallChunk",0,0,40,random(4,6),0,random(-2,7),random(1,360))
		"####" SRQ 6
		"####" PONMH 4
		"####" IJKL 4
		"----" A 1 A_SpawnItemEx("DeadZombieStormtrooper",0,0,0,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_ISMASTER)
		"----" A 0 A_GiveInventory("HasDroppedGun",1,AAPTR_MASTER)
		stop
	}
}
class ReallyDeadRiflemanCrouched:ReallyDeadRifleman replaces GibbedMarineExtra
{
	States
	{
	Spawn:
		PLYC A 0 nodelay
		goto super::spawn2
	}
}


// ------------------------------------------------------------
// Undead marines
// ------------------------------------------------------------

class UndeadRifleman:TangoBase
{
	-telestomp
	Translation "112:120=152:159","121:127=9:12"
	Health 100
	gibhealth 100
	SeeSound "grunt/sight"
	PainSound "grunt/pain"
	DeathSound "grunt/death"
	ActiveSound "grunt/active"
	Obituary "%o was shot up by an undead marine."
	HitObituary "%o was beat up by an undead marine."
	States
	{
	Dead:
		#### N 0 A_SpawnItemEx("ReDeadRifleman",0,0,0,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
		stop
	XDead:
		#### N 0 A_SpawnItemEx("ReallyReDeadRifleman",0,0,0,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
		Stop
	}
}
class ReDeadRifleman:DeadRifleman
{
	States
	{
	Raise:
		"----" A 0{
			A_GiveInventory("HDCorpseFlags");
			A_GiveInventory("HasDroppedGun");
		}
		#### MML 8 A_SpawnItemEx("MegaBloodSplatter",0,0,4,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		#### KJIH 4
		#### A 0 A_Jump(80,"RaiseBotch")
		#### A 0 A_UnsetSolid
		#### A 1 A_SpawnItemEx("UndeadRifleman", 0,0,0, 0,0,0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION|SXF_ISMASTER)
		#### A 0 A_GiveInventory("HasDroppedGun",1,AAPTR_MASTER)
		stop
	RaiseBotch:
		#### O 5 A_ChangeFlag("shootable", 0)
		#### O 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,SXF_NOCHECKPOSITION)
		#### P 5 A_XScream
		#### P 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,SXF_NOCHECKPOSITION)
		#### Q 5 A_NoBlocking
		#### Q 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,SXF_NOCHECKPOSITION)
		#### RSTUV 5
		#### N 0 A_SpawnItemEx("ReallyReDeadRifleman",0,0,0,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION|SXF_ISTRACER)
		"----" A 0 A_GiveInventory("HasDroppedGun",1,AAPTR_TRACER)
		Stop
	}
}
class ReallyReDeadRifleman:ReallyDeadRifleman
{
	States
	{
	Raise:
		"----" A 0 A_GiveInventory("HasDroppedGun",1)
		"----" A 0 A_GiveInventory("HDCorpseFlags",1)
		"----" A 0 A_UnsetShootable
		#### A 0 A_Jump(172, "RaiseZombie")
		"####" WW 8 A_SpawnItemEx("MegaBloodSplatter",0,0,4,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		"####" VUT 8
		"####" SRQ 6
		"####" POH 4
		"####" IJKLM 4
		#### A 1 A_SpawnItemEx("RedeadRifleman", 0,0,0, 0,0,0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION|SXF_ISTRACER)
		#### A 0 A_GiveInventory("HasDroppedGun",1,AAPTR_TRACER)
		stop
	}
}


// ------------------------------------------------------------
// Summoned marines - no friendly fire
// ------------------------------------------------------------

class ScaryItem:ActionItem
{
	states
	{
	pickup:
		#### A 0 A_ChangeFlag("frightened",1)
		stop
	}
}
class SquadRiflemanBase
{
	damagefactor "GhostSquadAttack", 0
	Translation "112:120=152:159","121:127=9:12"
	maxtargetrange 65536
	maxdropoffheight 40
	maxstepheight 40
	health 200000000
	gibhealth 500
	renderstyle add
	+noblooddecals bloodtype "idledummy"
	height 50
	radius 12
	speed 8
	damage(1)
	dropitem SquadSummoner 8
	+shootable +noblockmonst +ghost +shadow -solid -pushable
	+nopain +nofear +seeinvisible +nodamage +noclip +nonshootable
	States
	{
	Spawn:
		#### E 10 A_Look();
		loop
	See:
		#### E 0 A_GiveInventory("PowerFrightener",1)
		#### E 0 A_RadiusGive("ScaryItem",512,RGF_MONSTERS|RGF_CUBE,1)
		#### AABBCCDD 2{hdmobai.chase(self);}
		#### A 0 A_ClearTarget
		#### E 0 HealThing(1)
		#### E 0 A_GiveToTarget("ScaryItem",1)
		#### E 0 A_GiveInventory("NotShot",1)
		#### E 0 A_JumpIfInventory("NotShot",360,"Fade")
		loop
	Fade:
		#### A 0 bright A_NoBlocking
	Fade2:
		#### A 2{hdmobai.wander(self);}
		#### E 0 A_FadeOut(0.1)
		#### A 2{hdmobai.wander(self);}
		#### E 0 A_FadeOut(0.1)
		#### B 2{hdmobai.wander(self);}
		#### E 0 A_FadeOut(0.1)
		#### B 2{hdmobai.wander(self);}
		#### E 0 A_FadeOut(0.1)
		#### C 2{hdmobai.wander(self);}
		#### E 0 A_FadeOut(0.1)
		#### C 2{hdmobai.wander(self);}
		#### E 0 A_FadeOut(0.1)
		#### D 2{hdmobai.wander(self);}
		#### E 0 A_FadeOut(0.1)
		#### D 2{hdmobai.wander(self);}
		#### E 0 A_FadeOut(0.1)
		loop
	Missile:
		#### A 0 A_CheckFlag("friendly",2)
		#### A 0 A_Jump(256,2)
		#### A 0 A_AlertMonsters(0,AMF_TARGETEMITTER)
		#### E 0 A_GiveToTarget("ScaryItem",1)
		#### E 0 A_RadiusGive("ScaryItem",1024,RGF_MONSTERS|RGF_CUBE,1)
		#### E 0 A_GiveInventory("PowerFrightener",1)
		#### E 0{
			if(!deathmatch){A_TakeInventory("NotShot");}
		}
		#### E 3 A_Jump(128,1)
	Missile2:
		#### E 7 A_FaceTarget(0,0)
		#### E 0 A_JumpIfCloser(900,"Rifle")
	Grenade:
		#### E 0 A_Jump(160,"Rifle")
		#### E 0 A_JumpIfCloser(760,2)
		#### E 0 A_Jump(256,"rifle")
		#### E 0 NoiseAlert(0,0)
		#### E 0 A_PlaySound("weapons/grenadeshot")
		#### E 12 A_SpawnProjectile("SquadGyroGrenade",44,0,0,0,14)
		#### E 0 A_Jump(256,"see")
	Rifle:
		#### E 4 A_JumpIfCloser(600,"RifleCQB")
		#### E 0 A_Jump(256,"RifleSnipe")
	RifleSnipe:
		#### F 1 bright light("SHOT"){
			A_PlayWeaponSound("weapons/bigrifle");
			pitch+=frandom(-1,1);
			A_GiveInventory("DecoBulleterGhost");
		}
		#### E 2 A_Jump(24, "PostSnipe")

		#### F 1 bright light("SHOT"){
			A_PlayWeaponSound("weapons/bigrifle");
			pitch+=frandom(-1,1);
			A_GiveInventory("DecoBulleterGhost");
		}
		#### E 2 A_Jump(168, "PostSnipe")

		#### F 1 bright light("SHOT"){
			A_PlayWeaponSound("weapons/bigrifle");
			pitch+=frandom(-1,1);
			A_GiveInventory("DecoBulleterGhost");
		}
		#### E 2 A_Jump(96,"PostSnipe")
		#### A 0 A_Jump(256,"PostSnipe")
	PostSnipe:
		#### E 6
		#### E 0 A_Jump(256,"see")
	RifleCQB:
		#### F 1 bright light("SHOT"){
			A_PlayWeaponSound("weapons/bigrifle");
			pitch+=frandom(-1,1);
			A_GiveInventory("DecoBulleterGhost");
		}
		#### E 2

		#### F 1 bright light("SHOT"){
			A_PlayWeaponSound("weapons/bigrifle");
			pitch+=frandom(-1,1);
			A_GiveInventory("DecoBulleterGhost");
		}
		#### E 2 A_Jump(32,"PostCQB")

		#### F 1 bright light("SHOT"){
			A_PlayWeaponSound("weapons/bigrifle");
			pitch+=frandom(-1,1);
			A_GiveInventory("DecoBulleterGhost");
		}
		#### E 2 A_Jump(96, "PostCQB")

		#### F 1 bright light("SHOT"){
			A_PlayWeaponSound("weapons/bigrifle");
			pitch+=frandom(-1,1);
			A_GiveInventory("DecoBulleterGhost");
		}
		#### E 2
		#### A 0 A_Jump(256, "PostCQB")
	PostCQB:
		#### E 0 A_Jump(96,3)
		#### E 9 A_CPosRefire
		#### E 0 A_Jump(256,"missile2")
		#### E 6
		#### E 0 A_Jump(256,"see")
	Melee:
		#### E 0{
			if(!deathmatch){A_TakeInventory("NotShot");}
		}
		#### C 8 A_FaceTarget(0,0)
		#### D 4
		#### E 1 A_CustomMeleeAttack((1),"weapons/smack","","GhostSquadAttack")
		#### E 3 {if(random(1,12)==1){A_GiveInventory("Health",1,AAPTR_TARGET);}}

		#### E 3 A_JumpIfCloser(64,3)
		#### E 4 A_FaceTarget(0,0)
		#### E 0 A_Jump(256,"missile2")

		#### A 4
		#### E 0 A_Jump(256,"see")

	Pain:
		#### G 4
		#### G 4 A_Pain
		#### G 0 A_Jump(100,"See")
		#### AB 2 A_FaceTarget(0,0)
		#### CD 3 A_FastChase
		#### G 0 A_CPosRefire
		#### E 0 A_Jump(256,"missile")
	Death:
	XDeath:
		#### H 6
		#### I 6 A_Scream
		#### J 6 A_NoBlocking
		#### KKKLLLMMM 2 A_FadeOut(0.1)
		#### N 2 A_FadeOut(0.1)
		wait
	Raise:
		stop
	}
}
class BlackSquadRifleman:SquadRiflemanBase{default{stamina 1;accuracy 1;}}
class BrownSquadRifleman:SquadRiflemanBase{
	Translation "112:120=152:159","121:127=9:12", "48:79=61:79", "18:21=63:63", "213:213=63:63"
}
class WhiteSquadRifleman:SquadRiflemanBase{}
class SquadRifleman:RandomSpawner{
	+ismonster +friendly height 52 radius 12
	DropItem "BlackSquadRifleman"
	DropItem "BrownSquadRifleman"
	DropItem "WhiteSquadRifleman"
}
class SquadGyroGrenade:GyroGrenade{
	damagetype "GhostSquadAttack" damage(1) +forcepain renderstyle add +nodamage
	states{
	death:
	explode:
		#### A 0 bright A_NoGravity
		#### AAAAAAAAAAAA 0 A_SpawnItemEx("HugeWallChunk", 0, 0, 0, random(-7,7),random(-7,7),random(4,18),random(0,360),160)
		#### A 1 A_Explode(1,512,0,1,512,
			0,0,none,
			"GhostSquadAttack"
		)
		#### AA 0 A_SpawnItemEx("HDBBWTH", random(-1,1),random(-1,1),2, 0,0,0, 0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS)
		#### A 2 A_SpawnItemEx("HDBBWTH", 0,0,0, 0,0,2, 0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS)
		#### AAA 0 A_SpawnItemEx("HDSmoke", random(-6,6),random(-6,6),1, random(-1,4),random(-1,1),0, random(-15,15),SXF_NOCHECKPOSITION)
		#### A 0 A_SetTranslucent(1,1)
		#### A 0 A_AlertMonsters
		#### A 0 A_SpawnItemEx("DistantRocket", 0,0,0, 0,0,0, 0,32)
		#### A 21 A_Quake(2,21,0,200,none)
		Stop
	}
}

class SquadSummoner:HDPickup{
	inventory.maxamount 3
	inventory.interhubamount 3
	inventory.icon PLHELMA0
	inventory.pickupsound "misc/p_pkup"
	inventory.pickupmessage "Picked up a summoning talisman."
	+inventory.fancypickupsound
	+forcexybillboard
	states{
	spawn2:
		PRIF A -1
	use:
		#### A 0{
			A_PlaySound("misc/p_pkup",CHAN_AUTO);
			A_AlertMonsters;
			A_SpawnItemEx("SquadRifleman", 0,0,0, 8,0,0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("SquadRifleman", 0,0,0, 0,5,0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("SquadRifleman", 0,0,0, 0,-5,0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_SpawnItemEx("HDSmoke", 0,0,0, 8,0,0, 0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("HDSmoke", 0,0,0, 0,5,0, 0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("HDSmoke", 0,0,0, 0,-5,0, 0,SXF_NOCHECKPOSITION);
		}
		#### A 0 A_Jump(256,1,2,3,4)
		#### A 0 A_PrintBold("\cj'They shall stand again and hear there\n\cja horn in the hills ringing.\n\n\cjWhose shall the horn be?'",8)
		stop
		#### A 0 A_PrintBold("\cj'For this war will last through years uncounted\n\n\cjand you shall be summoned once again ere the end.'",8)
		stop
		#### A 0 A_PrintBold("\cj'Faint cries I heard, and dim horns blowing,\n\n\cjand a murmur as of countless far voices:\n\n\n\cjit was like the echo of some forgotten battle\n\n\cjin the Dark Years long ago.'",8)
		stop
		#### A 0 A_PrintBold("\cj'Pale swords were drawn; but I know not\n\n\cjwhether their blades would still bite,\n\n\n\cjfor the Dead needed no longer\n\n\cjany weapon but fear.'",8)
	}
}




class BotBot:RiflemanBase{
	obituary "%o died."
	+noblockmonst
	+nofear
	+donthurtspecies
	species "Player"
	states{
	death:
		"####" A 0{
			A_GiveInventory("BotKill",1,AAPTR_MASTER);
			A_DamageMaster(1000000,"bleedout",DMSS_KILL,"None","None",AAPTR_TARGET,AAPTR_TARGET);
		}goto super::death
	death.bleedout:
		"####" A 0{
			A_GiveInventory("BotKill",1,AAPTR_MASTER);
			A_DamageMaster(1000000,"bleedout",DMSS_KILL,"None","None",AAPTR_TARGET,AAPTR_TARGET);
		}goto super::death.bleedout
	xdeath:
		"####" A 0{
			A_GiveInventory("BotKill",1,AAPTR_MASTER);
			A_DamageMaster(1000000,"bleedout",DMSS_KILL,"None","None",AAPTR_TARGET,AAPTR_TARGET);
		}goto super::xdeath
	see:
		"----" A 0 A_TakeInventory("NotSeen")
		goto super::see
	missile:
		"----" A 0 A_TakeInventory("NotSeen")
		goto super::missile
	melee:
		"----" A 0 A_TakeInventory("NotSeen")
		goto super::melee
	pain:
		"----" A 0 A_TakeInventory("NotSeen")
		goto super::pain
	spawn2:
		"----" A 0 A_JumpIf(deathmatch,2)
		"----" A 0 A_CheckSight(3)
		"----" A 0 A_TakeInventory("NotSeen")
		"----" A 0 A_Jump(256,3)
		"----" A 0 A_GiveInventory("NotSeen",1)
		"----" A 0 A_JumpIfInventory("NotSeen",12,"warpandwait")
		#### A 0 A_Look();
		#### A 0 A_Jump(60,"spawn")
		#### A 0{angle+=random(-30,30))
		#### EEE 3 A_Look();
		#### A 0{angle+=random(-30,30))
		#### EEE 3 A_Look();
		#### A 0 HealThing(2)
		#### A 0 A_Jump(60,"spawn")
		loop
	spwander:
		#### E 0 A_ClearTarget
		"----" A 0 A_JumpIf(deathmatch,2)
		"----" A 0 A_CheckSight(3)
		"----" A 0 A_TakeInventory("NotSeen")
		"----" A 0 A_Jump(256,3)
		"----" A 0 A_GiveInventory("NotSeen",1)
		"----" A 0 A_JumpIfInventory("NotSeen",7,"warpandwait")
		#### AA 3{hdmobai.wander(self);}
		#### A 0 A_Chase(flags:CHF_DONTMOVE);
		#### BB 3{hdmobai.wander(self);}
		#### A 0 A_Chase(flags:CHF_DONTMOVE);
		#### CC 3{hdmobai.wander(self);}
		#### A 0 A_Chase(flags:CHF_DONTMOVE);
		#### DD 3{hdmobai.wander(self);}
		#### A 0 HealThing(3)
		#### E 0 A_Jump(128,"spwander")
		#### E 0 A_Jump(256,"spwander2")
	warpandwait:
		#### A 0 A_ChangeFlag("shootable",0)
		#### A 0 A_ChangeFlag("solid",0)
		#### A 0 A_ChangeFlag("canusewalls",0)
		#### A 0 A_ChangeFlag("noblockmap",1)
		#### A 0 A_ChangeFlag("cannotpush",1)
		#### A 0 A_ChangeFlag("noteleport",1)
		#### A 0 A_ChangeFlag("friendly",0)
		#### A 0 A_ChangeFlag("nofear",0)
		#### A 0 A_ChangeFlag("frightened",1)
		#### A 0 A_Warp(AAPTR_PLAYER1,0,0,0,0,WARPF_TOFLOOR|WARPF_NOCHECKPOSITION)
	warpedwait:
		#### AAAAAA 0{hdmobai.chase(self);}("","")
		#### A 0 A_Jump(4,"warpandwait")
		#### A 0 A_Jump(4,2)
		#### A 1 A_CheckSight(1)
		loop
		#### A 0 A_ChangeFlag("shootable",1)
		#### A 0 A_ChangeFlag("solid",1)
		#### A 0 A_ChangeFlag("friendly",1)
		#### A 0 A_ChangeFlag("nofear",1)
		#### A 0 A_ChangeFlag("frightened",0)
		#### A 0 A_ChangeFlag("canusewalls",1)
		#### A 0 A_ChangeFlag("noblockmap",0)
		#### A 0 A_ChangeFlag("cannotpush",0)
		#### A 0 A_ChangeFlag("noteleport",0)
		#### A 0 A_TakeInventory("NotSeen",100)
		#### A 0 A_Stop
		goto spawn
	}
}
class BotBotF:BotBot{
	PainSound "marinef/pain"
	DeathSound "marinef/death"
}



*/