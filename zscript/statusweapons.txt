// ------------------------------------------------------------
// Because HD weapons aren't complicated enough.
// ------------------------------------------------------------
extend class HDStatusBar{
	virtual void drawweaponstatus(weapon w){
		let hdw=hdweapon(w);
		if(!hdw){
			if(cplayer.readyweapon.ammotype1)drawwepnum(
				hpl.countinv(cplayer.readyweapon.ammotype1),
				hdmath.maxinv(hpl,cplayer.readyweapon.ammotype1)
			);
			if(cplayer.readyweapon.ammotype2)drawwepnum(
				hpl.countinv(cplayer.readyweapon.ammotype2),
				hdmath.maxinv(hpl,cplayer.readyweapon.ammotype2),
				posy:-10
			);
			return;
		}

		bool helptext=cvar.getcvar("hd_helptext",cplayer).getbool();
		hudfont pSmallFont=HUDFont.Create("SmallFont");

		if(w is "Lumberjack"){
			if(gimmehud){
				drawambar("CELLRED","CELLA0","HDCellAmmo",(-54,-4),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("HDCellPacks"),-46,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			if(!hdw.weaponstatus[1])drawstring(
				mamountfont,"00000",(-16,-9),DI_TEXT_ALIGN_RIGHT|
				DI_TRANSLATABLE|DI_SCREEN_CENTER_BOTTOM,
				Font.CR_DARKGRAY
			);else if(hdw.weaponstatus[1]>0)
				drawwepnum(hdw.weaponstatus[1],20);
		}
		else if(w is "HDPistol"){
			if(gimmehud){
				drawimage("CLP2A0",(-46,-3),DI_SCREEN_CENTER_BOTTOM,scale:(3,3));
				drawambar("PISARED","HDPISAMO","HDPistolAmmo",(-53,-4),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("HDPistolMag"),-43,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			drawwepcounter(hdw.weaponstatus[PISS_AUTO]+1,
				-22,-10,"blank","RBRSA3A7","STFULAUT"
			);
			let wpn2=hdsecondpistol(hpl.findinventory("HDSecondPistol"));
			if(wpn2){
				drawwepdot(-16,-13,(4,2.6));
				if(wpn2.weaponstatus[PISS_AUTO]>=0)
					drawwepdot(-21,-13,(2,2.6));
			}
			drawwepnum(hdw.weaponstatus[PISS_MAG],15);
			if(hdw.weaponstatus[PISS_CHAMBER]==2)drawwepdot(-16,-10,(3,1));
		}
		else if(w is "HDSMG"){
			if(gimmehud){
				drawimage("CLP3A0",(-46,-3),DI_SCREEN_CENTER_BOTTOM,scale:(3,3));
				drawambar("PISARED","HDPISAMO","HDPistolAmmo",(-53,-4),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("HDSMGMag"),-43,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			drawwepcounter(hdw.weaponstatus[SMGS_AUTO],
				-22,-10,"RBRSA3A7","STBURAUT","STFULAUT"
			);
			drawwepnum(hdw.weaponstatus[SMGS_MAG],30);
			if(hdw.weaponstatus[SMGS_CHAMBER]==2)drawwepdot(-16,-10,(3,1));
		}
		else if(w is "Slayer"){
			if(gimmehud){
				drawimage("SHL1A0",(-47,-10),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("HDShellAmmo"),-46,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			int loffs=-28;int rofs=-16;
			if(hdw.weaponstatus[0]&SLAYF_DOUBLE){
				loffs=-24;rofs=-20;
//				drawwepdot(-19,-17,(9,2));
				drawimage("STBURAUT",(-23,-17),DI_SCREEN_CENTER_BOTTOM);
			}
			if(hdw.weaponstatus[SLAYS_CHAMBER1]>1){
				drawwepdot(loffs,-10,(3,5));
				drawwepdot(loffs,-7,(3,2));
			}else if(hdw.weaponstatus[SLAYS_CHAMBER1]>0){
				drawwepdot(loffs,-7,(3,2));
			}
			if(hdw.weaponstatus[SLAYS_CHAMBER2]>1){
				drawwepdot(rofs,-10,(3,5));
				drawwepdot(rofs,-7,(3,2));
			}else if(hdw.weaponstatus[SLAYS_CHAMBER2]>0){
				drawwepdot(rofs,-7,(3,2));
			}
			for(int i=hdw.weaponstatus[SLAYS_SIDESADDLE];i>0;i--){
				drawwepdot(-10-i*2,-2,(1,3));
			}
		}
		else if(w is "Hunter"){
			if(gimmehud){
				drawimage("SHL1A0",(-47,-10),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("HDShellAmmo"),-46,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			if(hdw.weaponstatus[HUNTS_CHAMBER]>1){
				drawwepdot(-19,-11,(5,3));
				drawwepdot(-16,-11,(2,3));
			}
			else if(hdw.weaponstatus[HUNTS_CHAMBER]>0){
				drawwepdot(-16,-11,(2,3));
			}
			drawwepcounter(hdw.weaponstatus[0]&HUNTF_AUTO,
				-24,-12,"blank","STFULAUT"
			);
			drawwepnum(hdw.weaponstatus[HUNTS_TUBE],7,posy:-7);
			for(int i=hdw.weaponstatus[HUNTS_SIDESADDLE];i>0;i--){
				drawwepdot(-15-i*2,-2,(1,3));
			}
		}
		else if(w is "ZM66AssaultRifle"){
			if(gimmehud){
				drawambar("CLIPRED","CLIPC0","FourMilAmmo",(-51,-4),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("ZM66RifleMags"),-43,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
				if(!(hdw.weaponstatus[0]&ZM66F_NOLAUNCHER)){
					drawimage("ROQPA0",(-62,-4),DI_SCREEN_CENTER_BOTTOM,scale:(0.6,0.6));
					drawnum(hpl.countinv("HDRocketAmmo"),-56,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
				}
			}

			if(!(hdw.weaponstatus[0]&ZM66F_NOFIRESELECT))
			drawwepcounter(hdw.weaponstatus[ZM66S_AUTO],
				-22,-10,"RBRSA3A7","STFULAUT","STBURAUT"
			);
			if(hdw.weaponstatus[0]&ZM66F_GRENADELOADED)drawwepdot(-16,-13,(4,2.6));
			int lod=clamp(hdw.weaponstatus[ZM66S_MAG]%100,0,50);
			drawwepnum(lod,50);
			if(hdw.weaponstatus[0]&ZM66F_CHAMBER){
				drawwepdot(-16,-10,(3,1));
				lod++;
			}
			if(hdw.weaponstatus[ZM66S_MAG]>100)lod=random[shitgun](10,99);
			drawnum(lod,-16,-22,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,Font.CR_RED);
			if(hdw.weaponstatus[0]&ZM66F_GLMODE){
				int ab=hdw.airburst;
				drawnum(ab,
					-30,-22,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,
					ab?Font.CR_WHITE:Font.CR_DARKGRAY
				);
				drawwepdot(-30,-42+min(16,ab/10),(4,1));
				drawwepdot(-30,-26,(1,16));
				drawwepdot(-32,-26,(1,16));
			}else drawnum(hdw.weaponstatus[ZM66S_ZOOM],
				-30,-22,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,Font.CR_DARKGRAY
			);
		}
		else if(w is "Vulcanette"){
			if(gimmehud){
				drawambar("CLIPRED","CLIPC0","FourMilAmmo",(-49,-4),DI_SCREEN_CENTER_BOTTOM);
				drawambar("CELLRED","CELLA0","HDCellAmmo",(-64,-4),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("ZM66RifleMags"),-43,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
				drawnum(hpl.countinv("HDCellPacks"),-56,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			let vvv=vulcanette(hdw);
			if(vvv){
				for(int i=1;i<5;i++){
					if(vvv.vulcmag[i]>=0)drawwepdot(-16-i*4,-13,(3,2));
				}
				drawwepnum(vvv.vulcmag[0]<100?vvv.vulcmag[0]:vvv.vulcmag[0]-100,50,posy:-10);
				drawwepcounter(vvv.weaponstatus[0]&VULCF_FAST,
					-28,-16,"blank","STFULAUT"
				);
				if(vvv.weaponstatus[1]>0){
					for(int i=0;i<5;i++){
						drawwepcounter(vvv.vulcchamber[i],-14,
							-11-i*2,"blank","RBRSA3A7"
						);
					}
					int lod=random[shitgun](10,99);
					if(vvv.vulcmag[0]<100)lod=clamp(vvv.vulcmag[0],0,50);
					drawnum(lod,-20,-22,
						DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,Font.CR_RED
					);
					drawwepnum(vvv.weaponstatus[1],20);
				}else if(!vvv.weaponstatus[1])drawstring(
					mamountfont,"00000",(-16,-8),
					DI_TEXT_ALIGN_RIGHT|DI_TRANSLATABLE|DI_SCREEN_CENTER_BOTTOM,
					Font.CR_DARKGRAY
				);
				drawnum(vvv.weaponstatus[2],
					-30,-22,
					DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,
					Font.CR_DARKGRAY
				);
			}
		}
		else if(w is "Blooper"){
			if(gimmehud){
				drawimage("ROQPA0",(-52,-4),DI_SCREEN_CENTER_BOTTOM,scale:(0.6,0.6));
				drawnum(hpl.countinv("HDRocketAmmo"),-45,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			if(hdw.weaponstatus[0]&BLOPF_LOADED)drawwepdot(-16,-10,(5,3));
			int ab=hdw.airburst;
			drawnum(ab,
				-28,-15,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,
				ab?Font.CR_WHITE:Font.CR_DARKGRAY
			);
			drawwepnum(
				hpl.countinv("HDRocketAmmo"),
				hdmath.maxinv(hpl,"HDRocketAmmo")
			);
		}
		else if(w is "HDRL"){
			if(gimmehud){
				drawimage("ROQPA0",(-47,-4),DI_SCREEN_CENTER_BOTTOM,scale:(0.6,0.6));
				drawimage("ROCKA0",(-58,-4),DI_SCREEN_CENTER_BOTTOM,scale:(0.6,0.6));
				drawnum(hpl.countinv("HDRocketAmmo"),-41,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
				drawnum(hpl.countinv("HEATAmmo"),-54,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			int ab=hdw.airburst;
			if(
				hdw.weaponstatus[RLS_CHAMBER]>1||
				!(hdw.weaponstatus[0]&RLF_GRENADEMODE)
			){
				if(hdw.weaponstatus[RLS_CHAMBER]>1){
					drawwepdot(-19,-13,(3,2));
					drawwepdot(-16,-13,(2,2));
					drawwepdot(-22,-11,(4,6));
					drawwepdot(-26,-12,(4,4));
				}else{
					drawwepdot(-19,-12,(3,1));
					drawwepdot(-16,-12,(2,1));
					drawwepdot(-22,-11,(4,3));
				}
			}else{
				drawwepdot(-22,-26+min(16,ab/10),(4,1));
				drawwepdot(-22,-10,(1,16));
				drawwepdot(-24,-10,(1,16));
			}
			drawnum(ab,
				-32,-15,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,
				ab?Font.CR_WHITE:Font.CR_DARKGRAY
			);
			drawwepnum(hdw.weaponstatus[RLS_MAG],6);
			if(hdw.weaponstatus[RLS_CHAMBER]>0)drawwepdot(-16,-10,(3,1));
		}
		else if(w is "LiberatorRifle"){
			if(gimmehud){
				drawimage("RMAGA0",(-51,-4),DI_SCREEN_CENTER_BOTTOM);
				drawambar("MAGRED","MAGSTAT","SevenMilAmmo",(-51,-4),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("LiberatorMag"),-43,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
				if(!(hdw.weaponstatus[0]&LIBF_NOLAUNCHER)){
					drawimage("ROQPA0",(-62,-4),DI_SCREEN_CENTER_BOTTOM,scale:(0.6,0.6));
					drawnum(hpl.countinv("HDRocketAmmo"),-56,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
				}
			}
			string llba="RBRSA3A7";
			if(hdw.weaponstatus[0]&LIBF_FULLAUTO)llba="STFULAUT";
			drawimage(
				llba,(-22,-10),
				DI_SCREEN_CENTER_BOTTOM|DI_TRANSLATABLE|DI_ITEM_RIGHT
			);
			if(hdw.weaponstatus[0]&LIBF_GRENADELOADED)drawwepdot(-16,-13,(4,2.6));
			int lod=max(hdw.weaponstatus[LIBS_MAG],0);
			drawwepnum(lod,30);
			if(hdw.weaponstatus[LIBS_CHAMBER]==2){
				drawwepdot(-16,-10,(3,1));
				lod++;
			}
			if(hdw.weaponstatus[0]&LIBF_GRENADEMODE){
				int ab=hdw.airburst;
				drawnum(ab,
					-30,-22,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,
					ab?Font.CR_WHITE:Font.CR_DARKGRAY
				);
				drawwepdot(-30,-42+min(16,ab/10),(4,1));
				drawwepdot(-30,-26,(1,16));
				drawwepdot(-32,-26,(1,16));
			}else drawnum(hdw.weaponstatus[LIBS_ZOOM],
				-30,-22,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,Font.CR_DARKGRAY
			);
		}
		else if(w is "ThunderBuster"){
			if(gimmehud){
				drawambar("CELLRED","CELLA0","HDCellAmmo",(-54,-4),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("HDCellPacks"),-46,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			if(hdw.weaponstatus[0]&TBF_ALT){
				drawimage(
					"STBURAUT",(-28,-10),
					DI_SCREEN_CENTER_BOTTOM|DI_TRANSLATABLE|DI_ITEM_RIGHT
				);
				drawnum(2000/HDCONST_ONEMETRE,-16,-14,DI_SCREEN_CENTER_BOTTOM,font.CR_GRAY);
			}else drawnum(hdw.weaponstatus[TBS_MAXRANGEDISPLAY],-16,-14,DI_SCREEN_CENTER_BOTTOM,font.CR_GRAY);
			int bat=hdw.weaponstatus[TBS_BATTERY];
			if(bat>0)drawwepnum(bat,20);
			else if(!bat)drawstring(
				mamountfont,"00000",
				(-16,-9),DI_TEXT_ALIGN_RIGHT|DI_TRANSLATABLE|DI_SCREEN_CENTER_BOTTOM,
				Font.CR_DARKGRAY
			);
		}
		else if(w is "BFG9k"){
			if(gimmehud){
				drawambar("CELLRED","CELLA0","HDCellAmmo",(-54,-4),DI_SCREEN_CENTER_BOTTOM);
				drawnum(hpl.countinv("HDCellPacks"),-46,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			int bffb=hdw.weaponstatus[BFGS_BATTERY];
			if(bffb>0)drawwepnum(bffb,20,posy:-10);
			else if(!bffb)drawstring(
				mamountfont,"00000",
				(-16,-14),DI_TEXT_ALIGN_RIGHT|DI_TRANSLATABLE|DI_SCREEN_CENTER_BOTTOM,
				Font.CR_DARKGRAY
			);
			if(hdw.weaponstatus[0]&BFGF_STRAPPED){
				drawwepdot(-16,-16,(10,1));
				drawwepdot(-16,-19,(8,1));
				drawwepdot(-16,-22,(5,1));
			}
			drawwepnum(hdw.weaponstatus[BFGS_CHARGE],20);
		}
		else if(w is "Brontornis"){
			if(gimmehud){
				drawimage("BROCA0",(-48,-10),DI_SCREEN_CENTER_BOTTOM,scale:(0.7,0.7));
				drawnum(hpl.countinv("BrontornisRound"),-45,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			if(hdw.weaponstatus[BRONS_CHAMBER]>1)drawwepdot(-16,-10,(5,3));
			drawwepnum(
				hpl.countinv("BrontornisRound"),
				HDMath.MaxInv(hpl,"BrontornisRound")
			);
		}
		else if(w is "BossRifle"){
			if(gimmehud){
				drawambar("MAGRED","MAGSTAT","SevenMilAmmo",(-45,-9),DI_SCREEN_CENTER_BOTTOM|DI_ITEM_RIGHT_BOTTOM);
				drawnum(hpl.countinv("BossClip"),-45,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			drawwepnum(hdw.weaponstatus[BOSSS_MAG],10);
			drawwepcounter(hdw.weaponstatus[BOSSS_CHAMBER],
				-16,-10,"blank","RBRSA1A5","RBRSA3A7","RBRSA4A6"
			);
			drawnum(hdw.weaponstatus[BOSSS_ZOOM],
				-30,-18,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,Font.CR_DARKGRAY
			);
			drawnum(hdw.weaponstatus[BOSSS_DROPADJUST],
				-16,-18,DI_SCREEN_CENTER_BOTTOM|DI_TEXT_ALIGN_RIGHT,Font.CR_WHITE
			);
		}
		else if(w is "HDFragGrenades" && hpl.countinv("HDFragGrenadeAmmo")){
			if(gimmehud){
				drawimage("FRAGA0",(-52,-4),DI_SCREEN_CENTER_BOTTOM,scale:(0.6,0.6));
				drawnum(hpl.countinv("HDFragGrenadeAmmo"),-45,-8,DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
			}
			drawwepnum(
				hpl.countinv("HDFragGrenadeAmmo"),
				hdmath.maxinv(hpl,"HDFragGrenadeAmmo")
			);
			drawwepnum(hpl.countinv("GrenadeForce"),50,posy:-10);
			if(!hpl.countinv("SpoonOff")){
				drawwepdot(-16,-15,(5,4));
				if(!hpl.countinv("FragOut"))drawwepdot(-22,-16,(3,2));
			}else{
				int timer=hpl.countinv("FragTimer");
				if(timer%3)drawwepnum(140-timer,140,posy:-15);
			}
		}
		else if(w is "Ring"){
			let ww=Ring(w);
			if(ww && ww.targethealth)drawwepnum(ww.targethealth,ww.targetspawnhealth);
		}
		else if(w is "SelfBandage"){
			int of=0;
			if(hpl.woundcount){
				drawimage(
					"BLUDC0",(-17,-6),
					DI_SCREEN_CENTER_BOTTOM|DI_ITEM_RIGHT,
					0.6
				);
				of=clamp(hpl.woundcount*0.2,1,3);
				if(hpl.flip)of=-of;
			}
			drawwepdot(-22,-8+of,(2,10));
			drawwepdot(-17,-12+of,(12,2));
		}
		else if(w is "HDMedikitter"){
			let ww=hdmedikitter(w);
			int of=0;
			if(
				hpl.woundcount
				&&(!ww.usedon||ww.usedon==hpl)
			){
				of=clamp(hpl.woundcount*0.1,1,3);
				if(hpl.flip)of=-of;
			}
			drawwepdot(-27,-11+of,(2,6));
			drawwepdot(-25,-13+of,(6,2));
			if(ww.useonother){
				drawwepdot(-22,-20,(5,6));
				drawwepdot(-24,-25,(1,7));
				if(ww.usedon)drawimage(
					"BLUDC0",(-22,-19),
					DI_SCREEN_CENTER_BOTTOM|DI_ITEM_RIGHT,
					0.4
				);
			}
			if(ww.usedon)drawimage(
				"BLUDC0",(-14,-7),
				DI_SCREEN_CENTER_BOTTOM|DI_ITEM_RIGHT,
				0.8
			);
			drawwepnum(HD_MEDPATCHLIMIT-ww.usedpatches,HD_MEDPATCHLIMIT);
			if(ww.injectableflesh==2)drawwepdot(-20,-10,(3,3));
			if(ww.injectableflesh>=1)drawwepdot(-16,-10,(3,3));
		}
		else if(w is "HDBlueBottler"){
			drawimage(
				"BON1A0",(-14,-7),
				DI_SCREEN_CENTER_BOTTOM|DI_ITEM_RIGHT
			);
		}
		else if(w is "HDBerserker"){
			drawimage(
				"PSTRA0",(-14,-7),
				DI_SCREEN_CENTER_BOTTOM|DI_ITEM_RIGHT
			);
		}
		else if(w is "HDStimpacker"){
			drawimage(
				"STIMA0",(-14,-7),
				DI_SCREEN_CENTER_BOTTOM|DI_ITEM_RIGHT
			);
		}
		else if(w is "HDBP"){
			let bp=hdbp(w);
			int which=bp.weaponstatus[HDBPS_WHICH];
			int howmany=bp.itemamount[which];

			bool greenarmour=(
				hpl.findinventory("HDArmour")
				&&hpl.findinventory("HDArmour").meleethreshold<2
			);

			//list
			int row=0;int column=16;
			for(int i=0;i<HDBPC_NUMITEMS;i++){
				if(bp.itemname[i]=="cl"){
					row=0;
					column+=160;
				}else if(bp.itemname[i]=="br"){
					row+=5;
				}else if(bp.itemtype[i]){
					bool onperson=(
						hpl.countinv(bp.itemtype[i])>0
						&&(
							i!=bp.armourindex||greenarmour
						)
					);
					bool inpack=bp.itemamount[i]>0;
					drawstring(psmallfont,
						bp.itemname[i],
						(column,10+row),
						DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
						i==which?font.CR_SAPPHIRE:
						(inpack?font.CR_WHITE:(
							onperson?font.CR_DARKBROWN:font.CR_DARKGRAY
						)),alpha:(!inpack&&!onperson&&i!=which)?0.6:1.
					);
					row+=8;
				}
			}

			//total status
			int bulk=int(bp.bulk);
			row+=19;
			drawstring(psmallfont,string.format("Total Bulk:  %i",bulk),
				(column,row),
				DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
				bulk>=HDBPC_CAPACITY*0.7?font.CR_RED:font.CR_GOLD
			);

			//explanation
			if(helptext){
				row+=12;
				drawstring(psmallfont,"Backpack Instructions:",
					(column,row),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_BROWN,alpha:0.5
				);
				row+=7;
				column+=10;
				drawstring(psmallfont,"Fire/Altfire: Previous/Next",
					(column,row),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_OLIVE,alpha:0.5
				);
				drawstring(psmallfont,"(Fire Mode: Scroll with mouse)",
					(column+8,row+7),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_DARKGRAY,alpha:0.5
				);
				drawstring(psmallfont,"Reload/Unload: Put/Take",
					(column,row+14),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_OLIVE,alpha:0.5
				);
				drawstring(psmallfont,"Mash Zoom to dump",
					(column,row+21),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_OLIVE,alpha:0.5
				);
			}

			//currently selected item
			drawstring(psmallfont,string.format("%i:  %s",which,bp.itemname[which]),
				(0,58),DI_SCREEN_CENTER|DI_TEXT_ALIGN_CENTER,
				font.CR_SAPPHIRE
			);
			drawstring(psmallfont,howmany<1?"none in backpack":
				string.format("%i in backpack",howmany),
				(0,66),DI_SCREEN_CENTER|DI_TEXT_ALIGN_CENTER,
				howmany<1?font.CR_DARKGRAY:font.CR_WHITE
			);
			howmany=hpl.countinv(bp.itemtype[which]);
			if(which==bp.armourindex&&!greenarmour)howmany=0;
			drawstring(psmallfont,howmany<1?"none on person":
				string.format("%i on person",howmany),
				(0,74),DI_SCREEN_CENTER|DI_TEXT_ALIGN_CENTER,
				howmany<1?font.CR_DARKGRAY:font.CR_DARKBROWN
			);
		}
		else if(w is "MagManager"){
			let mm=MagManager(w);
			int which=mm.weaponstatus[HDMMS_WHICH];

			//explanation
			if(helptext){
				int row=100;
				int column=10;
				drawstring(psmallfont,"Mag Manager Instructions:",
					(column,row),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_BROWN,alpha:0.5
				);
				row+=7;
				column+=10;
				drawstring(psmallfont,"Fire/Altfire: Previous/Next",
					(column,row),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_OLIVE,alpha:0.5
				);
				drawstring(psmallfont,"Re/Unload: Add/Remove",
					(column,row+7),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_OLIVE,alpha:0.5
				);
				drawstring(psmallfont,"Toss weapon to drop mag",
					(column,row+14),
					DI_SCREEN_TOP|DI_SCREEN_LEFT|DI_TEXT_ALIGN_LEFT,
					font.CR_OLIVE,alpha:0.5
				);
			}

			//currently selected item
			drawstring(psmallfont,string.format("now loading %s",mm.magmsg[which]),
				(0,58),DI_SCREEN_CENTER|DI_TEXT_ALIGN_CENTER,
				font.CR_SAPPHIRE
			);
			int howmany=mm.weaponstatus[which];
			string clipmag=(which==HDMMS_BOSS?"clip":"magazine");
			drawstring(psmallfont,
				howmany<1?
					string.format("none in this %s",clipmag)
					:
					string.format("%i in %s",howmany,clipmag),
						(0,66),DI_SCREEN_CENTER|DI_TEXT_ALIGN_CENTER,
						howmany<1?font.CR_DARKGRAY:font.CR_WHITE
			);
			howmany=hpl.countinv(mm.ammotype[which]);
			drawstring(psmallfont,howmany<1?"none on person":
				string.format("%i on person",howmany),
				(0,74),DI_SCREEN_CENTER|DI_TEXT_ALIGN_CENTER,
				howmany<1?font.CR_DARKGRAY:font.CR_DARKBROWN
			);
			howmany=hpl.countinv(mm.magtype[which]);
			string pl=howmany==1?"":"s";
			drawstring(psmallfont,howmany<1?string.format("no full %s%s",clipmag,pl):
				string.format("%i full %s%s",howmany,clipmag,pl),
				(0,90),DI_SCREEN_CENTER|DI_TEXT_ALIGN_CENTER,
				howmany<1?font.CR_DARKGRAY:font.CR_DARKBROWN
			);
		}
	}
	void drawwepdot(int posx,int posy,vector2 dotscale=(3.,3.)){
		drawimage(
			"GREENPXL",(posx,posy),
			DI_SCREEN_CENTER_BOTTOM|DI_TRANSLATABLE|DI_ITEM_RIGHT,
			1,scale:dotscale
		);
	}
	void drawwepnum(int value,int maxvalue,int posx=-16,int posy=-6,bool num=false){
		hdplayerpawn cp=hdplayerpawn(cplayer.mo);if(!cp)return;
		if(num){
			drawstring(
				mAmountFont,formatnumber(value),
				(posx,posy),DI_TEXT_ALIGN_RIGHT|DI_TRANSLATABLE|DI_SCREEN_CENTER_BOTTOM,
				cp.overloaded<1.5?Font.CR_OLIVE:(cp.overloaded>2?Font.CR_RED:Font.CR_GREEN)
			);
		}else drawimage(
			"GREENPXL",
			(posx,posy),
			DI_SCREEN_CENTER_BOTTOM|DI_TRANSLATABLE|DI_ITEM_RIGHT,
			1,scale:(
				gimmehud
				||cplayer.buttons&BT_ATTACK
				||cplayer.buttons&BT_ALTATTACK
				?max(((value*6/maxvalue)<<2),!!value):
				(value*24/maxvalue)
			,2)
		);
	}
	//"" means ignore this value and move on to the next check.
	//"blank" means stop here and render nothing.
	//(do we really need 6???)
	void drawwepcounter(
		int input,
		int posx,int posy,
		string zero="",string one="",string two="",string three="",
		string four="",string five="",string six="",
		bool binary=false
	){
		string types[7];types[0]=zero;types[1]=one;types[2]=two;
		types[3]=three;types[4]=four;types[5]=five;types[6]=six;
		input=min(input,6);
		string result="";
		for(int i=input;i>=0;i--){
			if(input==i){
				if(types[i]=="blank")break;
				else if(types[i]=="")input--;
				else result=types[i];
			}
		}
		if(result!="")drawimage(
			result,
			(posx,posy),
			DI_SCREEN_CENTER_BOTTOM|DI_TRANSLATABLE|DI_ITEM_RIGHT
		);
	}
}
