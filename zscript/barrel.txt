// ------------------------------------------------------------
// Killer Barrel
// ------------------------------------------------------------
class SuspiciousBarrel:IdleDummy replaces ExplosiveBarrel{
	override void postbeginplay(){
		super.postbeginplay();
		actor a;
		if(
			(random(1,100)<=hd_killerbarrels)
			&& !sv_nomonsters
		){
			a=spawn("KillerBarrel",pos,ALLOW_REPLACE);
		}
		else a=spawn("InnocentBarrel",pos,ALLOW_REPLACE);
		a.master=self.master;a.target=self.target;
	}
}

class KillerBarrel:HDActor{
	default{
		+ismonster //sprite clips differently whether this is on or not
		+solid +shootable
		+countkill +canpushwalls +activatemcross +canpass +nodropoff
		+ambush +ghost +lookallaround
		+fixmapthingpos +dontgib +pushable
		damagefactor "Thermal",1.2;
		damagefactor "Balefire",0.1;
		radius 11;height 34;deathheight 34;
		health 100;speed 1;mass 100;gibhealth 200;
		painchance 120;
		pushfactor 0.1;
		painsound "barrel/pain";deathsound "world/barrelx";
		translation "176:191=96:111","64:79=104:111";

		bloodcolor "ba ff 86";bloodtype "NotQuiteBloodSplat";
		obituary "%o was rolled by a barrel.";
		attacksound "misc/bloodchunks";
	}
	states{
	spawn:
		BAR1 AB 10 A_Look();
		loop;
	see:
		"####" AB 10{
			if(!target || target.bkilled){
				A_Pain();
				target=null;
				setstatelabel("spawn");
				return;
			}
			else if(
				!random(0,9)
				&& (
					!(target is "PlayerPawn")
					||(
						A_CheckBackTurned(self.pos,target.pos,target.angle)
						&& (target.pos-pos).length()>96
					)
				)
			){
				A_FaceTarget(0,0);
				if(
					HDMobAI.TryShoot(self,32,128,9,9)
				){
					//shoot
					A_FaceTarget(0,0);
					A_PlaySound(attacksound);
					A_SpawnProjectile("BaleBall",40,flags:CMF_AIMDIRECTION);
				}
				else{
					//move
					A_FaceTarget();
					angle+=random(-135,135);
					A_PlaySound("barrel/walk");
					vel.xy+=(cos(angle),sin(angle))*5;
				}
				setstatelabel("inertjiggle2");
			}
			bnodropoff=true;
		}loop;
	pain:
		"####" B 1 A_Pain();
	inertjiggle:
		"####" B 1 A_PlaySound("misc/bloodchunks");
	inertjiggle2:
		"####" ABABAABBAAABBB 1;
		"----" A 0 A_Jump(256,"see");
	death:
		"####" A 0 A_GivetoTarget("HDKillCount",1);
	death1:
		"----" AAAAAAA 0 A_SpawnItemEx("BFGSpark",0,0,36,random(-4,4),random(-4,4),random(-4,4),0,SXF_TRANSFERPOINTERS,32);
	death2:
		"----" A 0 A_NoBlocking();
	death2a:
		"----" A 0{
			A_SetSolid();
			A_SetShootable();
		}
		"####" ABABAB random(1,3);
		"####" B random(1,3){
			blockthingsiterator a=blockthingsiterator.create(self,320);
			while(a.next()){
				if(
					a.thing is "BarrelExplodeMarker"
				){
					setstatelabel("death2a");
					return;
				}
			}
		}
		"####" B 0{
			A_UnsetSolid();
			A_UnsetShootable();
			A_NoBlocking();
			bsolid=false;
			spawn("BarrelExplodeMarker",pos);
		}
	death2b:
		BEXP C 0{
			stamina=0;
			blockthingsiterator a=blockthingsiterator.create(self,320);
			while(a.next()){
				if(
					a.thing is "BarrelExplodeMarker"
				){
					stamina++;
				}
			}
		}
		BEXP CCC 1 bright{
			if(stamina<3) A_SpawnChunks("HugeWallChunk",14,8,20);
			actor a=spawn("HDExplosion",self.pos+(random(-2,2),random(-2,2),random(12,32)));
			a.vel=self.vel+(random(-1,1),random(-1,1),random(-1,2));
		}
		BEXP C 0 A_BarrelBlast();
		BEXP D 2 bright{
			A_SpawnChunks("HDSmokeChunk",random(2,5),7,16);
			A_Scream();
			DistantQuaker.Quake(self,6,42,512,10);
			A_PlaySound("world/explode");
			Spawn("DistantRocket",self.pos,ALLOW_REPLACE);
		}
		BEXP EEEEEEE 0 A_SpawnItemEx ("HDSmoke", random(-6,6),random(-6,6),random(12,32), vel.x+random(-1,1),vel.y+random(-1,1),vel.z+random(1,2), 0,168);
		BEXP EEE 2 bright A_FadeOut(0.3);
		POB1 A 0{
			A_SetSize(-1,8);
			A_SetScale(0.7);
			A_SetTranslucent(1,0);
			setstatelabel("dying");
		}
	dying:
		POB1 AAAAAAA 50{
			A_Immolate(self,self.target,random(12,24));
			if(!random(0,2)) A_SpawnChunks("HDSmokeChunk",1,2,12);
		}
		POB1 A -1{
			A_PlaySound("vile/firestrt",CHAN_AUTO,0.4);
			A_SpawnChunks("HDSmoke",8,4,12);
		}
	}
	virtual void A_BarrelBlast(){
		A_Blast(
			random(128,256),random(128,256),0,"Balefire",
			256,256,0,true,
			256,96,"Thermal",
			128,random(10,40),36,
			24,random(1,2)
		);
	}
}
class InnocentBarrel:KillerBarrel{
	default{
		obituary "%o was exploded by a barrel.";
		painsound "none";
		painchance 255;
		-countkill
		-canpushwalls
		-canusewalls
		-activatemcross
		-canpass
		-nodropoff
		-ismonster
	}
	states{
	spawn:
	see:
		BAR1 AB 10;
		loop;
	death:
		BEXP A 0{
			if(!random(0,7)){
				actor a=spawn("BFGVileShard",pos,ALLOW_REPLACE);
				a.target=self.target;a.vel=self.vel+(0,0,10);
			}
		}
		goto death1;
	}
}
class BarrelExplodeMarker:IdleDummy{
	default{
		-noblockmap;
	}
	states{
	spawn:
		TNT1 A random(50,100);
		stop;
	}
}
class BarrelGibs:IdleDummy{
	default{
		+movewithsector;
		translation "176:191=96:111","64:79=104:111";
	}
	states{
	spawn:
		POB1 A 10;
		POB1 A -1{
			A_Stop();
			setz(floorz);
		}stop;
	}
}


// ------------------------------------------------------------
//   Killer Fire Can
// ------------------------------------------------------------

class SuspiciousFireCan:IdleDummy replaces BurningBarrel{
	override void postbeginplay(){
		super.postbeginplay();
		actor a;
		if(
			(random(1,100)<=hd_killerbarrels)
			&& !sv_nomonsters
		){
			a=spawn("KillerFireCan",pos,ALLOW_REPLACE);
		}
		else a=spawn("InnocentFireCan",pos,ALLOW_REPLACE);
		a.master=self.master;a.target=self.target;
	}
}

class KillerFireCan:KillerBarrel{
	int fireticker;
	override void postbeginplay(){
		if(!checklump("FCANA0")||!checklump("FIREC0")){ //apparently D1 *has* FCAN just not FIRE!?
			actor a;
			if(
				(random(1,100)<=hd_killerbarrels)
				&& !sv_nomonsters
			){
				a=spawn("KillerBarrel",pos,ALLOW_REPLACE);
			}
			else a=spawn("InnocentBarrel",pos,ALLOW_REPLACE);
			a.master=self.master;a.target=self.target;
			destroy();return;
		}
		super.postbeginplay();
	}
	default{
		+bright
		health 100;
		translation "176:191=96:111","64:79=104:111";
		bloodcolor "ba ff 86";bloodtype "NotQuiteBloodSplat";
		obituary "%o was burned by a demonic barrel that was on fire.";
		attacksound "vile/firestrt";
		missiletype "BarrelFlame";
	}
	states{
	spawn:
		FCAN AB random(1,3){
			A_Look();
		}loop;
	see:
		FCAN AB random(1,3){
			if(!target || target.bkilled){
				A_Pain();
				target=null;
				setstatelabel("spawn");
				return;
			}
			else if(
				!random(0,9)
				&&(
					!(target is "PlayerPawn")
					|| A_CheckBackTurned(self.pos,target.pos,target.angle)
				)
			){
				A_FaceTarget(0,0);
				pitch-=random(1,12);
				if(
					HDMobAI.TryShoot(self,32,128,9,9)
				){
					if(distance3d(target)<256){
						setstatelabel("flamethrow");
						return;
					}else{
						A_PlaySound(attacksound);
						A_SpawnProjectile("BarrelFlame",40,flags:CMF_AIMDIRECTION);
					}
				}
				else{
					//move
					A_FaceTarget();
					angle+=random(-135,135);
					A_PlaySound("barrel/walk");
					vel.xy+=(cos(angle),sin(angle))*5;
				}
				setstatelabel("inertjiggle2");
			}
			bnodropoff=true;
		}loop;
	flamethrow:
		FCAN ABABABAB 2 bright{
			A_PlaySound("misc/firecrkl");
			A_SpawnProjectile("BarrelFlame2",40,flags:CMF_AIMDIRECTION);
		}
		FCAN A 0 A_Jump(256,"see");
	dying:
		POB1 AAAAAAAAAAAAAAAAA 30{
			A_Immolate(self,self.target,random(24,48));
			if(!random(0,1))A_SpawnChunks("HDSmokeChunk",1,2,12);
		}
		POB1 A -1{
			A_PlaySound("vile/firestrt",CHAN_AUTO,0.4);
			if(!random(0,4))A_Blast(
				random(12,128),random(2,4),64,"Balefire"
			);
			A_SpawnChunks("HDSmoke",8,4,12);
		}
	}
	override void tick(){
		super.tick();
		if(globalfreeze||level.Frozen) return;
		if(!bkilled){
			fireticker++;
			if(fireticker<6) return;
			fireticker=0;
			A_PlaySound("misc/firecrkl",0,0.04);
			actor a=spawn("HDSmoke",pos+(0,0,32),ALLOW_REPLACE);
			a.vel=vel+(frandom(-1,1),frandom(-1,1),frandom(3,6));
		}
	}
	override void A_BarrelBlast(){
		A_Blast(
			random(128,256),random(64,128),0,"Thermal",
			pushradius:256,pushamount:256,fullpushradius:0,pushmass:true,
			immolateradius:256,immolateamount:random(3,12),immolatechance:56,
			gibradius:24,gibamount:random(1,2)
		);
	}
}

class InnocentFireCan:KillerFireCan{
	default{
		obituary "%o was exploded by a barrel that was on fire.";
		painsound "none";
		painchance 255;
		-countkill
		-canpushwalls
		-canusewalls
		-activatemcross
		-canpass
		-nodropoff
		-ismonster
	}
	states{
	spawn:
	see:
		FCAN AB random(1,4);
		loop;
	death:
		FCAN A 0{
			if(!random(0,7)){
				actor a=spawn("BFGVileShard",pos,ALLOW_REPLACE);
				a.target=self.target;a.vel=self.vel+(0,0,10);
			}
		}
		goto death1;
	}
}


//THE FIRE CAN FIRE
class BarrelFlameTail:HDFireballTail{
	default{
		-rollsprite;
		scale 0.6;radius 0.3;
	}
	states{
		spawn:
			FIRE CD 2;
			loop;
	}
}
//flamethrower projectile
class BarrelFlame2:HDFireball{
	default{
		gravity 0.4;scale 0.2;
		height 4;radius 4;
		damagefactor(1);stamina 40;
		damagetype "thermal";
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_PlaySound("misc/firecrkl",CHAN_BODY,0.8,true);
	}
	states{
	spawn:
		FIRE CD 2 bright{
			A_Trail(0.3);
			scale*1.05;
			alpha*0.92;
			stamina-=2;
			if(!stamina) ExplodeMissile();
		}loop;
	death:
		FIRE D 0{
			A_Blast(
				immolateradius:stamina+4,
				immolateamount:stamina+4,
				hurtspecies:false
			);
			if(blockingmobj)A_Immolate(blockingmobj,target,random(0,4)+stamina);
			actor a;
			for(int i=0;i<3;i++){
				a=spawn("HDSmoke",pos+(random(-2,2),random(-2,2),random(1,3)));
				a.vel+=(random(-1,1),random(-1,1),3);
			}
		}
		FIRE EFGH 1 bright A_FadeOut(0.1);
		stop;
	}
}
//launched projectile
class BarrelFlame:HDFireball{
	default{
		gravity 0.6;scale 0.3;
		missiletype "BarrelFlameTail";
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_PlaySound("misc/firecrkl",CHAN_BODY,0.8,true);
	}
	states{
	spawn:
		FIRE CDCDCDCD 2 bright A_FBTail();
	see:
		FIRE CD 2 bright;
		loop;
	death:
		FIRE D 0{
			if(blockingmobj){
				A_Immolate(blockingmobj,target,random(24,48));
			}else{
				actor a=spawn("BarrelFireCrawler",pos);
				if(target)a.target=target.target;a.master=target;
				a=spawn("HDSmoke",pos);
				a.vel.z+=2;
				a.A_PlaySound("vile/firestrt",0,0.6);
				destroy();
				return;
			}
			A_Blast(
				immolateradius:24,
				immolateamount:random(8,16),
				hurtspecies:false
			);
		}
		FIRE EFGH 3 bright;
		stop;
	}
}
class BarrelFireCrawler:HDActor{
	actor a;
	default{
		+shootable;+canpass;-noblockmonst;
		height 54;radius 16;speed 12;
		+noblooddecals -solid +nofear +bright
		radius 8;height 10;meleerange 12;renderstyle "add";maxstepheight 64;maxdropoffheight 64;
		speed 5;health 20;bloodtype "HDSmoke";
	}
	override void postbeginplay(){
		super.postbeginplay();
		scale.x*=randompick(-1,1)*frandom(0.8,1.2);
		scale.y*=frandom(0.8,1.2);
		A_GiveInventory("HDFireEnder",999); //do not set the fire on fire
		A_PlaySound("misc/firecrkl",CHAN_BODY,0.6,true);
	}
	states{
	spawn:
		FIRE ABAB 2 bright{
			//chase constantly
			if(!target || !master || master.bkilled){
				A_Die("burnout");
				return;
			}
			A_Chase(); //no need for all that fancy shit
		}
		FIRE A 0{
			A_Trail(2);
			a=spawn("HDSmoke",pos);
			a.vel=vel+(0,0,2);a.scale=scale;
			if(!random(0,10))damagemobj(self,self,1,"none");
		}
		loop;
	melee:
		FIRE A 0{
			if(target) A_Immolate(target,master,random(24,48)*scale.x);
			A_Die("burnout");
		}goto death;
	pain.thermal:
		FIRE A 0{
			A_GiveInventory("HDFireEnder",999);
		}goto spawn;
	death:
		FIRE A 0{
			A_NoBlocking();
			for(int i=0;i<4;i++){
				if(scale.x>=0.4 && !random(0,2)){
					a=spawn("BarrelFireCrawler",pos);
					HDMobAI.Resize(a,self.scale.x*0.6,0.1);
					if(target){
						a.target=target.target;
						a.master=target;
					}
					a.vel=self.vel+(random(-2,2),random(-2,2),random(1,3));
				}else{
					a=spawn("HDSmokeChunk",pos);
					a.target=target;a.master=master;
					a.vel=self.vel+(random(-5,5),random(-5,5),random(3,5));
				}
			}
			a=spawn("HDSmoke",pos);
			a.vel.z+=2;
			destroy();
		}stop;
	death.burnout:
		FIRE A 0{
			A_PlaySound("misc/firecrkl",CHAN_BODY,1.0,false);
			A_NoBlocking();
		}
		FIRE CDEFGH 2{
			A_Trail();
			A_FadeOut(0.05);
		}stop;
	}
}


