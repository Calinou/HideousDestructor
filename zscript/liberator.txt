// ------------------------------------------------------------
// Liberator Battle Rifle
// ------------------------------------------------------------
class LiberatorRifle:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Liberator"
		//$Sprite "BRFLB0"

		weapon.slotnumber 6;
		weapon.kickback 20;
		weapon.selectionorder 27;
		inventory.pickupsound "misc/w_pkup";
		inventory.pickupmessage "You got the battle rifle!";
		weapon.bobrangex 0.22;
		weapon.bobrangey 0.9;
		scale 0.7;
		obituary "%o was liberated by %k.";
	}
	override void postbeginplay(){
		super.postbeginplay();
		if(weaponstatus[0]&LIBF_NOLAUNCHER){
			barrellength=27;
			barrelwidth=0.7;
			barreldepth=1.2;
			weaponstatus[0]&=~(LIBF_GRENADEMODE|LIBF_GRENADELOADED);
		}else{
			barrellength=29;
			barrelwidth=1;
			barreldepth=3;
		}
		if(owner&&owner.player){
			if(cvar.getcvar("hd_libauto",owner.player).getint())weaponstatus[0]|=LIBF_FULLAUTO;
			if(cvar.getcvar("hd_libfrontreticle",owner.player).getbool())
				weaponstatus[0]|=LIBF_FRONTRETICLE;
				else weaponstatus[0]&=~LIBF_FRONTRETICLE;
			if(cvar.getcvar("hd_libaltreticle",owner.player).getbool())
				weaponstatus[0]|=LIBF_ALTRETICLE;
				else weaponstatus[0]&=~LIBF_ALTRETICLE;
			weaponstatus[LIBS_ZOOM]=
				clamp(cvar.getcvar("hd_libzoom",owner.player).getint(),0,32);
			weaponstatus[LIBS_DROPADJUST]=
				clamp(cvar.getcvar("hd_libmoa",owner.player).getint(),0,60);
		}
	}
	override double gunmass(){
		if(weaponstatus[0]&LIBF_NOLAUNCHER){
			return 9+weaponstatus[LIBS_MAG]*0.04;
		}else{
			return 10+weaponstatus[LIBS_MAG]*0.04+(weaponstatus[0]&LIBF_GRENADELOADED?1.:0.);
		}
	}
	override double,int weaponbulk(){
		double blx=100;
		int uss=USE_776;
		if(!(weaponstatus[0]&LIBF_NOLAUNCHER)){
			blx+=25;
			uss|=USE_ROCKET;
			if(weaponstatus[0]&LIBF_GRENADELOADED)blx+=ENC_ROCKETLOADED;
		}
		int mgg=weaponstatus[LIBS_MAG];
		return blx+(mgg<0?0:(ENC_776MAG_LOADED+mgg*ENC_776_LOADED)),uss;
	}
	override void failedpickupunload(){
		if(weaponstatus[LIBS_MAG]<0)return;
		A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		A_PlaySound("weapons/rifleload",5);
		HDMagAmmo.SpawnMag(self,"HD7mMag",weaponstatus[LIBS_MAG]);
		weaponstatus[LIBS_MAG]=-1;
		setstatelabel("spawn");
	}
	override void tick(){
		super.tick();
		drainheat(LIBS_HEAT,8);
	}
	action void A_Chamber(bool unloadonly=false){
		A_PlaySound("weapons/rifleclick",6);
		actor brsss=null;
		if(invoker.weaponstatus[LIBS_CHAMBER]==1){
			int bss=invoker.weaponstatus[LIBS_BRASS];
			if(bss<random(1,7)){
				invoker.weaponstatus[LIBS_BRASS]++;
				A_PlaySound("misc/casing",CHAN_AUTO);
			}else{
				double fc=max(pitch*0.01,5);
				double cosp=cos(pitch);
				[cosp,brsss]=A_SpawnItemEx("HDSpent7mm",
					cosp*12,0,height-8-sin(pitch)*12,
					cosp*fc,0.2*randompick(-1,1),-sin(pitch)*fc,
					0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				brsss.vel+=vel;
				brsss.A_PlaySound(brsss.bouncesound,CHAN_BODY,0.4);
			}
		}else if(invoker.weaponstatus[LIBS_CHAMBER]==2){
			double fc=max(pitch*0.01,5);
			double cosp=cos(pitch);
			[cosp,brsss]=A_SpawnItemEx("HDLoose7mm",
				cosp*12,0,height-8-sin(pitch)*12,
				cosp*fc,0.2*randompick(-1,1),-sin(pitch)*fc,
				0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			brsss.vel+=vel;
			brsss.A_PlaySound(brsss.bouncesound,CHAN_BODY,0.4);
		}
		if(!unloadonly && invoker.weaponstatus[LIBS_MAG]>0){
			invoker.weaponstatus[LIBS_MAG]--;
			invoker.weaponstatus[LIBS_CHAMBER]=2;
		}else{
			invoker.weaponstatus[LIBS_CHAMBER]=0;
			if(brsss!=null)brsss.vel=vel+(cos(angle),sin(angle),-2);
		}
	}
	states{
	brasstube:
		TNT1 A 4{
			if(
				invoker.weaponstatus[LIBS_BRASS]>0
				&&(
					pitch>5
					||countinv("WeaponBusy")
				)
			){
				double fc=max(pitch*0.01,5);
				double cosp=cos(pitch);
				actor brsss;
				[cosp,brsss]=A_SpawnItemEx("HDSpent7mm",
					cosp*12,0,height-8-sin(pitch)*12,
					cosp*fc,0.2*randompick(-1,1),-sin(pitch)*fc,
					0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				brsss.vel+=vel;
				brsss.A_PlaySound(brsss.bouncesound,CHAN_BODY,0.4);
				invoker.weaponstatus[LIBS_BRASS]--;
			}
		}wait;
	select0:
		BRFG A 0{
			A_Overlay(776,"brasstube");
			invoker.weaponstatus[0]&=~LIBF_GRENADEMODE;
		}goto select0big;
	deselect0:
		BRFG A 0{
			while(invoker.weaponstatus[LIBS_BRASS]>0){
				double cosp=cos(pitch);
				actor brsss;
				[cosp,brsss]=A_SpawnItemEx("HDSpent7mm",
					cosp*12,0,height-8-sin(pitch)*12,
					cosp*3,0.2*randompick(-1,1),-sin(pitch)*3,
					0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				brsss.vel+=vel;
				brsss.A_PlaySound(brsss.bouncesound,CHAN_BODY,0.4);
				invoker.weaponstatus[LIBS_BRASS]--;
			}
		}goto deselect0big;
	ready:
		BRFG A 1 A_WeaponReady(WRF_ALL);
		goto readyend;
	user3:
		---- A 0 A_JumpIf(!(invoker.weaponstatus[0]&LIBF_GRENADEMODE),1);
		goto super::user3;
		---- A 0 A_MagManager("HD7mMag");
		goto ready;

	fire:
		BRFG A 0{
			if(
				invoker.weaponstatus[0]&LIBF_NOLAUNCHER
				||!(invoker.weaponstatus[0]&LIBF_GRENADEMODE)
			){
				setweaponstate("firegun");
			}else setweaponstate("firegrenade");
		}
	hold:
		BRFG A 2{
			if(
				invoker.weaponstatus[0]&LIBF_GRENADEMODE
				||!(invoker.weaponstatus[0]&LIBF_FULLAUTO)
				||invoker.weaponstatus[LIBS_CHAMBER]!=2
			)setweaponstate("nope");
		}goto shoot;

	firegun:
		BRFG A 1{
			if(invoker.weaponstatus[0]&LIBF_FULLAUTO)A_SetTics(2);
		}
	shoot:
		BRFG A 1{
			if(invoker.weaponstatus[LIBS_CHAMBER]==2)A_Gunflash();
			else setweaponstate("chamber_manual");
			A_WeaponReady(WRF_NOFIRE);
		}
		BRFG B 0 A_Chamber();
		BRFG B 0 A_Refire();
		goto nope;
	flash:
		BRFF A 1 bright{
			A_Light1();
			HDFlashAlpha(32);
			A_PlaySound("weapons/bigrifle",1);
			A_ZoomFactor(0.97,ZOOM_INSTANT|ZOOM_NOSCALETURNING);

			actor p=spawn("HDBullet776",pos+(0,0,height-6));
			p.target=self;p.angle=angle;p.pitch=pitch;
			p.vel+=self.vel;
			p.pitch-=(1./120.)*invoker.weaponstatus[LIBS_DROPADJUST];

			A_MuzzleClimb(
				0,0,
				-0.2,-0.4,
				-frandom(0.5,0.9),-frandom(1.7,2.1),
				-frandom(0.5,0.9),-frandom(1.7,2.1)
			);

			invoker.weaponstatus[LIBS_CHAMBER]=1;
			invoker.weaponstatus[LIBS_HEAT]+=2;
			A_AlertMonsters();
		}
		TNT1 A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		goto lightdone;
	chamber_manual:
		BRFG B 1 offset(-1,34){
			if(
				invoker.weaponstatus[LIBS_CHAMBER]==2
				||invoker.weaponstatus[LIBS_MAG]<1
			)setweaponstate("nope");
		}
		BRFG B 1 offset(-2,36)A_PlaySound("weapons/rifleclick");
		BRFG B 1 offset(-2,38)A_Chamber();
		BRFG B 1 offset(-1,34);
		goto nope;


	firemode:
		---- A 0{
			if(invoker.weaponstatus[0]&LIBF_GRENADEMODE)setweaponstate("abadjust");
			else if(PressingZoom())setweaponstate("moaadjust");
			else invoker.weaponstatus[0]^=LIBF_FULLAUTO;
		}goto nope;

	zoom:
		BRFG A 1 A_WeaponReady(WRF_NOFIRE);
		BRFG A 0{
			if(PressingFire())invoker.weaponstatus[LIBS_ZOOM]++;
			else if(PressingAltfire())invoker.weaponstatus[LIBS_ZOOM]--;
			else if(PressingFireMode())setweaponstate("moaadjust");
			else if(!PressingZoom())setweaponstate("nope");
			invoker.weaponstatus[LIBS_ZOOM]=clamp(invoker.weaponstatus[LIBS_ZOOM],0,32);
		}loop;

	moaadjust:
		BRFG A 1 A_WeaponReady(WRF_NOFIRE);
		BRFG A 0{
			if(PressingFire())invoker.weaponstatus[LIBS_DROPADJUST]++;
			else if(PressingAltfire())invoker.weaponstatus[LIBS_DROPADJUST]--;
			else if(PressingZoom()&&!PressingFireMode())setweaponstate("zoom");
			else if(!PressingZoom()&&!PressingFireMode())setweaponstate("nope");
			invoker.weaponstatus[LIBS_DROPADJUST]=
				clamp(invoker.weaponstatus[LIBS_DROPADJUST],0,60);
		}loop;


	unloadchamber:
		BRFG B 1 offset(-1,34){
			if(
				invoker.weaponstatus[LIBS_CHAMBER]<1
			)setweaponstate("nope");
		}
		BRFG B 1 offset(-2,36)A_Chamber(true);
		BRFG B 1 offset(-2,38);
		BRFG B 1 offset(-1,34);
		goto nope;

	loadchamber:
		BRFG A 0 A_JumpIf(invoker.weaponstatus[LIBS_CHAMBER]>0,"nope");
		BRFG A 0 A_JumpIf(!countinv("SevenMilAmmo"),"nope");
		BRFG A 1 offset(0,34) A_PlaySound("weapons/pocket",CHAN_WEAPON);
		BRFG A 1 offset(2,36);
		BRFG B 1 offset(5,40);
		BRFG B 4 offset(4,39){
			if(countinv("SevenMilAmmo")){
				A_TakeInventory("SevenMilAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[LIBS_CHAMBER]=2;
				A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
				A_PlaySound("weapons/rockreload",6,0.7);
			}
		}
		BRFG B 7 offset(5,37);
		BRFG B 1 offset(2,36);
		BRFG A 1 offset(0,34);
		goto readyend;

	user4:
	unload:
		BRFG A 0{
			invoker.weaponstatus[0]|=LIBF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[0]&LIBF_GRENADEMODE
			){
				return resolvestate("unloadgrenade");
			}else if(
				invoker.weaponstatus[LIBS_MAG]>=0  
			){
				return resolvestate("unmag");
			}else if(
				invoker.weaponstatus[LIBS_CHAMBER]>0  
			){
				return resolvestate("unloadchamber");
			}
			return resolvestate("nope");
		}
	reload:
		BRFG A 0{
			int inmag=invoker.weaponstatus[LIBS_MAG];
			invoker.weaponstatus[0]&=~LIBF_JUSTUNLOAD;
			if(
				//no point reloading
				inmag>=30
				||(
					//no mags to load and can't directly load chamber
					!countinv("HD7mMag")
					&&(
						inmag>=0
						||invoker.weaponstatus[LIBS_CHAMBER]>0
						||!countinv("SevenMilAmmo")
					)
				)
			)return resolvestate("nope");
			else if(
				//no mag, empty chamber, have loose rounds
				inmag<0
				&&!countinv("HD7mMag")
				&&invoker.weaponstatus[LIBS_CHAMBER]<1
				&&countinv("SevenMilAmmo")
			)return resolvestate("loadchamber");
			else if(
				invoker.weaponstatus[LIBS_MAG]>0  
			){
				//if full mag and unchambered, chamber
				if(
					invoker.weaponstatus[LIBS_MAG]>=30  
					&&invoker.weaponstatus[LIBS_CHAMBER]!=2
				){
					return resolvestate("chamber_manual");
				}				
			}return resolvestate("unmag");
		}

	unmag:
		BRFG A 1 offset(0,34);
		BRFG A 1 offset(2,36);
		BRFG B 1 offset(4,40);
		BRFG B 2 offset(8,42){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		}
		BRFG B 4 offset(14,46){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_PlaySound ("weapons/rifleload");
		}
		BRFG B 0{
			int magamt=invoker.weaponstatus[LIBS_MAG];
			if(magamt<0){setweaponstate("magout");return;}
			invoker.weaponstatus[LIBS_MAG]=-1;
			if(
				!PressingReload()
				&&!PressingUnload()
			){
				HDMagAmmo.SpawnMag(self,"HD7mMag",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD7mMag",magamt);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		BRFG B 7 offset(12,52)A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		BRFG B 0 A_PlaySound ("weapons/pocket");
		BRFG BB 7 offset(14,54)A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		BRFG B 0{
		}goto magout;
	magout:
		BRFG B 4{
			invoker.weaponstatus[LIBS_MAG]=-1;
			if(invoker.weaponstatus[0]&LIBF_JUSTUNLOAD)setweaponstate("reloaddone");
		}goto loadmag;


	loadmag:
		BRFG B 0 A_PlaySound("weapons/pocket",CHAN_WEAPON);
		BRFG BB 7 offset(14,54)A_MuzzleClimb(frandom(-0.2,0.4),frandom(-0.2,0.8));
		BRFG B 6 offset(12,52){
			let mmm=hdmagammo(findinventory("HD7mMag"));
			if(mmm){
				invoker.weaponstatus[LIBS_MAG]=mmm.TakeMag(true);
				A_PlaySound("weapons/rifleclick",CHAN_BODY);
				A_PlaySound("weapons/rifleload",CHAN_WEAPON);
			}
		}
		BRFG B 2 offset(8,46) A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		goto reloaddone;

	reloaddone:
		BRFG B 1 offset (4,40);
		BRFG A 1 offset (2,36){
			if(
				invoker.weaponstatus[LIBS_CHAMBER]!=2
				&&invoker.weaponstatus[LIBS_MAG]>0  
			)A_Chamber();
		}
		BRFG A 1 offset (0,34);
		goto nope;


	altfire:
		BRFG A 1 offset(0,34){
			if(invoker.weaponstatus[0]&LIBF_NOLAUNCHER){
				invoker.weaponstatus[0]&=~(LIBF_GRENADEMODE|LIBF_GRENADELOADED);
				setweaponstate("nope");
			}else invoker.airburst=0;
		}
		BRFG A 1 offset(2,36);
		BRFG B 1 offset(4,40);
		BRFG B 1 offset(2,36);
		BRFG A 1 offset(0,34);
		BRFG A 0{
			invoker.weaponstatus[0]^=LIBF_GRENADEMODE;
			A_Refire();
		}goto ready;
	althold:
		BRFG A 0;
		goto nope;
	abadjust:
		BRFG A 2 A_WeaponReady(WRF_NONE);
		BRFG A 0{
			A_SetInventory("WeaponBusy",1);
			if (PressingFire()||PressingAltfire()){
				if(PressingFire())invoker.modairburst(1);
				else invoker.modairburst(-1);
			}else if(PressingZoom()){
				invoker.airburst=0;
				setweaponstate("nope");
			}
			if(PressingFireMode())setweaponstate("abadjust");
		}goto nope;


	firegrenade:
		BRFG B 2{
			if(invoker.weaponstatus[0]&LIBF_GRENADELOADED){
				A_FireHDGL();
				invoker.weaponstatus[0]&=~LIBF_GRENADELOADED;
				A_ZoomFactor(0.99,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
				A_MuzzleClimb(
					0,0,
					-1.2,-3.,
					-0.6,-1.4
				);
			}else setweaponstate("nope");
		}
		BRFG B 2 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		BRFG A 0 A_Refire("nope");
		goto ready;
	altreload:
		BRFG A 0{
			if(!(invoker.weaponstatus[0]&LIBF_NOLAUNCHER)){
				invoker.weaponstatus[0]&=~LIBF_JUSTUNLOAD;
				setweaponstate("unloadgrenade");
			}
		}goto nope;
	unloadgrenade:
		BRFG A 1 offset(0,34){
			A_SetCrosshair(21);
			if(
				(
					//just unloading but no grenade
					invoker.weaponstatus[0]&LIBF_JUSTUNLOAD
					&&!(invoker.weaponstatus[0]&LIBF_GRENADELOADED)
				)||(
					//reloading but no ammo or already loaded
					!(invoker.weaponstatus[0]&LIBF_JUSTUNLOAD)
					&&(
						!countinv("HDRocketAmmo")
						||invoker.weaponstatus[0]&LIBF_GRENADELOADED
					)
				)
			){
				setweaponstate("nope");
			}
		}
		BRFG A 1 offset(-5,40);
		BRFG A 1 offset(-10,50);
		BRFG A 1 offset(-15,56);
		BRFG A 4 offset(-14,54){
			A_PlaySound("weapons/pocket",6);
			A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		}
		BRFG A 3 offset(-16,56){
			if(invoker.weaponstatus[0]&LIBF_GRENADELOADED){
				if(
					(PressingReload()||PressingUnload())
					&&!A_JumpIfInventory("HDRocketAmmo",0,"null")
				){
					A_GiveInventory("HDRocketAmmo");
					A_PlaySound("weapons/pocket",6);
					A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
					A_SetTics(6);
				}else A_SpawnItemEx("HDRocketAmmo",
					cos(pitch)*12,0,height-10-12*sin(pitch),
					vel.x,vel.y,vel.z,
					0,SXF_SETTARGET|SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				invoker.weaponstatus[0]&=~LIBF_GRENADELOADED;
			}
		}
		BRFG A 0{
			if(invoker.weaponstatus[0]&LIBF_JUSTUNLOAD)setweaponstate("altreloaddone");
		}
		BRFG AA 8 offset(-16,56)A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		BRFG A 18 offset(-14,54)A_PlaySound("weapons/rockreload",CHAN_WEAPON);
		BRFG B 4 offset(-12,50){
			A_PlaySound("weapons/grenopen",CHAN_WEAPON);
			A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
			invoker.weaponstatus[0]|=LIBF_GRENADELOADED;
		}
	altreloaddone:
		BRFG A 1 offset(-15,56);
		BRFG A 1 offset(-10,50);
		BRFG A 1 offset(-5,40);
		BRFG A 1 offset(0,34);
		goto nope;

	spawn:
		BRFL ABCD -1 nodelay{
			// A: -g +m
			// B: +g +m
			// C: -g -m
			// D: +g -m
			if(invoker.weaponstatus[0]&LIBF_NOLAUNCHER){
				if(invoker.weaponstatus[LIBS_MAG]<0)frame=2;
				else frame=0;
			}else{
				if(invoker.weaponstatus[LIBS_MAG]<0)frame=3;
				else frame=1;
			}
		}
	}
	override void InitializeWepStats(bool idfa){
		weaponstatus[LIBS_FLAGS]|=LIBF_GRENADELOADED;
		weaponstatus[LIBS_MAG]=30;
		weaponstatus[LIBS_CHAMBER]=2;
		if(!idfa && !owner){
			if(randompick(0,0,1))weaponstatus[0]|=LIBF_FRONTRETICLE;
			if(randompick(0,0,1))weaponstatus[0]|=LIBF_ALTRETICLE;
			weaponstatus[LIBS_ZOOM]=0;
			weaponstatus[LIBS_HEAT]=0;
			weaponstatus[LIBS_DROPADJUST]=24;
		}
	}
}
enum liberatorstatus{
	LIBF_FULLAUTO=1,
	LIBF_JUSTUNLOAD=2,
	LIBF_GRENADELOADED=4,
	LIBF_NOLAUNCHER=8,
	LIBF_FRONTRETICLE=32,
	LIBF_ALTRETICLE=64,
	LIBF_GRENADEMODE=128,
	LIBF_UNLOADONLY=256,

	LIBS_FLAGS=0,
	LIBS_CHAMBER=1,
	LIBS_MAG=2, //-1 is ampty
	LIBS_ZOOM=3,
	LIBS_HEAT=4,
	LIBS_BRASS=5,
	LIBS_AIRBURST=6,
	LIBS_DROPADJUST=7,
};


class LiberatorNoGL:InventoryFlag{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Liberator (no GL)"
		//$Sprite "BRFLA0"
	}
	override void postbeginplay(){
		super.postbeginplay();
		LiberatorRifle lll;
		if(owner){
			owner.A_SetInventory("LiberatorRifle",1);
			lll=LiberatorRifle(owner.findinventory("LiberatorRifle"));
		}else{
			lll=LiberatorRifle(spawn("LiberatorRifle",pos));
			lll.special=special;
		}
		lll.weaponstatus[0]|=LIBF_NOLAUNCHER;
		lll.weaponstatus[0]&=~LIBF_GRENADELOADED;
		destroy();
	}
}



