// ------------------------------------------------------------
// Gyro-Grenades and H.E.A.T.
// ------------------------------------------------------------
class AirburstCount:InventoryFlag{}
extend class HDWeapon{
	action void A_FireHDGL(int airburstcounter=0){
		A_PlaySound("weapons/grenadeshot",CHAN_WEAPON);
		let ggg=gyrogrenade(spawn("GyroGrenade",pos+(0,0,height-8)));
		ggg.angle=angle;ggg.pitch=pitch;ggg.target=self;ggg.master=self;
		ggg.primed=false;
		ggg.stamina=0;
		if(airburstcounter){
			ggg.fuze=invoker.weaponstatus[airburstcounter];
			invoker.weaponstatus[airburstcounter]=0;
		}else ggg.fuze=0;
	}
	action void A_CheckAirburstCVar(int weaponstatnum){
		if(player){
			int abv=cvar.getcvar("ab",player).getint();
			if(abv>=0){
				invoker.weaponstatus[weaponstatnum]=max(abv,0);
				cvar.getcvar("ab",player).setint(-1);
			}
		}
	}
}
class GyroGrenade:SlowProjectile{
	int fuze;bool primed;bool isrocket;
	default{
		-noextremedeath -noteleport +bloodlessimpact
		height 3; radius 3; scale 0.5;
		speed 110; mass 600; accuracy 0; woundhealth 0;
		obituary "%o was fragged by %k.";
		stamina 42; //used for fuel
	}
	override void postbeginplay(){
		super.postbeginplay();
		if(isrocket)speed*=2;
		A_ChangeVelocity(speed*cos(pitch),0,speed*sin(-pitch),CVF_RELATIVE);
	}
	states{
	spawn:
		ROCQ A 0;
	spawn1:
		#### B 1 A_JumpIf(isrocket,"spawnrocket");
		#### A 0{primed=true;}
	spawn2:
		#### AB 1{
			fuze--;
			if(!fuze)ExplodeMissile();
		}loop;
	spawnrocket:
		---- A 0{
			brockettrail=true;
			Gunsmoke();
			A_PlaySound("weapons/rocklaunch",CHAN_VOICE);
		}
		---- AAA 0{
			actor sss=spawn("HDSmoke",pos-vel*0.1+(0,0,-4));
			sss.vel=vel*-0.06+(frandom(-2,2),frandom(-2,2),frandom(-2,2));
		}
	spawnrocket2:
		#### BA 1{
			if(stamina>0){  
				if(!inthesky){
					actor sss=spawn("HDGunsmoke",pos);
					sss.vel=vel*0.1;
				}
				if(tracer)A_FaceTracer(20,20);
				A_ChangeVelocity(
					cos(pitch)*stamina,0,
					sin(-pitch)*stamina+1,CVF_RELATIVE
				);
				accuracy++;
			}
			fuze--;
			if(!fuze)ExplodeMissile();
			stamina--;
		}
		---- A 0{
			if(!primed){
				primed=true;
				brockettrail=false;
				bgrenadetrail=true;
			}
		}loop;
	death:
		TNT1 A 1{
			if(!primed){
				A_SpawnItemEx("DudRocket",0,0,0,random(30,60),random(-10,10),random(-10,10),random(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,0);
				return;
			}
			if(tracer)tracer.damagemobj(self,target,clamp((42-stamina)*20,0,400),"SmallArms3");
			A_SprayDecal("Scorch",8);

			//explosion
			if(!inthesky){
				A_Blast(
					pushradius:256,pushamount:128,fullpushradius:96,
					fragradius:HDCONST_SPEEDOFSOUND,
					fragdamage:random(160,200+2*stamina),
					gibradius:16,gibamount:random(1,8)*10
				);
				actor xpl=Spawn("Gyrosploder",self.pos-(0,0,1),ALLOW_REPLACE);
				xpl.target=target;xpl.master=master;xpl.stamina=stamina;
			}else{actor xpl=Spawn("DistantRocket",self.pos,ALLOW_REPLACE);}
			A_SpawnChunks("HDBulletFrag",180,100,500+4*stamina);
		}stop;
	}
}
class HDHEAT:GyroGrenade{
	default{
		+forcepain
		scale 0.4; woundhealth 1800;
		decal "BrontoScorch";
	}
	states{
	spawn:
		MISL A 0 nodelay{primed=true;}
		goto spawnrocket;
	death:
		TNT1 AAA 0 A_SpawnItemEx ("HDSmokeChunk", 0,0,1, random(-3,3),random(-3,3),random(2,6),random(-15,15),SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,32);
		TNT1 A 1{
			if(tracer)tracer.damagemobj(self,target,random(3,5)*600+clamp((42-stamina)*20,0,400),"SmallArms3");
			A_SprayDecal("Scorch",8);

			//explosion
			if(!inthesky){
				A_Blast(
					pushradius:256,pushamount:128,fullpushradius:96,
					fragradius:HDCONST_SPEEDOFSOUND,
					fragdamage:random(160,200+2*stamina),
					gibradius:16,gibamount:random(1,8)*10
				);
				actor xpl=Spawn("Gyrosploder",self.pos-(0,0,1),ALLOW_REPLACE);
				xpl.target=target;xpl.master=master;xpl.stamina=stamina;
			}else{actor xpl=Spawn("DistantRocket",self.pos,ALLOW_REPLACE);}
			A_SpawnChunks("HDBulletFrag",40,100,500+4*stamina);
		}stop;
	}
}

class Gyrosploder:HDActor{
	int ud;
	default{
		+invisible;+noblockmap;+missile;-nointeraction;+nodamagethrust;gravity 0;height 6;radius 6;
		decal "BigScorch";
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_ChangeVelocity(1,0,0,CVF_RELATIVE);
	}
	states{
	death:
		TNT1 A 0{
			if(ceilingz-pos.z<(pos.z-floorz)*3) ud=-5;
			else ud=5;
		}
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("HugeWallChunk", -1,0,ud, random(-7,7),random(-7,7),ud*random(1,3),random(0,360),SXF_NOCHECKPOSITION);
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("BigWallChunk", -1,0,ud, random(-1,6),random(-4,4),ud*random(1,4),random(0,360),SXF_NOCHECKPOSITION);
		TNT1 AA 0 A_SpawnItemEx ("HDSmoke", -1,0,ud, random(-2,2),random(-2,2),0, random(-15,15),SXF_NOCHECKPOSITION);
	xdeath:
	spawn:
		TNT1 A 0 nodelay{
			A_RadiusThrust(66,196,RTF_NOIMPACTDAMAGE|RTF_THRUSTZ,24);
			A_RadiusGive("BlastGib",16.0,RGF_CUBE|RGF_CORPSES|RGF_MONSTERS,1);
			bMissile=false;
		}
		TNT1 AA 0 A_SpawnItemEx("HDExplosion",random(-1,1),random(-1,1),2, 0,0,0, 0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		TNT1 A 2 A_SpawnItemEx("HDExplosion",0,0,0,0,0,2,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		TNT1 AAAAAAAAAAAAAAA 0 A_SpawnItemEx ("BigWallChunk", 0,0,1, random(-1,6),random(-4,4),random(4,18),random(-15,15),SXF_NOCHECKPOSITION);
	Death2:
		TNT1 AA 0 A_SpawnItemEx ("HDSmoke", -1,0,1, random(-2,3),random(-2,2),0, random(-15,15),SXF_NOCHECKPOSITION);
		TNT1 A 21{
			A_AlertMonsters();
			A_SpawnItemEx("DistantRocket",flags:SXF_NOCHECKPOSITION);
			DistantQuaker.Quake(self,4,35,512,10);
		}stop;
	}
}



