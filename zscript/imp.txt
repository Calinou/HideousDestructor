// ------------------------------------------------------------
// Imp
// ------------------------------------------------------------

//old non-recycling version still used for some other actors
class ImpBallTail:BlackParticleFountain{
	default{
		+nointeraction +forcexybillboard -invisible
		renderstyle "add";
		alpha 0.5;scale 0.6;
	}
	states{
	spawn:
		BAL1 BC 2 bright A_PlaySound("misc/firecrkl",0,0.2,0,4);
	death:
		BAL1 DDEE 2 bright A_FadeOut(0.2);
		stop;
	}
}
class ReverseImpBallTail:RedParticleFountain{
	default{
		+nointeraction +forcexybillboard -invisible
		renderstyle "add";
		scale 0.6;alpha 0;
	}
	states{
		spawn:
			BAL1 EEDC 2 bright A_FadeIn(0.2);
		death:
			BAL1 BAB 2 bright A_FadeIn(0.2);
			stop;
	}
}
class HDImpBallTail:HDFireballTail{
	default{
		translation "ice";
		renderstyle "subtract";
		deathheight 0.9;
		gravity 0;
	}
	states{
	spawn:
		BAL1 CDE 5{
			roll+=10;
			scale.x*=randompick(-1,1);
		}loop;
	}
}
class MageImpBallTail:HDFireballTail{
	default{
		deathheight 0.9;
		gravity 0;
		friction 0.92;
		radius 1.6;
	}
	states{
	spawn:
		BAL1 AB 2{
			roll=frandom(0,360);
			scale.x*=randompick(-1,1);
		}loop;
	}
}
class MageImpBall:HDImpBall{
	default{
		missiletype "MageImpBallTail";
		speed 10;
		scale 1.2;
	}
	override void A_HDIBFly(){
		roll=frandom(0,360);
		if(tracer)vel*=0.86;
		A_FBSeek(512);
	}
	states{
	spawn:
		BAL1 ABABABAB 2 A_FBTail();
		goto spawn2;
	death:
		TNT1 AAA 0 A_SpawnItemEx("HDSmoke",flags:SXF_NOCHECKPOSITION);
		TNT1 A 0 {if(blockingmobj)A_Immolate(blockingmobj,target,40);}
		goto super::death;
	}
}
class HDImpBall:HDFireball{
	default{
		+seekermissile
		missiletype "HDImpBallTail";
		speed 12;
		damagetype "electro";
		gravity 0;
	}
	double initangleto;
	double inittangle;
	double inittz;
	vector3 initpos;
	virtual void A_HDIBFly(){
		roll+=10;
		if(!A_FBSeek()){
			vel*=0.99;
			A_FBFloat();
			A_Corkscrew(stamina*frandom(0,0.4));if(stamina<5)stamina++;
		}
	}
	void A_ImpSquirt(){
		roll=frandom(0,360);alpha*=0.96;scale*=frandom(1.,0.96);
		if(!tracer)return;
		int diff=max(
			absangle(initangleto,angleto(tracer)),
			absangle(inittangle,tracer.angle),
			abs(inittz-tracer.pos.z)*0.05
		);
		int dmg=max(0,10-diff/10);
		if(!tracer.player)tracer.angle+=randompick(-10,10);

		//do it again
		initangleto=angleto(tracer);
		inittangle=tracer.angle;
		inittz=tracer.pos.z;

		if(dmg){
			tracer.damagemobj(self,target,dmg/10,"Thermal");
			tracer.A_GiveInventory("Heat",dmg);
		}
		setorigin((pos+(tracer.pos-initpos))*0.5,true);
	}
	states{
	spawn:
		BAL1 ABAB 3 A_FBTail();
	spawn2:
		BAL1 AB 3 A_HDIBFly();
		loop;
	death:
		TNT1 AAA 0 A_SpawnItemEx("HDSmoke",flags:SXF_NOCHECKPOSITION);
		TNT1 A 0{
			A_Scream();
			tracer=null;
			if(blockingmobj){
				if(
					blockingmobj is "DoomImp"
					&&(!target||blockingmobj!=target.target)
				)blockingmobj.health=min(
						blockingmobj.spawnhealth(),
						blockingmobj.health+random(1,10)
				);
				else{
					tracer=blockingmobj;
					blockingmobj.damagemobj(self,target,random(6,18),"Electro");
				}
			}
			if(tracer){
				initangleto=angleto(tracer);
				inittangle=tracer.angle;
				inittz=tracer.pos.z;
				initpos=tracer.pos-pos;

				//HEAD SHOT
				if(
					pos.z-tracer.pos.z>tracer.height*0.8
					&&!(tracer is "Cacodemon")
					&&!(tracer is "Demon")
					&&!(tracer is "SpiderMastermind")
					&&!(tracer is "Arachnotron")
					&&!(tracer is "PainElemental")
					&&!(tracer is "LostSoul")
					&&!(tracer is "Putto")
					&&!(tracer is "Yokai")
				){
					if(hd_debug)A_Log("HEAD SHOT");
					bpiercearmor=true;
				}
			}else A_SprayDecal("BrontoScorch",radius*2);
		}
		BAL1 ABCCDDEEEEEEE 3 A_ImpSquirt();
		stop;
	}
}


class FighterImp:DoomImp{
	default{
		//$Category "Monsters/Hideous Destructor"
		//$Title "Imp Fighter"
		//$Sprite "TROOA1"

		damagefactor "Thermal",0.66;
		Health 100;
		gibhealth 100;
		Radius 12;
		Height 54;
		Speed 12;
		Damage 4;
		MeleeDamage 4;
		PainChance 80;
		translation "64:72=50:71";
		meleesound "imp/melee";
		obituary "%o was marinated by the imps.";
		hitobituary "%o was tenderized by the imps.";
	}
	override void postbeginplay(){
		super.postbeginplay();
		hdmobster.spawnmobster(self);
		hdmobai.resize(self,0.8,1.1);
	}
	void A_ImpChase(){
		hdmobai.chase(self);
	}
	vector2 leadaim1;
	vector2 leadaim2;
	states{
	spawn2:
		#### ABCD 4{
			A_Wander();
			A_Look();
		}
		#### A 0 A_Jump(198,"spawn2");
		#### A 0 A_Recoil(-0.4);
		#### A 0 A_Jump(64,"spawn0");
		loop;
	spawn:
		TROO A 0;
	spawn0:
		---- A 0{
			if(countinv("Clip")<1){
				A_GiveInventory("Clip",1);
				A_SetScale(scale.x*frandom(0.9,1.1));
				A_SetSize(radius*scale.x,height*scale.y);
				mass*=scale.x;
				if(scale.x>1.0){
					A_SetHealth(health*scale.x);
				}
			}
		}
		#### AAABBCCCDD 8 A_Look();
		#### A 0 A_SetAngle(angle+random(-4,4));
		#### A 1 A_SetTics(random(1,3));
		---- A 0 A_Jump(216,2);
		---- A 0 A_PlaySound("imp/active");
		#### A 0 A_JumpIf(bambush,"spawn0");
		#### A 0 A_Jump(32,"spawn2");
		loop;
	see_evade:
		---- A 0 A_Chase("missile","melee",CHF_DONTMOVE);
		---- A 0 A_FaceTarget();
		---- A 0 A_SetAngle(angle+random(40,120)*(random(0,1)*2-1));
		---- A 0 {bnodropoff=true;}
	see_evade2:
		---- A 0 A_SetAngle(angle+random(-30,30));
		#### ABCD 3 A_Recoil(-3);
		---- A 0{
			if(vel.xy dot vel.xy<25)angle+=frandom(-160,200);
			bnodropoff=false;
			A_TakeInventory("EvadeNow");
		}
		---- A 0 A_JumpIfTargetInLOS("Missile");
		goto see;
	see:
		---- A 0 A_JumpIf(floorz<pos.z-4,2);
		---- A 0 A_JumpIfInventory("EvadeNow",1,"see_evade");
		#### AABBCCDD 2 A_ImpChase();
		---- A 0 A_Jump(180,2);
		---- A 0 A_AlertMonsters();
		#### A 0 HealThing(random(2,8));
		loop;
	missile:
		#### ABCD 4{
			A_FaceTarget(40,40);
			if(A_JumpIfTargetInLOS("null",40))setstatelabel("missile0");
			else if(!A_JumpIfTargetInLOS("null"))setstatelabel("see");
		}loop;
	missile0:
		---- A 0 A_JumpIfTargetInLOS(1);
		goto spam;
		#### E 0{
			bNODROPOFF=true;
			A_ChangeVelocity(1,random(-1,1)*random(0,3),0,CVF_RELATIVE);
		}
		#### E 0 A_Jump(16,"hork");
		goto lead;
		#### E 0 A_JumpIfCloser(512,"lead");
		goto hork;

	lead:
		#### E 6 A_FaceTarget(40,40);
		#### E 1{
			A_FaceTarget(20,40);
			leadaim1=(angle,pitch);
		}
		#### E 0{
			A_FaceTarget(20,40);
			leadaim2=(angle,pitch);
			leadaim1=(deltaangle(leadaim1.x,leadaim2.x),deltaangle(leadaim2.y,leadaim1.y));

			double dist=min(distance3d(target),512);
			leadaim1*=frandom(0,dist/7); //less than average speed of ball
			leadaim1.x=clamp(leadaim1.x,-30,30);
			leadaim1.y=clamp(leadaim1.y,-12,10);

			angle+=leadaim1.x;
			pitch+=leadaim1.y;
		}
		#### F 4;
		#### G 8 A_SpawnProjectile("HDImpBall",34,0,0,CMF_AIMDIRECTION,pitch);
		#### F 0 A_ChangeVelocity(frandom(-1,1),frandom(-3,3),0,CVF_RELATIVE);
		#### F 6;
		---- A 0 A_JumpIfTargetInsideMeleeRange("melee");
		#### E 0 A_JumpIf(!hdmobai.TryShoot(self,32,256,10,10),"see");
		#### E 0 A_Jump(16,"see");
		#### E 0 A_Jump(40,"spam","hork");
		goto missile;

	spam:
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,3);
		#### DD 2 A_FaceTarget(12,24);
		#### E 5 A_SetTics(random(4,6));
		#### E 0 A_JumpIfTargetInLOS(1);
		goto spam2;
		#### E 2 A_FaceTarget(12,24);
	spam2:
		#### F 2;
		#### G 6 A_SpawnProjectile("HDImpBall",35,0,frandom(-5,7),CMF_AIMDIRECTION,pitch+random(-4,4));
		#### F 4;
		#### F 0 A_JumpIfTargetInLOS(1);
		goto coverfire;
		---- A 0 A_Jump(120,"missile");
		goto see;
	coverfire:
		---- A 0 A_JumpIfTargetInsideMeleeRange("melee");
		#### E random(2,7)A_JumpIfTargetInLOS("Missile");
		---- A 0 A_Jump(180,"missile1a");
		---- A 0 A_Jump(40,"hork");
		---- A 0 A_Jump(40,"see");
		---- A 0 A_Jump(80,1);
		loop;
		#### AABBCCDD 2 A_ImpChase();
		goto missile;
	hork:
		#### E 0 A_Jump(156,"spam");
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,2);
		---- A 0 A_FaceTarget(40,80);
		#### E 2;
		#### E 0 A_PlaySound("imp/sight");
		#### EEEEE 2 A_SpawnItemEx("ReverseImpBallTail",4,24,random(31,33),1,0,0,0,160);
		#### E 2;
		#### F 2;
		#### G 0 A_SpawnProjectile("HDImpBall",36,0,(frandom(-2,10)),CMF_AIMDIRECTION,pitch+frandom(-4,4));
		#### G 0 A_SpawnProjectile("HDImpBall",36,0,(frandom(-4,4)),CMF_AIMDIRECTION,pitch+frandom(-4,4));
		#### G 0 A_SpawnProjectile("HDImpBall",36,0,(frandom(-2,-10)),CMF_AIMDIRECTION,pitch+frandom(-4,4));
		#### GGFE 5 A_SetTics(random(4,6));
		#### E 0 A_JumpIf(!hdmobai.TryShoot(self,32,256,10,10),"see");
		goto spam;
	melee:
		#### EE 4 A_FaceTarget();
		#### F 2;
		#### G 8 A_CustomMeleeAttack(random(10,30),"imp/melee","","claws",true);
		#### F 4;
		goto see;
	pain:
		---- A 0 A_GiveInventory("HDFireEnder",3);
		#### H 3 {bNODROPOFF=true;}
		#### H 3 A_Pain();
		---- A 0 A_Jump(180,2);
		---- A 0 A_AlertMonsters();
		#### A 2 A_FaceTarget();
		#### BCD 2 A_FastChase();
		goto missile;
	death:
		---- A 0 A_Gravity();
		---- A 0 A_GiveInventory("HDCorpseFlags",1);
		---- A 0 A_SpawnItemEx("tempshield",0,0,0,vel.x,vel.y,vel.z,0,40);
		#### I 6 {bNODROPOFF=false;}
		#### J 6 A_Scream();
		#### K 5 A_SpawnItemEx("tempshield2",0,0,0,vel.x,vel.y,vel.z,0,40);
		---- A 0 A_GiveInventory("NoBlockWepDrop");
		#### L 5;
	Dead:
		#### L 3 canraise A_JumpIf(abs(vel.z)<2,1);
		loop;
		#### M 5 canraise A_JumpIf(abs(vel.z)>=2,"Dead");
		loop;
	XDeathBrewtleLulz:
		---- A 0 A_GiveInventory("IsGibbed",1);
		---- A 0 {
			bshootable=false;
			bnodropoff=false;
		}
		#### N 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		#### O 5 A_XScream();
		#### O 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		#### P 5;
		#### P 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		#### QRS 5;
		#### T 5;
		goto XDead;
	XDeath:
		---- A 0 A_Gravity();
		---- A 0 A_GiveInventory("IsGibbed",1);
		---- A 0 {
			bshootable=false;
			bnodropoff=false;
		}
		#### N 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		#### O 5 A_XScream();
		#### O 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		#### P 5 A_GiveInventory("NoBlockWepDrop");
		#### P 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		#### QRS 5;
		#### T 5;
	XDead:
		#### T 5 canraise A_JumpIf(abs(vel.z)<2,1);
		wait;
		#### U 5 canraise A_JumpIf(abs(vel.z)>=2,"XDead");
		wait;
	Raise:
		---- A 0 A_GiveInventory("HDCorpseFlags",1);
		---- A 0 A_JumpIfInventory("IsGibbed",1,"RaiseGibbed");
		#### M 4 A_SpawnItemEx("MegaBloodSplatter",0,0,4,vel.x,vel.y,vel.z+3,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
		#### ML 6;
		#### KJI 4;
		goto see;
	RaiseGibbed:
		---- A 0 A_TakeInventory("IsGibbed");
		#### U 6 A_SpawnItemEx("MegaBloodSplatter",0,0,4,vel.x,vel.y,vel.z+3,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
		#### UT 8;
		#### SRQ 6;
		#### PON 4;
		#### H 4 A_Die("Ungibbed");
	Death.Ungibbed:
		---- A 0 A_GiveInventory("HDCorpseFlags",1);
		---- A 0 A_SpawnItemEx("tempshield",0,0,0,vel.x,vel.y,vel.z,0,40);
		#### I 6;
		#### J 6;
		#### K 5 A_SpawnItemEx("tempshield2",0,0,0,vel.x,vel.y,vel.z,0,40);
		#### L 5 A_NoBlocking();
		goto dead;
	death.spawndead:
		---- A 0{
			hdmobai.CorpseFlags(self);
		}goto dead;
	}
}


// ------------------------------------------------------------
// Healer Imp
// ------------------------------------------------------------
class tempshield2imp:tempshield2{
	default{+noblooddecals bloodtype "ShieldNeverBlood";}
}
class ShieldImpBall:DoomImpBall{
	default{
		+seekermissile +forcexybillboard
		decal "DoomImpScorch";
		-noblockmap
		+shootable +mthruspecies +noblooddecals
		scale 1.2;
		height 20;
		radius 20;
		speed 8;
		damagetype "Electro";
		damage 5;
		bloodtype "ShieldNeverBlood";
		health 1;
	}
	override int damagemobj(
		actor inflictor,actor source,int damage,
		name mod,int flags,double angle
	){
		if(!bmissile)return 0;
		ExplodeMissile();
		tempshield.spawnshield(self,"tempshield2imp",false,8);
		A_Scream();
		bmissile=false;
		setstatelabel("death");
		return 0;
	}
	vector2 savedvel;
	states{
	spawn:
		BAL1 A 0 nodelay{
			A_PlaySound("imp/attack",CHAN_VOICE);
			savedvel=vel.xy;
		}
		BAL1 ABABAB 2 bright;
		BAL1 B 2 A_JumpIfTargetInLOS("see");
		BAL1 ABABAB 2 bright A_SeekerMissile(6,9);
	see:
		BAL1 AB 2 bright A_SpawnItemEx("ImpBallTail",-2,0,0,vel.x*0.6,vel.y*0.6,vel.z*0.6+random(0,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION);
		BAL1 AB 1 bright;
		BAL1 A 2 bright A_SpawnItemEx("ImpBallTail",-2,0,0,vel.x*0.6,vel.y*0.6,vel.z*0.6+random(0,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION);
		BAL1 BA 1 bright;
		BAL1 B 2 bright A_SpawnItemEx("ImpBallTail",-2,0,0,vel.x*0.7,vel.y*0.7,vel.z*0.7+random(0,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION);
		BAL1 AB 1 bright A_BishopMissileWeave();
		TNT1 A 0 {savedvel=vel.xy;}
		BAL1 A 2 bright A_SpawnItemEx("ImpBallTail",-2,0,0,vel.x*0.8,vel.y*0.8,vel.z*0.8+random(0,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION);
		BAL1 B 2 A_JumpIfTargetInLOS(2,360);
		BAL1 B 0 A_Jump(256,2);
		BAL1 B 0 A_SeekerMissile(6,9);
		BAL1 B 0{
			savedvel=vel.xy;
			vel.z+=frandom(-3,4);
		}loop;
	death:
		TNT1 AAA 0 A_SpawnItemEx("HDSmoke",frandom(-1,1),frandom(-1,1),0,savedvel.x*0.2+frandom(-3,3),savedvel.y*0.2+frandom(-3,3),frandom(1,3),0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
		BAL1 A 2{
			vel.xy=savedvel*0.1;vel.z=1;
			A_NoBlocking();
		}
		BAL1 A 0{bshootable=false;}
		BAL1 BBCC 1 bright A_SpawnItemEx("HDSmoke",random(-1,1),random(-1,1),0,savedvel.x*0.2+frandom(-3,3),savedvel.y*0.2+frandom(-3,3),random(1,2),0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
		TNT1 A 0 A_FadeOut(0.2);
		BAL1 CCCC 1 bright A_SpawnItemEx("HDSmoke",random(-1,1),random(-1,1),0,frandom(-3,3),frandom(-3,3),random(1,2),0,SXF_NOCHECKPOSITION);
		TNT1 A 0 A_FadeOut(0.2);
		BAL1 DDDD 1 bright A_SpawnItemEx("HDSmoke",random(-1,1),random(-1,1),0,frandom(-3,3),frandom(-3,3),random(1,2),0,SXF_NOCHECKPOSITION);
		BAL1 E 0 bright A_FadeOut(0.2);
		TNT1 A 0 A_Gravity();
		TNT1 A 0 A_GiveInventory("Heat",300);
		BAL1 E 2 bright A_SpawnItemEx("HDSmoke",random(-1,1),random(-1,1),0,frandom(-3,3),frandom(-3,3),random(1,2),0,SXF_NOCHECKPOSITION);
		BAL1 E 2 bright A_FadeOut(0.2);
		BAL1 E 2 bright A_SpawnItemEx("HDSmoke",random(-1,1),random(-1,1),0,frandom(-3,3),frandom(-3,3),random(1,2),0,SXF_NOCHECKPOSITION);
		BAL1 E 2 bright A_FadeOut(0.2);
		TNT1 AAAAAAA 4 bright A_SpawnItemEx("HDSmoke",random(-1,1),random(-1,1),0,frandom(-3,3),frandom(-3,3),random(1,2),0,SXF_NOCHECKPOSITION);
		TNT1 AAAAAAA 6 bright A_SpawnItemEx("HDSmoke",random(-1,1),random(-1,1),0,frandom(-3,3),frandom(-3,3),random(1,2),0,SXF_NOCHECKPOSITION);
		TNT1 AAAAAAA 14 bright A_SpawnItemEx("HDSmoke",random(-1,1),random(-1,1),0,frandom(-3,3),frandom(-3,3),random(1,2),0,SXF_NOCHECKPOSITION);
		stop;
	}
}
class HealerImp:FighterImp{
	default{
		//$Category "Monsters/Hideous Destructor"
		//$Title "Imp Healer"
		//$Sprite "TROOA1"

		-missilemore
		scale 0.8;
		speed 6;
		height 48;
		radius 10;
		health 120;
		gibhealth 140;
		translation "64:77=50:76";
		seesound "";
		activesound "";
		meleedamage 3;
		obituary "%o could feel the schadenfreude.";
		hitobituary "%o said I want a second opinion,so the imps said okay you're ugly too.";
	}
	states{
	see:
		#### AABBCCDD 2{
			if(countinv("Cell")>0){
				A_ImpChase();
				A_Takeinventory("Cell",1);
			}
			else{A_VileChase();}
			if(!random(0,1))HealThing(random(1,3));
		}loop;
	missile:
		#### E 0 A_Jump(128,"Missile2");
		#### E 4 A_FaceTarget(0,0);
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,2);
		---- A 0 A_FaceTarget(0,0);
		#### F 4;
		#### G 8 A_SpawnProjectile("HDImpBall",(random(24,30)),0,(random(-6,6)),CMF_AIMDIRECTION,pitch);
		#### F 5;
		goto see;
	Missile2:
		#### E 2 A_FaceTarget(0,0);
		#### E 0 A_PlaySound("imp/sight");
		#### EEEEE 2 A_SpawnItemEx("ReverseImpBallTail",3,19,random(24,30),1,0,0,0,160);
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,2);
		---- A 0 A_FaceTarget(0,0);
		#### F 4;
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,2);
		---- A 0 A_FaceTarget(0,0);
		#### F 4;
		#### G 0 A_FaceTarget();
		#### G 0 A_SpawnProjectile("ShieldImpBall",32,8,0,CMF_AIMDIRECTION,pitch);
		#### GGFE 5;
		goto see;
	Pain:
		---- A 0 A_GiveInventory("HDFireEnder",5);
		#### H 3;
		#### H 3 A_Pain();
		goto see;
	Heal:
		#### AHAHAHAHAHA 4 light("HEAL");
		#### A 0{
			A_GiveInventory("Cell",random(24,32));
			HealThing(24);
		}goto see;
	Death:
		---- A 0 A_SpawnItemEx("BFGVileShard",0,0,24,0,0,8,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,164);
		goto super::death;
	XDeath:
		---- A 0 A_SpawnItemEx("BFGVileShard",0,0,24,0,0,8,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,188);
		goto super::xdeath;
	Raise:
		---- A 0 A_GiveInventory("HDCorpseFlags",1);
		---- A 0 A_JumpIfInventory("IsGibbed",1,"RaiseGibbed");
		#### M 4 A_SpawnItemEx("MegaBloodSplatter",0,0,4,vel.x,vel.y,vel.z+3,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
		#### ML 6;
		#### KJI 4;
		goto pain;
	}
}


// ------------------------------------------------------------
// Mage Imp
// ------------------------------------------------------------
class MageImp:FighterImp{
	default{
		//$Category "Monsters/Hideous Destructor"
		//$Title "Imp Caster"
		//$Sprite "TROOA1"

		-missilemore
		translation "none";
		radius 14;
		speed 6;
		scale 1.1;
		health 110;
		obituary "%o experienced the magic.";
		hitobituary "%o experienced ALL the magic.";
	}
	states{
	missile:
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,"missile1");
		#### E 0 A_Jump(16,"missile1");
		#### E 0 A_JumpIfCloser(640,1);
		goto Missile3;
		#### E 0 A_JumpIfCloser(256,1);
		goto Missile2;
	missile1:
		#### E 0 A_Jump(32,"missile2");
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,2);
		---- A 0 A_FaceTarget(0,0);
		#### E 6;
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,2);
		---- A 0 A_FaceTarget(0,0);
		#### F 6;
		#### G 8 A_SpawnProjectile("MageImpBall",(random(30,34)),0,(random(-6,6)),CMF_AIMDIRECTION,pitch);
		goto see;
	missile2:
		#### E 0 A_Jump(96,"Missile1");
		#### E 0 A_Jump(16,"Missile3");
		#### E 2 A_FaceTarget(0,0);
		#### E 2 A_PlaySound("imp/sight");
		#### EEEEEEE 2 A_SpawnItemEx("ReverseImpBallTail",random(3,5),random(23,25),random(31,33),1,0,0,0,160);
		---- A 0 A_JumpIfTargetInLOS(2);
		---- A 0 A_Jump(256,2);
		---- A 0 A_FaceTarget(0,0);
		#### F 6;

		#### GGGGGGGG 0 A_SpawnProjectile("MageImpBall2B",random(29,34),6,(random(-18,18)),CMF_AIMDIRECTION,pitch+frandom(-2,4));
		#### GGFE 5;
		goto see;
	missile3:
		#### E 0 A_Jump(16,"missile1");
		#### E 0 A_Jump(32,"missile2");
		#### E 8 A_FaceTarget(0,0);
		#### H 4 A_NoGravity();
		#### H 16 bright ThrustThingZ(0,8,0,0);
		#### H 8 bright A_Stop();
		#### H 0 A_SpawnProjectile("MageImpBall2",32,0,162,2,60);
		#### H 2 bright A_SpawnProjectile("MageImpBall2",32,0,-162,2,60);
		#### H 0 A_SpawnProjectile("MageImpBall2",32,0,156,2,40);
		#### H 2 bright A_SpawnProjectile("MageImpBall2",32,0,-156,2,40);
		#### H 0 A_SpawnProjectile("MageImpBall2",32,0,150,2,20);
		#### H 2 bright A_SpawnProjectile("MageImpBall2",32,0,-150,2,20);
		#### H 0 A_SpawnProjectile("MageImpBall2",32,0,144,2,0);
		#### H 2 bright A_SpawnProjectile("MageImpBall2",32,0,-144,2,0);
		#### H 0 A_SpawnProjectile("MageImpBall2",32,0,138,2,-10);
		#### H 2 bright A_SpawnProjectile("MageImpBall2",32,0,-138,2,-10);
		#### H 0 A_SpawnProjectile("MageImpBall2",32,0,132,2,-14);
		#### H 8 bright A_SpawnProjectile("MageImpBall2",32,0,-132,2,-14);
		#### H 8 A_LowGravity();
		#### H 0 A_Gravity();
		goto missile1;
	pain:
		---- A 0 A_GiveInventory("HDFireEnder",3);
		#### H 0 A_Gravity();
		#### H 3 {bNODROPOFF=true;}
		#### H 3 A_Pain();
		#### A 2 A_FaceTarget();
		#### BCD 2 A_FastChase();
		Goto Missile;
	}
}

class MageImpBall2:DoomImpBall{
	default{
		+seekermissile +forcexybillboard
		damage 2;
		speed 2;
		height 4;radius 4;
		scale 0.6;
		decal "DoomImpScorch";
		damagetype "Thermal";
	}
	states{
	spawn:
		BAL1 A 0 A_JumpIfInventory("Timer",10,2);
		BAL1 A 0 A_Jump(256,2);
		BAL1 A 0 bright A_SpawnItemEx("MageImpBall2B",-1,0,0,vel.x*4,vel.y*4,vel.z*4,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		stop;
		BAL1 A 0 A_GiveInventory("Timer",1);
		BAL1 A 2 bright FAST A_SeekerMissile(8,8);
		BAL1 B 2 bright FAST A_SeekerMissile(8,8);
		BAL1 A 0 bright A_SpawnItemEx("MageImpBall2Tail",-1,0,0,-1,0,1,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION);
		loop;
	death:
		TNT1 A 0 A_SpawnItemEx("HDSmoke",0,0,0,0,0,random(1,2),0,SXF_NOCHECKPOSITION);
		TNT1 A 0 A_Jump(212,2);
		TNT1 A 0 A_RadiusGive("HDFireStarter",32,RGF_PLAYERS|RGF_MONSTERS|RGF_OBJECTS|RGF_CORPSES,1);
		BAL1 CDE 4 bright A_FadeOut(0.2);
		stop;
	}
}
class MageImpBall2A:MageImpBall2{
	default{
		decal "DoomImpScorch";
		seesound "";
		speed 0;
	}
	states{
	spawn:
		BAL1 ABAB 2 bright nodelay A_SpawnItemEx("MageImpBall2Tail",-1,0,0,8,0,0,0,160,0);
		BAL1 A 0 ThrustThingZ(0,random(1,3),1,0);
	see:
		BAL1 A 0 A_Jump(82,2);
		BAL1 A 0 A_BishopMissileWeave();
		BAL1 AB 2 bright A_SpawnItemEx("MageImpBall2Tail2",-1,0,0,8,0,0,0,160,0);
		BAL1 A 0 A_JumpIf(pos.z-floorz<24,"Tread");
		BAL1 A 0 A_SeekerMissile(random(0,14),random(0,18));
		loop;
	tread:
		BAL1 A 0 ThrustThingZ(0,random(2,4),0,0);
		goto see;
	}
}
class MageImpBall2B:MageImpBall2A{
	default{
		scale 0.8;
		damage 3;
		seesound "imp/attack";
		speed 14;
	}
	states{
	spawn:
		BAL1 A 0 A_Jump(82,2);
		BAL1 A 0 A_SeekerMissile(4,8);
		BAL1 A 0 A_BishopMissileWeave();
		BAL1 AB 2 bright A_SpawnItemEx("MageImpBall2Tail2",-6,0,0,8,0,0,0,160,0);
		BAL1 A 0 A_JumpIf(pos.z-floorz<24,"Tread");
		loop;
	}
}
class MageImpBall2Tail:Actor{
	default{
		+nointeraction +forcexybillboard
		scale 0.6;
		renderstyle "add";
		alpha 0.6;
	}
	states{
	spawn:
		BAL1 A 0 nodelay A_PlaySound("misc/firecrkl",0,0.2,0,6);
		BAL1 A 6 bright A_FadeOut(0.1);
		wait;
	}
}
class MageImpBall2Tail2:MageImpBall2Tail{
	states{
	spawn:
		BAL1 A 0 nodelay A_PlaySound("misc/firecrkl",0,0.2,0,6);
		BAL1 A 4 bright A_FadeOut(0.2);
		wait;
	}
}


// ------------------------------------------------------------
// Imp Spawner
// ------------------------------------------------------------
class ImpSpawner:RandomSpawner replaces DoomImp{
	default{
		+ismonster
		dropitem "FighterImp",256,5;
		dropitem "HealerImp",256,2;
		dropitem "MageImp",256,3;
	}
}
class DeadImpSpawner:RandomSpawner replaces DeadDoomImp{
	default{
		+ismonster
		dropitem "DeadFighterImp",256,5;
		dropitem "DeadHealerImp",256,2;
		dropitem "DeadMageImp",256,3;
	}
}
class DeadFighterImp:FighterImp{
	override void postbeginplay(){
		super.postbeginplay();
		A_Die("spawndead");
	}
}
class DeadHealerImp:HealerImp{
	override void postbeginplay(){
		super.postbeginplay();
		A_Die("spawndead");
	}
}
class DeadMageImp:MageImp{
	override void postbeginplay(){
		super.postbeginplay();
		A_Die("spawndead");
	}
}
