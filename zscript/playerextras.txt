// ------------------------------------------------------------
//   Additional player functions
// ------------------------------------------------------------

extend class HDPlayerPawn{
	actor antenna;
	void A_MoveAntenna(vector3 newpos){
		if(!antenna){
			antenna=spawn("IdleDummy");
			antenna.A_SetSize(3,3,3);
		}
		antenna.setorigin(newpos,false);
	}

	//check mantling
	//returns: -1 cannot mantle; 0 cannot mantle but on ground; 1 can mantle
	int MantleCheck(){
		bool onground;
		int res=-1;
		if(zat==pos.z){
			onground=true;
			res=0;
		}

		//determine max height
		int mantlemax=36;
		if(
			barehanded &&
			(beatmax>18||countinv("PowerStrength"))
		){
			if(onground) mantlemax=64;
			else mantlemax=56;
		}
		//place the antenna
		A_MoveAntenna(pos+vel+(cos(angle)*18,sin(angle)*18,mantlemax));
		//check if blocked
		mantlemax=antenna.getzat();
		if((mantlemax-pos.z)<=maxstepheight) return res; //don't mantle steppables
		if(antenna.getzat(flags:GZF_CEILING)-mantlemax<1) return res; //can't squeeze fingers in
		if(antenna.pos.z<mantlemax) return res; //too high to reach and grab

		//thrust player upwards and forwards
		if(
			onground
			&& !(oldinput && BT_JUMP)
		){
			if(!countinv("PowerStrength") && beatmax<24)vel.z+=4;
			else vel.z+=7;
			beatmax--;
		}else vel.z+=3;
		return 1;
	}
	//and jump. don't separate from mantling.
	void JumpCheck(){
		if(
			(countinv("PowerStrength") || beatmax>14)
			&& input & BT_JUMP //replace with event asap
			&& !MantleCheck()
			&& !(oldinput & BT_JUMP)
			&& !countinv("PowerIronFeet")
		){
			double jumppower=5;
			if(countinv("PowerStrength"))jumppower=10;else{
				if(beatmax<20) jumppower=3;
				else if(beatmax<24) jumppower=3.5;
			}
			if(overloaded)jumppower/=overloaded;
			double jz=jumppower*0.6;
			if(!sm){
				if(!fm) vel.z+=jz; //straight up
				else if(fm>0){ //forwards
					jumppower*=1.5;
					A_ChangeVelocity(jumppower,0,jz,CVF_RELATIVE);
				}else{ //backwards
					A_ChangeVelocity(-jumppower,0,jz,CVF_RELATIVE);
				}
			}else if(!fm){ //side jump
				if(sm>0) jumppower*=-1;
				A_ChangeVelocity(0,jumppower,jz,CVF_RELATIVE);
			}else{ //diagonal jump
				int smult=1;
				int fmult=1;
				if(fm<0) fmult=-1;
				if(sm>0) smult=-1;
				jumppower*=HDCONST_ONEOVERSQRTTWO;
				A_ChangeVelocity(jumppower*fmult,jumppower*smult,jz,CVF_RELATIVE);
			}
			if(height<40){
				if(bloodpressure<40)bloodpressure+=7;
				beatmax-=5;
			}
			else{
				if(bloodpressure<40)bloodpressure+=4;
				beatmax-=2;
			}
		}
	}

	//Muzzle climb!
	void MuzzleClimb(
		double down,
		double left,
		bool doublemoving=true
	){
		if(doublemoving && countinv("ismoving")){down*=2;left*=2;}
		driftdown+=down;
		driftleft+=left;
	}

	//not actually checking to stumble, but to slow down on bad terrain
	bool StumbleCheck(){
		if(runwalksprint>0) return false;
		if(zat!=pos.z) return false;
		vector2 p=rotatevector((
			fm*0.004,
			sm*-0.004
		),angle);
		if(p==(0,0)) return false;
		A_MoveAntenna(pos+(p.x,p.y,zat));
		if(zat-antenna.getzat()>16) return true;
		return false;
	}

	//If you've got a weapon check going on for something unselected, put it here.
	//GunHeatSmoke(player.readyweapon.getclassname());
	void GunHeatSmoke(name w){
		int pg=0;
		if(countinv("ZM66Heat")){
			pg++;
			if(random(0,2))A_TakeInventory("ZM66Heat",1);
			if(
				w=="ZM66Rifle"||
				w=="ZM66GrenadeRifle"||
				w=="ZM66SemiRifle"
			)pg+=1000;
		}
		if(countinv("ChaingunHeat")){
			pg++;
			A_TakeInventory("ChaingunHeat",1);
			if(w=="Vulcanette")pg+=1000;
		}
		if(countinv("BrontornisHeat")){
			pg++;
			A_TakeInventory("BrontornisHeat",1);
			if(w=="Brontornis")pg+=1000;
		}
		if(countinv("LiberatorHeat")){
			pg++;
			if(random(0,2))A_TakeInventory("LiberatorHeat",1);
			if(
				w=="LiberatorRifle"||
				w=="LiberatorGrenadeRifle"
			)pg+=1000;
		}
		if(!pg)return;
		if(pg>1000){	//one of these puffs must emerge from muzzle
			pg-=1001;
			A_SpawnItemEx("HDGunSmoke",
				cos(pitch)*4,0,-sin(pitch)*4,
				cos(pitch)*4,0,-sin(pitch)*4,
				flags:SXF_NOCHECKPOSITION
			);
		}
		double ht=height*0.7;
		actor a;
		while(pg>0){
			pg--;
			a=spawn("HDGunSmoke",pos+(0,0,ht));
			a.pitch=-80;
			a.angle=angle-90;
			a.vel+=vel;
		}
	}
}


