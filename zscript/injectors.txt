//-------------------------------------------------
// Stims and berserk
//-------------------------------------------------
class PortableStimpack:HDPickup{
	default{
		//$Category "Items/Hideous Destructor/Supplies"
		//$Title "Stimpack"
		//$Sprite "PSTIA0"

		scale 0.37;
		inventory.maxamount 8;
		inventory.pickupmessage "Picked up a stimpack.";
		inventory.icon "PSTIA0";
		hdpickup.bulk ENC_STIMPACK;
	}
	states{
	spawn:
		STIM A -1;
	use:
		TNT1 A 0{
			A_GiveInventory("HDStimpacker");
			A_SelectWeapon("HDStimpacker");
		}
		fail;
	}
}
class SpentStim:HDDebris{
	default{
		translation "176:191=80:95";
		xscale 0.32;yscale 0.28;radius 3;height 3;
		bouncesound "misc/fragknock";bouncefactor 0.8;
	}
	states{
	spawn:
		SYRG A 0;
	spawn2:
		---- A 1{
			A_SetRoll(roll+60,SPF_INTERPOLATE);
		}wait;
	death:
		---- A -1{
			roll=0;
			if(!random(0,1))scale.x*=-1;
		}stop;
	}
}
class SpentZerk:SpentStim{
	default{
		translation "112:127=107:111";
	}
}
class SpentBottle:SpentStim{
	default{
		alpha 0.6;renderstyle "translucent";
		bouncesound "misc/casing";bouncefactor 0.7;scale 0.3;radius 4;height 4;
	}
	override void ondestroy(){
		plantbit.spawnplants(self,7,33);
		actor.ondestroy();
	}
	states{
	spawn:
		BON1 A 0;
		goto spawn2;
	death:
		---- A 100{
			if(random(0,7))roll=randompick(90,270);else roll=0;
			if(roll==270)scale.x*=-1;
		}
		---- A random(2,4){
			if(frandom(0.1,0.9)<alpha){
				angle+=random(-12,12);pitch=random(45,90);
				actor a=spawn("HDGunSmoke",pos);
				a.scale=(0.4,0.4);a.angle=angle;
			}
			A_FadeOut(frandom(-0.03,0.032));
		}wait;
	}
}
class SpentCork:SpentBottle{
	default{
		bouncesound "misc/casing3";scale 0.6;
		translation "224:231=64:71";
	}
	override void ondestroy(){
		plantbit.spawnplants(self,1,0);
		actor.ondestroy();
	}
	states{
	spawn:
		PBRS A 2 A_SetRoll(roll+90,SPF_INTERPOLATE);
		wait;
	}
}
class HDStimpacker:HDWoundFixer{
	class<actor> injecttype;
	class<actor> spentinjecttype;
	class<inventory> inventorytype;
	string noerror;
	property injecttype:injecttype;
	property spentinjecttype:spentinjecttype;
	property inventorytype:inventorytype;
	property noerror:noerror;
	default{
		hdstimpacker.injecttype "InjectStimDummy";
		hdstimpacker.spentinjecttype "SpentStim";
		hdstimpacker.inventorytype "PortableStimpack";
		hdstimpacker.noerror "No stimpacks.";
		weapon.selectionorder 1003;
	}
	states{
	spawn:
		TNT1 A 1;
		stop;
	select:
		TNT1 A 0{
			if(!countinv(invoker.inventorytype)){
				if(getcvar("hd_helptext"))A_WeaponMessage(invoker.noerror);
				A_SelectWeapon("Ring");
			}else if(getcvar("hd_helptext"))A_WeaponMessage("\cd<<< \cjSTIMPACK \cd>>>\c-\n\n\nStimpacks help reduce\nbleeding temporarily\n\nand boost performance when injured.\n\n\Press altfire to use on someone else.\n\n\cgDO NOT OVERDOSE.");
		}
		goto super::select;
	deselecthold:
		TNT1 A 1;
		TNT1 A 0 A_Refire("deselecthold");
		TNT1 A 0{
			A_SelectWeapon("Ring");
			A_WeaponReady(WRF_NOFIRE);
		}goto nope;
	fire:
	hold:
		TNT1 A 1;
		TNT1 A 0{
			if(!countinv(invoker.inventorytype)){
				if(getcvar("hd_helptext"))A_WeaponMessage(invoker.noerror);
				A_Refire("deselecthold");
			}else if(countinv("PortableRadsuit") && countinv("WornRadsuit")){
				if(getcvar("hd_helptext"))A_WeaponMessage("Take off your environment suit first!",2);
				A_Refire("nope");
			}else if(pitch<55){
				A_SetPitch(pitch+8,SPF_INTERPOLATE);
				A_Refire();
			}else{
				A_Refire("inject");
			}
		}goto nope;
	inject:
		TNT1 A 1{
			A_TakeInventory(invoker.inventorytype,1);
			A_SetBlend("7a 3a 18",0.1,4);
			A_SetPitch(pitch+2,SPF_INTERPOLATE);
			A_PlaySound("*usemeds",CHAN_VOICE);
			A_PlaySound("misc/bulletflesh",CHAN_WEAPON);
			actor a=spawn(invoker.injecttype,pos);
			a.accuracy=40;a.target=self;
		}
		TNT1 AAAA 1 A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		TNT1 A 6;
		TNT1 A 0{
			actor a=spawn(invoker.spentinjecttype,pos+(0,0,height-8));
			a.angle=angle;a.vel=vel;a.A_ChangeVelocity(3,1,2,CVF_RELATIVE);
			a.A_PlaySound("weapons/grenopen",CHAN_VOICE);
		}
		goto nope;
	altfire:
		TNT1 A 10;
		TNT1 A 0 A_Refire();
		goto nope;
	althold:
		TNT1 A 0{
			if(!countinv(invoker.inventorytype)){
				if(getcvar("hd_helptext"))A_WeaponMessage(invoker.noerror);
				A_Refire("deselecthold");
			}
		}
		TNT1 A 8{
			flinetracedata injectorline;
			linetrace(
				angle,42,pitch,
				offsetz:height-12,
				data:injectorline
			);
			let c=HDPlayerPawn(injectorline.hitactor);
			if(!c){
				if(getcvar("hd_helptext"))A_WeaponMessage("Nothing to be done here.\n\nStimulate thyself? (press fire)",2);
				return resolvestate("nope");
			}else if(c.countinv("IsMoving")>4){
				if(c.stimcount){
					if(c.getcvar("hd_helptext"))c.A_Print(string.format("Run away!!!\n\n%s is trying to overdose you\n\n(and possibly bugger you)...",player.getusername()));
					if(getcvar("hd_helptext"))A_WeaponMessage("They seem a bit fidgety...");
				}else{
					if(c.getcvar("hd_helptext"))c.A_Print(string.format("Stop squirming!\n\n%s only wants to\n\ngive you some drugs...",player.getusername()));
					if(getcvar("hd_helptext"))A_WeaponMessage("You'll need them to stay still...");
				}
				return resolvestate("nope");
			}else if(
				//because poisoning people should count as friendly fire!
				(teamplay || !deathmatch)&&
				(
					(
						invoker.injecttype=="InjectStimDummy"
						&& c.stimcount
					)||
					(
						invoker.injecttype=="InjectZerkDummy"
						&& c.zerk
					)
				)
			){
				if(c.getcvar("hd_helptext"))c.A_Print(string.format("Run away!!!\n\n%s is trying to overdose you\n\n(and possibly bugger you)...",player.getusername()));
				if(getcvar("hd_helptext"))A_WeaponMessage("They seem a bit fidgety already...");
				return resolvestate("nope");
			}else{
				//and now...
				A_TakeInventory(invoker.inventorytype,1);
				c.A_PlaySound("*usemeds",CHAN_VOICE);
				c.A_SetBlend("7a 3a 18",0.1,4);
				actor a=spawn(invoker.injecttype,c.pos);
				a.accuracy=40;a.target=c;
				if(!countinv(invoker.inventorytype))return resolvestate("deselecthold");
				return resolvestate("injected");
			}
		}
	injected:
		TNT1 A 0{
			actor a=spawn(invoker.spentinjecttype,pos+(0,0,height-8));
			a.angle=angle;a.vel=vel;a.A_ChangeVelocity(-2,1,4,CVF_RELATIVE);
			a.A_PlaySound("weapons/grenopen",CHAN_VOICE);
		}goto nope;
	}
}
class InjectStimDummy:IdleDummy{
	hdplayerpawn tg;
	states{
	spawn:
		TNT1 A 6 nodelay{
			tg=HDPlayerPawn(target);
			if(!tg||tg.bkilled){destroy();return;}
			if(tg.zerk)tg.aggravateddamage+=ceil(accuracy*0.01*random(1,3));
		}
		TNT1 A 1{
			if(target.bkilled||accuracy<1){destroy();return;}
			if(!(accuracy%2))tg.stimcount++;
			accuracy--;
		}wait;
	}
}



class PortableBerserkPack:HDPickup{
	default{
		//$Category "Items/Hideous Destructor/Supplies"
		//$Title "Berserk"
		//$Sprite "PSTRA0"

		inventory.amount 4;
		inventory.maxamount 8;
		inventory.pickupmessage "Picked up a berserk pack.";
		inventory.icon "PPSTA0";
		scale 0.3;
		hdpickup.maxunitamount 4;
		hdpickup.bulk ENC_STIMPACK;
	}
	states{
	spawn:
		PSTR A -1 nodelay{if(invoker.amount>2)invoker.scale=(0.4,0.35);else invoker.scale=(0.3,0.3);}
	use:
		TNT1 A 0{
			A_GiveInventory("HDBerserker");
			A_SelectWeapon("HDBerserker");
		}fail;
	}
}
class HDBerserker:HDStimpacker{
	default{
		hdstimpacker.injecttype "InjectZerkDummy";
		hdstimpacker.spentinjecttype "SpentZerk";
		hdstimpacker.inventorytype "PortableBerserkPack";
		hdstimpacker.noerror "No berserk packs.";
		weapon.selectionorder 1002;
	}
	states{
	select:
		TNT1 A 0{
			if(!countinv(invoker.inventorytype)){
				if(getcvar("hd_helptext"))A_WeaponMessage(invoker.noerror);
				A_SelectWeapon("Ring");
			}else if(getcvar("hd_helptext"))A_WeaponMessage("\cr*** \caBERSERK \cr***\c-\n\n\nBerserk packs help increase\ncombat capabilities temporarily.\n\n\Press altfire to use on someone else.");
		}
		goto HDWoundFixer::select;
	}
}
class InjectZerkDummy:InjectStimDummy{
	states{
	spawn:
		TNT1 A 35 nodelay{
			tg=HDPlayerPawn(target);
		}
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAA 1{
			if(!tg||tg.bkilled){destroy();return;}
		}
		TNT1 A 1{
			if(tg.zerk<666){
				tg.A_PlaySound("*xdeath",CHAN_VOICE);
				if(!(tg.player.readyweapon is "Ring"))
					tg.A_DropInventory(tg.player.readyweapon.getclass());
				tg.A_SelectWeapon("Ring");
			}else{
				tg.A_PlaySound("*pain",CHAN_VOICE);
			}
			tg.A_GiveInventory("PowerStrength");
			tg.zerk+=4100;
			tg.haszerked++;
			if(tg.stimcount)tg.aggravateddamage+=ceil(tg.stimcount*0.05*random(1,3));
			else tg.aggravateddamage++;
		}stop;
	}
}






class BluePotion:HDPickup{
	default{
		//$Category "Items/Hideous Destructor/Magic"
		//$Title "Healing Potion"
		//$Sprite "BON1A0"

		inventory.maxamount 8;
		inventory.pickupmessage "Picked up a health potion.";
		inventory.pickupsound "misc/casing";
		inventory.icon "PBONA0";
		scale 0.3;
		hdpickup.bulk ENC_BLUEPOTION;
	}
	states{
	spawn:
		BON1 ABCDCB 2 light("HEALTHPOTION") A_SetTics(random(1,3));
		loop;
	use:
		TNT1 A 0{
			A_GiveInventory("HDBlueBottler");
			A_SelectWeapon("HDBlueBottler");
		}
		fail;
	}
}
class HDBlueBottler:HDWoundFixer{
	default{
		weapon.selectionorder 1000;
	}
	states{
	spawn:
		TNT1 A 1;
		stop;
	select:
		TNT1 A 0{
			if(!countinv("BluePotion")){
				if(getcvar("hd_helptext"))A_WeaponMessage("No potion.");
				A_SelectWeapon("Ring");
			}else if(getcvar("hd_helptext"))A_WeaponMessage("\ct\(\(\( \cnPOTION \ct\)\)\)\c-\n\n\nNot made\nby human hands.\n\nBeware.");
			A_PlaySound("misc/casing",CHAN_WEAPON);
		}
		goto super::select;
	deselecthold:
		TNT1 A 1;
		TNT1 A 0 A_Refire("deselecthold");
		TNT1 A 0{
			A_SelectWeapon("Ring");
			A_WeaponReady(WRF_NOFIRE);
		}goto nope;
	fire:
		TNT1 A 0{
			if(!countinv("BluePotion")){
				if(getcvar("hd_helptext"))A_WeaponMessage("No potion.");
				A_Refire("deselecthold");
			}else if(countinv("PortableRadsuit") && countinv("WornRadsuit")){
				if(getcvar("hd_helptext"))A_WeaponMessage("Take off your environment suit first!",2);
				A_Refire("nope");
			}
		}
		TNT1 A 4 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 1{
			A_PlaySound("weapons/grenopen",CHAN_WEAPON);
			A_Refire();
		}
		TNT1 A 0 A_PlaySound("misc/smallslop",CHAN_WEAPON);
		goto nope;
	hold:
		TNT1 A 1;
		TNT1 A 0{
			if(!countinv("BluePotion")){
				if(getcvar("hd_helptext"))A_WeaponMessage("No potion.");
				A_Refire("deselecthold");
			}else if(countinv("PortableRadsuit") && countinv("WornRadsuit")){
				if(getcvar("hd_helptext"))A_WeaponMessage("Take off your environment suit first!",2);
				A_Refire("nope");
			}else if(pitch>-55){
				A_SetPitch(pitch-8,SPF_INTERPOLATE);
				A_Refire();
			}else{
				A_Refire("inject");
			}
		}
		TNT1 A 0 A_PlaySound("weapons/huntopen",CHAN_WEAPON,0.4);
		goto nope;
	inject:
		TNT1 A 1{
			A_TakeInventory("BluePotion",1);
			A_SetBlend("5a 6a a0",0.1,8);
			A_SetPitch(pitch-2,SPF_INTERPOLATE);
			A_PlaySound("misc/gibbed",CHAN_VOICE);
			let onr=HDPlayerPawn(self);
			if(onr)onr.regenblues+=144;
		}
		TNT1 AAAA 1 A_SetPitch(pitch+0.5,SPF_INTERPOLATE);
		TNT1 A 6;
		TNT1 A 0{
			actor a=spawn("SpentBottle",pos+(0,0,height-4));
			a.angle=angle+2;a.vel=vel;a.A_ChangeVelocity(3,1,4,CVF_RELATIVE);
			a=spawn("SpentCork",pos+(0,0,height-4));
			a.angle=angle+3;a.vel=vel;a.A_ChangeVelocity(5,3,4,CVF_RELATIVE);
		}
		goto nope;
	}
}




