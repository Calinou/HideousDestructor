//-------------------------------------------------
// Stims and berserk
//-------------------------------------------------
class PortableStimpack:HDPickup{
	default{
		inventory.maxamount 8;
		inventory.pickupmessage "Picked up a medikit.";
		inventory.icon "PSTIA0";
		missiletype "PortableStimpick";
	}
	states{
	use:
		TNT1 A 0{
			A_GiveInventory("HDStimpacker");
			A_SelectWeapon("HDStimpacker");
		}
		fail;
	}
}
class PortableStimPick:HDUPK replaces PortableStimpack{
	default{
		scale 0.37;
		activesound "weapons/pocket";
		hdupk.pickuptype "PortableStimpack";
		accuracy 1;
	}
	states{
	spawn:
		STIM A -1 A_Stop();
	}
}
class HDStimpacker:HDWoundFixer{
	states{
	spawn:
		stop;
	select:
		TNT1 A 0{
			if(!countinv("PortableStimpack")){
				A_Print("No stimpacks.");
				A_SelectWeapon("Ring");
			}else A_Print("Stimpacks help reduce\nbleeding temporarily.\n\n\cgDO NOT OVERDOSE.");
		}
		goto super::select;
	fire:
	hold:
		TNT1 A 1;
		TNT1 A 0{
			if(!countinv("PortableStimpack")){
				A_Print("No stimpacks.");
				A_SelectWeapon("Ring");
				A_Refire("nope");
			}else if(pitch<60){
				A_SetPitch(pitch+8,SPF_INTERPOLATE);
				A_Refire();
			}else{
				A_Overlay(random(20,22),"inject");
				A_TakeInventory("PortableStimpack",1);
				A_Refire("nope");
			}
		}goto nope;
	inject:
		TNT1 A 1{
			A_SetBlend("7a 3a 18",0.1,4);
			A_SetPitch(pitch+2,SPF_FORCECLAMP|SPF_INTERPOLATE);
			A_PlaySound("*usemeds",CHAN_VOICE);
		}
		TNT1 AAAA 1 A_SetPitch(pitch-0.5,SPF_FORCECLAMP|SPF_INTERPOLATE);
		TNT1 A 6;
		TNT1 AAAAAAAAAAAAAAAAAAAA 2{
			if(bkilled)return;
			let slf=HDPlayerPawn(self);
			if(slf){
				slf.stimcount++;
			}
		}stop;
	}
}






