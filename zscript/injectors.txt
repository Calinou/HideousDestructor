//-------------------------------------------------
// Stims and berserk
//-------------------------------------------------
class PortableStimpack:HDPickup{
	default{
		inventory.maxamount 8;
		inventory.pickupmessage "Picked up a stimpack.";
		inventory.icon "PSTIA0";
		missiletype "PortableStimpick";
	}
	states{
	use:
		TNT1 A 0{
			A_GiveInventory("HDStimpacker");
			A_SelectWeapon("HDStimpacker");
		}
		fail;
	}
}
class PortableStimPick:HDUPK replaces PortableStimpack{
	default{
		scale 0.37;
		activesound "weapons/pocket";
		hdupk.pickuptype "PortableStimpack";
		accuracy 1;
	}
	states{
	spawn:
		STIM A -1 A_Stop();
	}
}
class SpentStim:HDDebris{
	default{
		translation "176:191=80:95";
		bouncesound "misc/fragknock";bouncefactor 0.8;scale 0.6;radius 4;height 4;
	}
	states{
	spawn:
		SYRG A 0;
	spawn2:
		---- A 1{
			A_SetRoll(roll+60,SPF_INTERPOLATE);
		}wait;
	death:
		---- A -1{
			roll=randompick(0,0,0,0,0,0,90);
			if(!roll && !random(0,1))scale.x*=-1;
		}stop;
	}
}
class SpentZerk:SpentStim{
	default{
		translation "112:127=107:111";
	}
}
class SpentBottle:SpentStim{
	default{
		alpha 0.6;renderstyle "translucent";
		bouncesound "misc/casing";bouncefactor 0.7;scale 0.3;radius 4;height 4;
	}
	states{
	spawn:
		BON1 A 0;
		goto spawn2;
	death:
		---- A -1{
			if(random(0,7))roll=randompick(90,270);else roll=0;
			if(roll==270)scale.x*=-1;
		}stop;
	}
}
class SpentCork:HDDebris{
	default{
		bouncesound "misc/casing3";scale 0.6;
		translation "224:231=64:71";
	}
	states{
	spawn:
		PBRS A 2{
			A_SetRoll(roll+90,SPF_INTERPOLATE);
		}loop;
	death:
		PBRS "#" -1;
	}
}
class HDStimpacker:HDWoundFixer{
	class<actor> injecttype;
	class<actor> spentinjecttype;
	class<inventory> inventorytype;
	string noerror;
	property injecttype:injecttype;
	property spentinjecttype:spentinjecttype;
	property inventorytype:inventorytype;
	property noerror:noerror;
	default{
		hdstimpacker.injecttype "InjectStimDummy";
		hdstimpacker.spentinjecttype "SpentStim";
		hdstimpacker.inventorytype "PortableStimpack";
		hdstimpacker.noerror "No stimpacks.";
	}
	states{
	spawn:
		TNT1 A 1;
		stop;
	select:
		TNT1 A 0{
			if(!countinv(invoker.inventorytype)){
				if(getcvar("hd_helptext"))A_Print(invoker.noerror);
				A_SelectWeapon("Ring");
			}else if(getcvar("hd_helptext"))A_Print("\cd<<< \cjSTIMPACK \cd>>>\c-\n\n\nStimpacks help reduce\nbleeding temporarily.\n\n\Press altfire to use on someone else.\n\n\cgDO NOT OVERDOSE.");
		}
		goto super::select;
	fire:
	hold:
		TNT1 A 1;
		TNT1 A 0{
			if(!countinv(invoker.inventorytype)){
				if(getcvar("hd_helptext"))A_Print(invoker.noerror);
				A_SelectWeapon("Ring");
				A_Refire("nope");
			}else if(pitch<60){
				A_SetPitch(pitch+8,SPF_INTERPOLATE);
				A_Refire();
			}else{
				A_TakeInventory(invoker.inventorytype,1);
				A_Refire("inject");
			}
		}goto nope;
	inject:
		TNT1 A 1{
			A_SetBlend("7a 3a 18",0.1,4);
			A_SetPitch(pitch+2,SPF_FORCECLAMP|SPF_INTERPOLATE);
			A_PlaySound("*usemeds",CHAN_VOICE);
			A_PlaySound("misc/bulletflesh",CHAN_WEAPON);
			actor a=spawn(invoker.injecttype,pos);
			a.accuracy=40;a.target=self;
		}
		TNT1 AAAA 1 A_SetPitch(pitch-0.5,SPF_FORCECLAMP|SPF_INTERPOLATE);
		TNT1 A 6;
		TNT1 A 0{
			actor a=spawn(invoker.spentinjecttype,pos+(0,0,height-8));
			a.angle=angle;a.vel=vel;a.A_ChangeVelocity(3,1,2,CVF_RELATIVE);
			a.A_PlaySound("weapons/grenopen",CHAN_VOICE);
		}
		goto nope;
	altfire:
		TNT1 A 10;
		TNT1 A 0 A_Refire();
		goto nope;
	althold:
		TNT1 A 0{
			actor a;int b;
			[a,b]=LineAttack(angle,40,pitch,0,"none",
				"NewBulletMovePuff",flags:LAF_NORANDOMPUFFZ|LAF_NOINTERACT
			);
			let c=HDPlayerPawn(a.tracer);
			a.destroy();
			if(!c){
				if(getcvar("hd_helptext"))A_Print("Nothing to be done here.\n\nStimulate thyself? (press fire)",2);
				return resolvestate("nope");
			}
			if(c.countinv("IsMoving")>4){
				if(c.stimcount){
					if(c.getcvar("hd_helptext"))c.A_Print(string.format("Run away!!!\n\n%s is trying to overdose you\n\n(and possibly bugger you)...",player.getusername()));
					if(getcvar("hd_helptext"))A_Print("They seem a bit fidgety...");
				}else{
					if(c.getcvar("hd_helptext"))c.A_Print(string.format("Stop squirming!\n\n%s only wants to\n\ngive you some drugs...",player.getusername()));
					if(getcvar("hd_helptext"))A_Print("You'll need them to stay still...");
				}
				return resolvestate("nope");
			}

			//and now...
			A_TakeInventory(invoker.inventorytype,1);
			c.A_PlaySound("*usemeds",CHAN_VOICE);
			c.A_SetBlend("7a 3a 18",0.1,4);
			a=spawn(invoker.injecttype,c.pos);
			a.accuracy=40;a.target=c;
			return resolvestate("nope");
		}goto nope;
	}
}
class InjectStimDummy:IdleDummy{
	hdplayerpawn tg;
	states{
	spawn:
		TNT1 A 6 nodelay{
			tg=HDPlayerPawn(target);
			if(!tg||tg.bkilled){destroy();return;}
		}
		TNT1 A 1{
			if(target.bkilled||accuracy<1){destroy();return;}
			if(!(accuracy%2))tg.stimcount++;
			accuracy--;
		}wait;
	}
}



class PortableBerserkPack:HDPickup{
	default{
		inventory.maxamount 8;
		inventory.pickupmessage "Picked up a berserk pack.";
		inventory.icon "PPSTA0";
		missiletype "PortableBerserkPack";
	}
	states{
	use:
		TNT1 A 0{
			A_GiveInventory("HDBerserker");
			A_SelectWeapon("HDBerserker");
		}
		fail;
	}
}
class PortableBerserkPick:HDUPK replaces PortableBerserkPack{
	default{
		hdupk.pickupscale 0.3,0.3;
		hdupk.bigpickupscale 0.4,0.35;
		activesound "weapons/pocket";
		hdupk.pickuptype "PortableBerserkPack";
		accuracy 4;
	}
	override void postbeginplay(){
		super.postbeginplay();
		if(vel==(0,0,0)){
			stamina=4;
		}
	}
	states{
	spawn:
		PSTR A -1 A_Stop();
	}
}
class HDBerserker:HDStimpacker{
	default{
		hdstimpacker.injecttype "InjectZerkDummy";
		hdstimpacker.spentinjecttype "SpentZerk";
		hdstimpacker.inventorytype "PortableBerserkPack";
		hdstimpacker.noerror "No berserk packs.";
	}
	states{
	select:
		TNT1 A 0{
			if(!countinv(invoker.inventorytype)){
				if(getcvar("hd_helptext"))A_Print(invoker.noerror);
				A_SelectWeapon("Ring");
			}else if(getcvar("hd_helptext"))A_Print("\cr*** \caBERSERK \cr***\c-\n\n\nBerserk packs help increase\ncombat capabilities temporarily.\n\n\Press altfire to use on someone else.");
		}
		goto HDWoundFixer::select;
	}
}
class InjectZerkDummy:InjectStimDummy{
	states{
	spawn:
		TNT1 A 35 nodelay{
			tg=HDPlayerPawn(target);
		}
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAA 1{
			if(!tg||tg.bkilled){destroy();return;}
			tg.stimcount+=1;
		}
		TNT1 A 1{
			if(tg.regenbers<100)tg.A_PlaySound("*xdeath",CHAN_VOICE);
			tg.regenbers=2000;
			tg.A_GiveInventory("PowerStrength");
			if(!(tg.player.readyweapon is "Ring"))
				tg.A_DropInventory(tg.player.readyweapon.getclass());
		}stop;
	}
}






class BluePotion:HDPickup{
	default{
		inventory.maxamount 8;
		inventory.pickupmessage "Picked up a health potion.";
		inventory.icon "PBONA0";
		missiletype "BluePotion";
	}
	states{
	use:
		TNT1 A 0{
			A_GiveInventory("HDBlueBottler");
			A_SelectWeapon("HDBlueBottler");
		}
		fail;
	}
}
class BlueBottle:HDUPK replaces BluePotion{
	default{
		scale 0.3;
		activesound "misc/casing";
		hdupk.pickuptype "BluePotion";
		accuracy 1;
	}
	states{
	spawn:
		BON1 A 0 A_Stop();
	spawn2:
		BON1 ABCDCB 2 light("HEALTHPOTION") A_SetTics(random(1,3));
		loop;
	}
}
class HDBlueBottler:HDWoundFixer{
	states{
	spawn:
		TNT1 A 1;
		stop;
	select:
		TNT1 A 0{
			if(!countinv("BluePotion")){
				if(getcvar("hd_helptext"))A_Print("No potion.");
				A_SelectWeapon("Ring");
			}else if(getcvar("hd_helptext"))A_Print("\ct\(\(\( \cnPOTION \ct\)\)\)\c-\n\n\nNot made\nby human hands.\n\nBeware.");
			A_PlaySound("misc/casing",CHAN_WEAPON);
		}
		goto super::select;
	fire:
		TNT1 A 0{
			if(!countinv("BluePotion")){
				if(getcvar("hd_helptext"))A_Print("No potion.");
				A_SelectWeapon("Ring");
				A_Refire("nope");
			}
		}
		TNT1 A 4 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 1{
			A_PlaySound("weapons/grenopen",CHAN_WEAPON);
			A_Refire();
		}
		TNT1 A 0 A_PlaySound("misc/smallslop",CHAN_WEAPON);
		goto nope;
	hold:
		TNT1 A 1;
		TNT1 A 0{
			if(!countinv("BluePotion")){
				if(getcvar("hd_helptext"))A_Print("No potion.");
				A_SelectWeapon("Ring");
				A_Refire("nope");
			}else if(pitch>-60){
				A_SetPitch(pitch-8,SPF_INTERPOLATE);
				A_Refire();
			}else{
				A_Refire("inject");
			}
		}
		TNT1 A 0 A_PlaySound("weapons/huntopen",CHAN_WEAPON,0.4);
		goto nope;
	inject:
		TNT1 A 1{
			A_TakeInventory("BluePotion",1);
			A_SetBlend("5a 6a a0",0.1,8);
			A_SetPitch(pitch-2,SPF_FORCECLAMP|SPF_INTERPOLATE);
			A_PlaySound("misc/gibbed",CHAN_VOICE);
			if(invoker.onr)invoker.onr.regenblues+=300;
		}
		TNT1 AAAA 1 A_SetPitch(pitch+0.5,SPF_FORCECLAMP|SPF_INTERPOLATE);
		TNT1 A 6;
		TNT1 A 0{
			actor a=spawn("SpentBottle",pos+(0,0,height-4));
			a.angle=angle+2;a.vel=vel;a.A_ChangeVelocity(3,1,4,CVF_RELATIVE);
			a=spawn("SpentCork",pos+(0,0,height-4));
			a.angle=angle+3;a.vel=vel;a.A_ChangeVelocity(5,3,4,CVF_RELATIVE);
		}
		goto nope;
	}
}

