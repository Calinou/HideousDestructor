//-------------------------------------------------
// Environment/Radiation Suit
//-------------------------------------------------
class WornRadsuit:InventoryFlag{
	override void attachtoowner(actor owner){	
		if(!owner.countinv("PortableRadsuit"))owner.A_GiveInventory("PortableRadsuit");
		super.attachtoowner(owner);
	}
	override void DetachFromOwner(){
		owner.A_TakeInventory("PortableRadsuit",1);
		owner.A_PlaySound("weapons/pocket",CHAN_AUTO);
		let onr=HDPlayerPawn(self);
		if(onr)onr.stunned+=60;
		super.DetachFromOwner();
	}
	override void DoEffect(){
		if(stamina>0)stamina--;
	}
}
class PortableRadsuit:HDPickup replaces RadSuit{
	default{
		inventory.maxamount 2;
		inventory.interhubamount 2;
		inventory.pickupmessage "Environmental shielding suit.";
		inventory.pickupsound "weapons/pocket";
		inventory.icon "SUITB0";
		accuracy 1;
	}
	override void DetachFromOwner(){
		owner.A_TakeInventory("WornRadsuit");
		target=owner;
		super.DetachFromOwner();
	}
	override void actualpickup(actor user){
		HDF.TransferFire(self,user);
		super.actualpickup(user);
	}
	states{
	spawn2:
		SUIT A 1;
		SUIT A -1{
			if(!target)return;
			HDF.TransferFire(target,self);
		}
	use:
		TNT1 A 0{
			A_SetBlend("00 00 00",1,6,"00 00 00");
			A_PlaySound("weapons/pocket");
			A_ChangeVelocity(0,0,2);
			let onr=HDPlayerPawn(self);
			if(onr)onr.stunned+=60;
			if(!countinv("WornRadsuit")){
				int fff=HDF.TransferFire(self,self);
				if(fff){
					if(random(1,fff)>30){
						A_PlaySound("misc/fwoosh",CHAN_AUTO);
						A_TakeInventory("PortableRadsuit",1);
						return;
					}else{
						HDF.TransferFire(self,null);
						if(onr){
							onr.fatigue+=fff;
							onr.stunned+=fff;
						}
					}
				}
				A_GiveInventory("WornRadsuit");
			}else{
				actor a;int b;
				inventory wrs=findinventory("wornradsuit");
				[b,a]=A_SpawnItemEx("PortableRadsuit",0,0,height/2,2,0,4);
				if(a && wrs.stamina){
					let aa=HDActor(a);
					if(aa)aa.A_Immolate(a,self,wrs.stamina);
				}
				A_TakeInventory("WornRadsuit");
			}
		}fail;
	}
}


//-------------------------------------------------
// Light Amplification Visor
//-------------------------------------------------
class PortableLiteAmp:HDPickup replaces Infrared{
	default{
		inventory.maxamount 1;
		inventory.interhubamount 1;
		inventory.pickupmessage "Light amplification visor.";
		inventory.icon "PPVIA0";
		scale 0.5;
		accuracy 1;
	}
	int spent;bool worn;
	const LITEBAT=84000;
	override void DetachFromOwner(){
		if(owner && owner.player && owner.player.fixedcolormap==5)owner.player.fixedcolormap=-1;
		worn=false;
		owner.player.fixedlightlevel=-1;
		super.DetachFromOwner();
	}
	override void DoEffect(){
		super.DoEffect();
		if(owner && owner.player){
			if(
				worn
				&&!owner.countinv("PowerInvisibility")
				&&(owner.player.fixedcolormap<0||owner.player.fixedcolormap==5)
			){
				owner.player.fov=min(owner.player.fov,90);
				owner.player.fixedcolormap=5;
				owner.player.fixedlightlevel=1;
				if(!random[rand1](0,LITEBAT-spent)){
					owner.player.fixedcolormap=-1;
					owner.player.fixedlightlevel=-1;
				}
				spent++;
				if(spent>LITEBAT)worn=false;
			}else{
				if(owner.player.fixedcolormap==5)owner.player.fixedcolormap=-1;
				owner.player.fixedlightlevel=-1;
			}
		}
	}
	states{
	spawn2:
		PVIS B -1;
	use:
		TNT1 A 0{
			A_SetBlend("01 00 00",0.8,16);
			if(invoker.spent>=LITEBAT){
				if(countinv("HDCellPacks")){
					A_TakeInventory("HDCellPacks",1,TIF_NOTAKEINFINITE);
					invoker.spent=0;
				}else if(countinv("HDCellAmmo")){
					int rnd=min(random(1,19),countinv("HDCellAmmo"));
					A_TakeInventory("HDCellAmmo",rnd,TIF_NOTAKEINFINITE);
					invoker.spent-=rnd*LITEBAT/20;
				}else A_Log("No power for lite-amp.",true);
			}
			if(invoker.spent<LITEBAT){
				if(invoker.worn)invoker.worn=false;else invoker.worn=true;
			}
		}fail;
	}
}




//-------------------------------------------------
// IED (to be fully scriptified)
//-------------------------------------------------
class HDIEDKit:HDPickup{
	default{
		inventory.amount 1;
		inventory.maxamount 24;
		inventory.interhubamount 24;
		inventory.icon "IEDI";
		inventory.pickupmessage "Picked up an IED kit.";
		height 4;radius 4;scale 0.5;
	}
	states{
	spawn2:
		IEDK A -1;
	use:
		TNT1 A 0 A_JumpIfInventory("DudRocketAmmo",1,"usedud");
		TNT1 A 0 A_JumpIfInventory("HDRocketAmmo",1,"userocket");
		TNT1 A 0 A_Print("You need at least one live or dud rocket grenade.");
		fail;
	usedud:
		TNT1 A 0 A_TakeInventory("DudRocketAmmo",1,TIF_NOTAKEINFINITE);
		goto dropied;
	userocket:
		TNT1 A 0 A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
	dropied:
		TNT1 A 0 A_GiveInventory("IEDSetPassive",1);
		TNT1 A 0 A_TakeInventory("HDIEDDetNow");
		TNT1 A 0 A_GiveInventory("HDIEDDet");
		TNT1 A 0 A_SpawnItemEx("HDIED",0,0,height-12,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_SETMASTER|SXF_TRANSFERPITCH);
		stop;
	}
}


