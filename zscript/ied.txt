//-------------------------------------------------
// Not-Quite-Improvised Explosive Device
//-------------------------------------------------
enum HDIEDConst{
	HDIED_TID=8495,
}
class HDIEDKit:HDPickup{
	int botid;
	default{
		inventory.amount 1;
		inventory.maxamount 24;
		inventory.interhubamount 24;
		inventory.icon "IEDI";
		inventory.pickupmessage "Picked up an IED kit.";
		height 4;radius 4;scale 0.5;
	}
	override void beginplay(){
		super.beginplay();
		botid=1;
	}
	states{
	spawn2:
		IEDK A -1;
	use:
		TNT1 A 0{
			class<inventory> which="";
			if(countinv("DudRocketAmmo"))which="DudRocketAmmo";
			else if(countinv("HDRocketAmmo"))which="HDRocketAmmo";
			else{
				A_Log("You need at least one live or dud rocket grenade.",true);
				return;
			}

			A_TakeInventory(which,1,TIF_NOTAKEINFINITE);
			[bripper,target]=A_SpawnItemEx("HDIED",0,0,height-12,
				vel.x,vel.y,vel.z,0,
				SXF_SETMASTER|SXF_NOCHECKPOSITION|
				SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPITCH
			);
			HDIED(target).botid=invoker.botid;
			A_Log(string.format("\cd[IED] \cjDeployed with tag ID %i",invoker.botid),true);
			target.A_ChangeVelocity(4*cos(pitch),0,4*sin(-pitch),CVF_RELATIVE);
		}fail;
	}
}
class HDEnemyIED:HDIED{
	default{
		//$Category "Misc/Hideous Destructor/Traps"
		//$Title "Enemy IED"
		//$Sprite "IEDSC0"
		-friendly
	}
}
class HDIED:DudRocket{
	int botid;
	default{
		//$Category "Misc/Hideous Destructor/Traps"
		//$Title "Friendly IED"
		//$Sprite "IEDSA0"

		//mm: actively scanning; mem: live
		-missilemore -missileevenmore

		-missile +friendly +lookallaround +nosplashalert
		-pushable +shootable +noblood +nodamage
		height 7;radius 4;
		painchance 256;maxtargetrange 96;
		obituary "%o was blown up by an anonymous %k.";
	}
	override void postbeginplay(){
		super.postbeginplay();
		if(master){
			master.A_TakeInventory("HDIEDKit",1,TIF_NOTAKEINFINITE);
			ChangeTid(HDIED_TID);
		}
	}
	states{
	spawn:
		IEDS C 35;
		IEDS C 0 A_PlaySound("misc/i_pkup");
		IEDS CBCBC 4;
		IEDS ABABABABABABAB 2;
		IEDS ABABAB 1;
		IEDS A 0{bmissileevenmore=true;}
		goto idle;
	idle:
		IEDS A 10{
			if(bmissilemore)A_LookEx(LOF_NOSOUNDCHECK,0,96.0,0,360,"melee");
			A_ClearTarget();
		}loop;
	melee:
		IEDS A 0;
		goto detonate;
	pain:
		IEDS A 0 A_Jump(8,"destroy");
		goto idle;
	pain.smallarms1:
	pain.smallarms2:
	pain.smallarms3:
		IEDS A 0 A_Jump(200,"destroy");
		goto idle;
	detonate:
		IEDS A 1{
			bshootable=false;
			bfriendly=false;
			bismonster=false;
			target=master;
		}goto explode;
	destroy:
		IEDS A 0{
			if(!random(0,7))setstatelabel("detonate");
		}goto dismantle;
	grab:
	dismantle:
		IEDS A 0{
			A_SpawnItemEx("HDIEDKit",0,0,height-12,
				vel.x,vel.y,vel.z+4,0,
				SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
			);
			A_SpawnItemEx("DudRocket",0,0,height-12,
				vel.x,vel.y,vel.z+2,0,
				SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
			);
		}stop;
	}
}


//spawn actor
class HDIEDKits:IdleDummy{
	states{
	spawn:
		TNT1 A 0 nodelay{
			A_SpawnItemEx("HDIEDKit",-2,0,0);
			A_SpawnItemEx("HDIEDKit",-2,-2,0);
			A_SpawnItemEx("HDIEDKit",-2,-4,0);
			A_SpawnItemEx("HDIEDKit",0,-2,0);
			A_SpawnItemEx("HDIEDKit",0,-4,0);
			A_SpawnItemEx("HDIEDKit",0,0,0);
		}stop;
	}
}


extend class HDHandlers{
	void SetIED(hdplayerpawn ppp,int iedcmd,int botcmdid){
		let iedinv=HDIEDKit(ppp.findinventory("HDIEDKit"));
		int botid=iedinv?iedinv.botid:0;

		//set IED tag number with -#
		//e.g., "ied -123" will set tag to 123
		if(iedcmd<0){
			iedinv.botid=-iedcmd;
			ppp.A_Log(string.format("\cd[IED] \cjNext IED tag set to \cy%i",-iedcmd),true);
			return;
		}

		//give actual commands
		bool badcommand=true;
		actoriterator it=actoriterator.create(HDIED_TID,"HDIED");
		actor ied;bool anyieds=false;

		while(ied=it.Next()){
			anyieds=true;
			if(
				ied.master==ppp
				&&(
					!botcmdid||
					botcmdid==HDIED(ied).botid
				)
			){
				if(iedcmd==999){
					badcommand=false;
					if(ied.bmissileevenmore)ied.setstatelabel("detonate");
				}
				else if(iedcmd==1){
					badcommand=false;
					if(
						ied.checksight(ppp)&&
						ied.distance3d(ppp)<512
					){
						ppp.A_Log("\cd[IED] \crERROR:\cj IED in range of user \crNOT\cj activated.",true);
					}else{
						ied.bmissilemore=true;
					}
				}
				else if(iedcmd==2){
					badcommand=false;
					ied.bmissilemore=false;
				}
				else if(iedcmd==123){
					badcommand=false;
					ppp.A_Log(string.format("\cd[IED] \cu [\cj%i\cu,\cj%i\cu] \cy%i %s",
						ied.pos.x,ied.pos.y,
						HDIED(ied).botid,
						ied.bmissilemore?"\cgACTIVE":"\cupassive"
					),true);
				}
				else{
					badcommand=true;
					break;
				}
			}
		}
		if(
			!badcommand
			&&iedcmd!=123
		){
			string verb="hacked";
			if(iedcmd==999)verb="\crdetonated";
			else if(iedcmd==1)verb="\cxactivated";
			else if(iedcmd==0)verb="\cydeactivated";
			ppp.A_Log(string.format(
				"\cd[IED] \cjIEDs %s%s\cj.",
				botcmdid?string.format("with tag \ca%i\cj ",botcmdid):"",
				verb
			),true);
		}else if(badcommand)ppp.A_Log(string.format("\cd[IED] \cj%sCommand format:\n\cu ied <option> <tag number> \n\cjOptions:\n 1 = ON\n 2 = OFF\n 999 = DETONATE\n 123 = QUERY\n -n = set tag number\n\cj  tag number on next deployment: \cy%i",anyieds?"":"No IEDs currently deployed.\n",botid),true);
	}
}

