// ------------------------------------------------------------
// Cacodemon
// ------------------------------------------------------------
class FooFighter:HDActor{
	bool foowizard;
	bool foocleric;
	default{
		+bright +nogravity +float +noblockmap
		+seekermissile +missile
		+puffonactors +bloodlessimpact +alwayspuff +puffgetsowner

		+rollsprite +rollcenter
		+forcexybillboard +bright
		renderstyle "add";

		height 20;radius 20;
		speed 20;
		maxstepheight 64;

		seesound "weapons/plasidle";
	}
	override void beginplay(){
		super.beginplay();
		vel*=frandom(0.4,1.7);
		stamina=random(600,1200);
		ChangeTid(424707);

		foowizard=randompick(0,0,0,0,1);
		foocleric=randompick(0,0,0,0,0,1);
	}
	override void tick(){
		if(globalfreeze||level.Frozen){
			clearinterpolation();
			return;
		}
		if(bnointeraction){
			roll+=10;
			scale*=1.01;
			A_SpawnItemEx("HDGunSmoke",3,0,0,2,0,1,roll,SXF_NOCHECKPOSITION);
			super.tick();
			return;
		}
		roll=frandom(0,360);
		stamina--;

		//apply movement and collision
		speed=vel.xy.length();
		int times=max(1,speed/radius);
		vector3 frac=(times==1)?vel:(vel/times);
		fcheckposition tm;
		for(int i=0;i<times;i++){
			if(stamina<1||!trymove(pos.xy+frac.xy,true,true,tm)){
				if(
					random(0,blockingmobj==null?2:7)&&stamina>0
				){
					setorigin((pos.xy+frac.xy,pos.z),true);
					continue;
				}

				//bzz
				if(blockingmobj){
					if(
						blockingmobj is "Cacademon"
						&&target
						&&target.target!=blockingmobj
					)continue;

					int pcbak=blockingmobj.painchance;
					blockingmobj.painchance=max(pcbak,240);
					blockingmobj.DamageMobj(self,target,random(1,3),"Electro");
					blockingmobj.painchance=pcbak;

					A_PlaySound("weapons/rifleclick",CHAN_WEAPON);
					while(random(0,2))A_SpawnParticle("white",
						SPF_RELATIVE|SPF_FULLBRIGHT,35,frandom(4,8),0,
						frandom(-4,4),frandom(-4,4),frandom(0,4),
						frandom(-1,1),frandom(-1,1),frandom(1,2),
						frandom(-0.1,0.1),frandom(-0.1,0.1),-0.05
					);
					if(random(0,3)){
						setorigin((pos.xy+frac.xy,pos.z),true);
						stamina-=1;
						vel*=0.9;
						continue;
					}
				}

				bmissile=false;
				bnointeraction=true;

				//kaBOOM
				A_Blast(
					blastradius:128,blastdamage:128,blastdamagetype:"Electro",
					pushradius:256,pushamount:512,pushmass:true,
					immolateradius:72,immolateamount:random(30,80),immolatechance:40,
					gibradius:64,gibamount:3,
					hurtspecies:false
				);
				spawn("distantrifle",pos);
				A_PlaySound("world/explode",CHAN_VOICE);
				A_PlaySound("world/bfgfar",CHAN_BODY);
				A_PlaySound("weapons/bigcrack",5);

				A_SetSize(radius*2,height*1.4);
				if(
					abs(floorz-pos.z)<10
					||abs(ceilingz-(pos.z+height))<10
					||!checkmove(pos.xy,PCM_NOACTORS|PCM_DROPOFF)
				){
					A_SpawnChunks("HugeWallChunk",12,4,12);
					A_SpawnChunks("BigWallChunk",12,4,12);
					A_SpawnChunks("HDSmoke",3,0,2);
				}
				
				DistantQuaker.Quake(self,4,35,512,10);
				vel=(0,0,0.4);
				scale*=2.;
				setstatelabel("death");
				break;
			}
			addz(frac.z);
			if(pos.z<floorz){
				setz(floorz);
				vel.z=0;
			}else if(pos.z+height>ceilingz){
				setz(ceilingz-height);
				vel.z=0;
			}
		}
		vel.x*=frandom(0.9,1.05);
		vel.y*=frandom(0.9,1.05);
		vel.z*=frandom(0.9,1.05);
		if(accuracy>100&&tracer&&checksight(tracer)){
			A_Face(tracer,0,0,FAF_TOP);
			A_ChangeVelocity(cos(pitch),0,-sin(pitch),CVF_RELATIVE);
		}else if(!random(0,50))A_ChangeVelocity(5,0,0.2,CVF_RELATIVE);
		accuracy--;
		if(accuracy<0)accuracy=160;

		//nexttic
		if(CheckNoDelay()){
			if(tics>0)tics--;
			while(!tics){
				if(!SetState(CurState.NextState)){
					return;
				}
			}
		}
	}
	states{
	spawn:
		BAL2 ABABABABAB 1 light("PLAZMABX1");
		BAL2 A 0 A_Jump(24,"castspell");
		loop;
	castspell:
		BAL2 A 0{
			double achange=random(0,3)?frandom(-24,24):frandom(0,360);
			if(!random(0,3))vel.z=frandom(-vel.z*0.3,vel.z);
			vel.xy=rotatevector(vel.xy,achange);

			if(foowizard){
				int warptimes=random(3,7);
				double spdbak=speed;
				speed=100;
				for(int i=0;i<warptimes;i++){
					A_Wander();
				}
				speed=spdbak;
				setz(frandom(floorz,ceilingz-height));
			}
			if(foocleric){
				if(!tracer){
					foocleric=false;
					foowizard=true;
					return;
				}
				actor itt=null;
				actoriterator it=actoriterator.create(424707,"FooFighter");
				while(itt=it.next()){
					if(checksight(itt))
					itt.vel+=itt.vec3to(tracer).unit()*2;
				}
			}
		}goto spawn;
	death:
		BAL2 CDE 3 light("BAKAPOST4");
		BAL2 E 3 light("PLAZMABX2") A_FadeOut(0.3);
		wait;
	}
}

class Cacasmaball:IdleDummy{
	default{
		+extremedeath
		+forcexybillboard +rollsprite +rollcenter
		renderstyle "add";
		scale 1.8; alpha 0.6;
	}
	double theight;
	override void tick(){
		if(!target){destroy();return;}
		if(globalfreeze||level.Frozen){
			clearinterpolation();
			return;
		}
		setorigin((angletovector(target.angle,target.radius),theight)+target.pos,false);
		roll=frandom(0,360);
		alpha=random(0,1)?frandom(0.8,1.6):frandom(0,0.3);
		//nexttic
		if(CheckNoDelay()){
			if(tics>0)tics--;
			while(!tics){
				if(!SetState(CurState.NextState)){
					return;
				}
			}
		}
	}
	states{
	spawn:
		BAL2 A 40 bright nodelay{
			A_PlaySound("bakaslave/attack",CHAN_AUTO,1,0,1);
			theight=target.height*0.4;
		}stop;
	}
}



enum CacoNums{
	CACO_MAXHEALTH=666,
}
class CacoChunk:WallChunk{
	override void postbeginplay(){
		super.postbeginplay();
		if(!target)return;
		if(random(-CACO_MAXHEALTH*2,CACO_MAXHEALTH)>target.health){
			A_SetTranslation("AllBlue");
		}else{
			scale*=frandom(0.8,2.);
			if(!random(0,3))A_SetTranslation("AllPurple");
			else A_SetTranslation("AllRed");
		}
	}
}
class CacoShellBlood:BloodSplatSilent{
	override void postbeginplay(){
		bloodsplatsilent.postbeginplay();
		A_PlaySound("misc/bulletflesh",0,0.02);
		A_SpawnChunks("CacoChunk",random(1,7),1,7);
		if(
			target.health>(CACO_MAXHEALTH*0.6)
		)destroy();
	}
}
class Cacademon:Cacodemon replaces Cacodemon{
	default{
		+MISSILEMORE
		+MISSILEEVENMORE
		+NOBLOODDECALS
		+PUSHABLE
		pushfactor 0.05;
		bloodtype "CacoShellBlood";
		bloodcolor "10 00 90";
		painchance 90;
		deathheight 29;
		damagefactor "SmallArms0", 0.8;
		damagefactor "SmallArms1", 0.9;
		obituary "%o was inverted by a cacodemon.";
		speed 4;
	}
	override void beginplay(){
		super.beginplay();
		hdmobai.resize(self,0.8,1.1);
		speed*=3.-2*scale.x;
	}
	void A_CacoCorpseZap(){
		A_PlaySound("weapons/plasidle",0,0.3,0,2);
		A_CustomRailgun((random(1,4)),0,"","blueviolet",
			RGF_SILENT|RGF_NOPIERCING|RGF_FULLbright|RGF_CENTERZ,
			0,4000,"CacoPuff",180,180,random(60,160),18,1.4,1.5
		);
	}
	states{
	spawn:
		HEAD A 10{
			A_Look();
			if(health>(CACO_MAXHEALTH*0.5))bfloatbob=false;
		}wait;
	see:
		HEAD A 4{
			healthing(random(0,5));
			if(health>(CACO_MAXHEALTH*0.5))bfloatbob=false;
			hdmobai.chase(self);
		}loop;
	pain:
		HEAD E 2{
			if(health<(CACO_MAXHEALTH*0.5))bfloatbob=true;
			else if(health<(CACO_MAXHEALTH*0.6))bnoblooddecals=false;
			vel.z-=frandom(0.4,1.4);
		}
		HEAD F 6 A_Pain();
		HEAD E 3;
	missile:
		HEAD A 4{
			A_FaceTarget(40,40,flags:FAF_BOTTOM);
			if(A_JumpIfTargetInLOS("null",10)){setstatelabel("shoot");}
			else if(A_JumpIfTargetInLOS("null")){setstatelabel("see");}
		}loop;
	shoot:
		HEAD BCC 2;// A_FaceTarget(30,30,flags:FAF_BOTTOM);
		HEAD D 32 bright{
			vel.z+=frandom(0.2,1.2);
			A_FaceTarget(30,30,flags:FAF_BOTTOM);
			bnopain=true;
			A_SpawnProjectile("Cacasmaball",28,0,0,CMF_AIMDIRECTION,pitch);
		}
		HEAD D 20{
			spawn("DistantShotgun",pos);
			A_PlaySound("weapons/bronto",CHAN_WEAPON);
			A_ChangeVelocity(-cos(pitch)*3,0,sin(pitch),CVF_RELATIVE);	
			A_CustomRailgun((0),50,"","azure",
				RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,
				0,40.0,null,0,0,65536,
				12,0.4,2.0,"",-4
			);
			bnopain=false;
			actor bll=LineAttack(
				angle,65536,pitch,0,"","FooFighter"
			);
			if(bll){
				bll.tracer=target;
				actor blll;bool gbg;
				for(int i=0;i<3;i++){
					[gbg,blll]=bll.A_SpawnItemEx("FooFighter",
						0,0,3,frandom(-1,4),0,frandom(1,5),
						angle+frandom(-50,50),
						SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS
					);
				}
				bll.stamina=0;
			}
			bnopain=false;
		}
		HEAD C 6;
		HEAD B 3;
		HEAD A 6;
		goto see;
	melee:
		HEAD B 4{
			A_FaceTarget(40,40);
			if(A_JumpIfTargetInLOS("null",10))setstatelabel("zap");
		}goto see;
	zap:
		HEAD C 4{
			angle+=frandom(-10,10);
			pitch+=frandom(-10,10);
			A_PlaySound("caco/sight");
		}
		HEAD D 2 bright A_SpawnProjectile("Cacasmaball",28);
		HEAD DDDDDDDDDDDD 2 bright A_CustomRailgun((random(1,2)),0,"","azure",
			RGF_SILENT|RGF_FULLBRIGHT,
			0,4000,"BeamSpot",20,20,random(120,260),28,1.4,1.5,"none",-12
		);
		HEAD C 4;
		HEAD B 2;
		HEAD A 6;
		goto see;
	death.spawndead:
		HEAD G 0{
			bpushable=false;
			bfloatbob=false;
			bnogravity=false;
			hdmobai.corpseflags(self);
			A_NoBlocking();
		}goto dead;
	death:
		HEAD F 3{
			bpushable=false;
			bfloatbob=false;
			bnogravity=false;
			hdmobai.corpseflags(self);
			A_SpawnItemEx("tempshieldblue",flags:SXF_NOCHECKPOSITION|SXF_SETMASTER);
			A_NoBlocking();
			A_PlaySound(seesound,CHAN_VOICE);
		}
		HEAD GH 3;
		HEAD H 2 A_JumpIf(vel.z>=0,"deadsplatting");
		wait;
	deadsplatting:
		HEAD I 4{
			A_Scream();
			bpushable=false;
			bfloatbob=false;
			hdmobai.corpseflags(self);
			A_SpawnItemEx("tempshield2blue",flags:SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
		HEAD J 4;
		HEAD JKKK 1 light("PLAZMABX1") A_CacoCorpseZap();
		HEAD K 1 A_SpawnItemEx("tempshield2blue",flags:SXF_NOCHECKPOSITION|SXF_SETMASTER);
		HEAD KKKK 1 light("PLAZMABX1") A_CacoCorpseZap();
		HEAD L 1 A_SetTics(random(5,25));
		HEAD LLLLL 2 light("PLAZMABX1") A_CacoCorpseZap();
	deadzapping:
		HEAD L 1 light("PLAZMABX1") A_SetTics(random(1,4));
		TNT1 A 0 A_PlaySound("weapons/plasidle",0,0.6,0,2);
		HEAD L 1{
			A_CustomRailgun ((random(4,8)),random(-12,12),"","azure",
				RGF_SILENT|RGF_FULLBRIGHT,
				1,4000,"CacoPuff",180,180,random(32,128),4,0.4,0.6
			);
			if(!random(0,1))A_SetTics(random(1,40));
		}
		loop;
	dead:
		HEAD L -1;
		stop;
	raise:
		---- A 0{
			hdmobai.corpseflags(self);
			bpushable=true;
		}goto super::raise;
	}
}
class DeadCacademon:Cacademon replaces DeadCacodemon{
	override void postbeginplay(){
		super.postbeginplay();
		A_Die("spawndead");
	}
}
