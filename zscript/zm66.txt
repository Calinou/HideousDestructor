// ------------------------------------------------------------
// ZM66 4.26mm UAC Standard Automatic Rifle
// ------------------------------------------------------------
const HDCONST_ZM66COOKOFF=21;
actor ZM66Rifle:HDWeapon{
	default{
		weapon.selectionOrder 200;
		weapon.ammotype1 "ZM66Loaded";
		weapon.ammotype2 "ZM66RifleMags";
		weapon.slotnumber 4;
		inventory.pickupsound "misc/w_pkup";
		inventory.pickupmessage "You got the assault rifle!";
		scale 0.65;
		weapon.bobrangex 0.22;
		weapon.bobrangey 0.9;
		obituary "%o was assaulted by %k.";
	}
	states{
	ready:
		RIFG A 1{
			if(
				countinv("ZM66Heat")>HDCONST_ZM66COOKOFF
				&&!countinv("ZM66BrokenRound")
				&&countinv("ZM66Chamber")
			){
				setweaponstate("cookoff");
				return;
			}else{
				A_WeaponReady(WRF_ALL);
				A_TakeInventory("ZM66Ratchet");
				A_GiveInventory("NotShot",1);
			}

			//delete this after updating weaponstatus
			if(countinv("ZM66JailbrokenMag"))A_SetInventory(
				"ZM66RoundCounter",random(10,99)
			);
			else A_SetInventory(
				"ZM66RoundCounter",countinv("ZM66Loaded")+countinv("ZM66Chamber")
			);
		}goto readyend;
	firemode:
		RIFG A 0 A_JumpIfInventory("ZM66GLMode",1,"abadjust");
		RIFG A 1{
			if(countinv("ZM66FullAuto")==2)A_TakeInventory("ZM66FullAuto");
			else A_GiveInventory("ZM66FullAuto",1);
			A_WeaponReady(WRF_NONE);
		}goto nope;
	abadjust:
		RIFG A 2 A_WeaponReady(WRF_NONE);
		RIFG A 0{
			A_GiveInventory("WeaponBusy");
			if (countinv("PressingFire")||countinv("PressingAltfire")){
				setweaponstate("abclick");
			}else if(countinv("PressingZoom")){
				A_TakeInventory("AirburstCount");
				setweaponstate("nope");
			}else if(countinv("PressingFireMode"))setweaponstate("abadjust");
			setweaponstate("nope");
		}
	abclick:
		RIFG A 0{
			if (countinv("PressingFire")>0){A_GiveInventory("AirburstCount",1);}
			else if (countinv("PressingAltFire")>0){A_TakeInventory("AirburstCount",1);}
			setweaponstate("abadjust");
		}

	select0:
		RIFG A 0 A_TakeInventory("ZM66GLMode");
		RIFG A 0 A_JumpIfInventory("ZM66GrenadeRifle",1,"select0big");
		goto select0small;
	deselect0:
		RIFG A 0{
			if(
				countinv("ZM66Heat")>HDCONST_ZM66COOKOFF  
				&&!countinv("ZM66BrokenRound")
				&&(countinv("ZM66Loaded")||countinv("ZM66Chamber"))
			){
				if(countinv("ZM66GrenadeRifle")){A_DropInventory("ZM66GrenadeRifle");}
				if(countinv("ZM66SemiRifle")){A_DropInventory("ZM66SemiRifle");}
				if(countinv("ZM66Rifle")){A_DropInventory("ZM66Rifle");}
			}
		}
		RIFG A 0 A_JumpIfInventory("ZM66GrenadeRifle",1,"deselect0big");
		goto deselect0small;
	flash:
		RIFF A 1 bright{
			A_Light1();
			HDFlashAlpha(-16);
			A_PlaySound("weapons/rifle",CHAN_WEAPON);
			A_ZoomFactor(0.99-0.01*countinv("ZM66Ratchet"),ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			A_MuzzleClimb(
				-0.2,-0.3,
				-frandom(0.4,1.4),-frandom(1.3,2.6)
			);
			A_GiveInventory("ZM66Shoot");
			A_TakeInventory("ZM66Chamber",1);
			A_AlertMonsters();
		}
		RIFF A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		goto lightdone;
	spawn:
		TNT1 A 1;
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ);
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("ZM66GrenadeRiflePickup",0,0,0,vel.x,vel.y,vel.z,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS);
		stop;
	spawndropped:
		TNT1 A 0 A_SpawnItemEx("ZM66GrenadeRiflePickup",0,0,0,vel.x,vel.y,vel.z,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS);
		stop;


	fire:
		RIFG A 0 A_JumpIfInventory("ZM66GLMode",1,"FireFrag");
		RIFG A 2{if(countinv("ZM66FullAuto"))A_SetTics(3);}
		goto shootgun;
	hold:
		RIFG A 0 A_JumpIfInventory("ZM66GLMode",1,"FireFrag");
		RIFG A 0 A_JumpIfInventory("ZM66Ratchet",0,"nope");
		RIFG A 0 A_JumpIfInventory("ZM66FullAuto",1,"shootgun");
	althold:
		---- A 1{
			if(
				countinv("ZM66Heat")>HDCONST_ZM66COOKOFF  
				&& !countinv("ZM66BrokenRound")
				&& countinv("ZM66Chamber")
			)setweaponstate("cookoff");
			else A_WeaponReady(WRF_NOFIRE);
		}
		---- A 0 A_Refire();
		goto ready;
	jam:
		RIFG B 1 offset(-1,36){
			A_PlaySound("weapons/rifleclick");
			A_GiveInventory("ZM66BrokenRound",1);
			A_TakeInventory("ZM66Chamber",1);
		}
		RIFG B 1 offset(1,30) A_PlaySound("weapons/rifleclick",7);
		goto nope;

	shootgun:
		RIFG A 1{
			if(
				//can neither shoot nor chamber
				(countinv("ZM66BrokenRound")>0)  
				||(countinv("ZM66Chamber")+countinv("ZM66Loaded")<1)
			){
				setweaponstate("nope");
			}else if(!countinv("ZM66Chamber")){
				//no shot but can chamber
				setweaponstate("chamber_premanual");
			}else{
				A_GunFlash();
				if(countinv("ZM66FullAuto")==2)A_GiveInventory("ZM66Ratchet");
			}
		}
	chamber:
		RIFG B 2 offset(0,32){
			if(!countinv("ZM66Loaded")){setweaponstate("nope");}
			if(!random(0,
				2000
				-countinv("ZM66FullAuto")***
				-countinv("ZM66JailbrokenMag")*5
				)
			){
				setweaponstate("jam");
				return;
			}
			if(countinv("ZM66Loaded")){
				A_TakeInventory("ZM66Loaded",1);
				A_GiveInventory("ZM66Chamber",1);
			}else{
				A_PlaySound("weapons/rifleclick",5);
			}
			if(!countinv("ZM66FullAuto"))A_SetTics(1);
			else if(countinv("ZM66FullAuto")==2)A_SetTics(0);

			if(countinv("ZM66JailbrokenMag")){
				A_SetInventory("ZM66RoundCounter",random(10,99));
			}else{
				A_GiveInventory("ZM66RoundCounter",
					countinv("ZM66Loaded")+countinv("ZM66Chamber")
				);
			}
		}
		RIFG B 0 A_Refire();
		goto ready;


	cookoff:
		RIFG A 0{
			A_TakeInventory("IsSupported");
			A_GiveInventory("IsMoving",5);
			if(
				(countinv("PressingReload")||countinv("PressingUnload"))	//trying to detach
				&&(!countinv("ZM66NoMag")||countinv("ZM66Loaded"))	//something to detach
			){
				A_SpawnItemEx("HD4mMag",
					cos(pitch)*8,0,height-10-8*sin(pitch),
					vel.x,vel.y,vel.z,0,
					SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				A_GiveInventory("ZM66NoMag");
			}
			else if(countinv("PressingAltfire")){
				A_Gunflash("nadeflash");
				setweaponstate("shootgun");
			}
			setweaponstate("shootgun");
		}


	chamber_premanual:
		RIFG A 1 offset(0,33);
		RIFG A 1 offset(-3,34);
		RIFG A 1 offset(-8,37);
		goto chamber_manual;

	user4:
	unload:
		RIFG A 0{
			A_GiveInventory("JustUnloading");
			if(
				(countinv("ZM66GLMode")>0)  
			){
				setweaponstate("unloadgrenade");
			}
			else if(
				(countinv("ZM66NoMag")<1)
			){
				setweaponstate("unloadmag");
			}
			else if(
				(countinv("ZM66Chamber")>0)  
			){
				setweaponstate("unloadchamber");
			}
			setweaponstate("reload");
		}
	reload:
		RIFG A 0{
			if(	//full mag, no jam, not unload-only - why hit reload at all?
				(countinv("ZM66BrokenRound")<1)
				&&(countinv("ZM66Loaded")>=50)  
				&&(countinv("JustUnloading")<1)
			){
				setweaponstate("nope");
			}else if(	//if jammed, treat as unloading
				(countinv("ZM66NoMag")+countinv("ZM66BrokenRound")==2)
			){
				A_GiveInventory("JustUnloading",1);
				setweaponstate("unloadchamber");
			}
			setweaponstate("unloadmag");
		}
	unloadmag:
		RIFG A 1 offset(0,33);
		RIFG A 1 offset(-3,34);
		RIFG A 1 offset(-8,37);
		RIFG B 2 offset(-11,39){
			if(	//no mag, skip unload
				countinv("ZM66NoMag") && !countinv("ZM66Loaded")
			){
				setweaponstate("magout");
			}
			if(countinv("ZM66BrokenRound"))A_GiveInventory("JustUnloading");
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
			A_TakeInventory("IsWeaponLong");
			A_PlaySound ("weapons/rifleclick2");
		}
		RIFG B 4 offset(-12,40){
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
			A_PlaySound("weapons/rifleload");
		}
		RIFG B 20 offset(-14,44){
			if(
				(
					!countinv("PressingUnload")&&!countinv("PressingReload")
				)||(
					(countinv("ZM66Loaded")<50)
					&&(countinv("FourMilAmmo")>AmmoCap("FourMilAmmo")-countinv("ZM66Loaded"))  
				)||(
					(countinv("ZM66Loaded")>49)  
					&&(A_JumpIfInventory("ZM66RifleMags",0,"null"))
				)||(countinv("ZM66Loaded")<1)
			){
				A_SpawnItemEx("HD4mMag",12,0,height-12,1,0,-1,0,SXF_SETTARGET);
				A_SetTics(1);
			}else{
				A_PlaySound("weapons/pocket",CHAN_WEAPON);
				if(countinv("ZM66Loaded")>=50)A_GiveInventory("ZM66RifleMags",1);  
				else{
					A_GiveInventory("FourMilAmmo",countinv("ZM66Loaded"));
					A_Log("Reloading a 4.26 UAC Standard magazine into another firearm without authorization is a breach of the Volt End User License Agreement.",true);
				}
				A_TakeInventory("ZM66Loaded");
			}
			A_GiveInventory("ZM66NoMag");
		}
	magout:
		RIFG B 0{
			A_TakeInventory("ZM66JailbrokenMag");	//just in case
			if(countinv("JustUnloading"))setweaponstate("reloadend");
			else if(
				!countinv("ZM66RifleMags")
				&&!countinv("FourMilAmmo")
			)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}
	loadmag:
		---- A 20{
			if(countinv("ZM66RifleMags"))A_SetTics(14);
			A_PlaySound("weapons/pocket");
		}
		---- A 2{
			if(countinv("ZM66RifleMags")){
				A_GiveInventory("ZM66Loaded",50);
				A_TakeInventory("ZM66RifleMags",1,TIF_NOTAKEINFINITE);
				A_TakeInventory("ZM66JailbrokenMag");
			}else{
				int lod=min(random(1,50),countinv("FourMilAmmo"));
				A_GiveInventory("ZM66Loaded",lod);
				A_TakeInventory("FourMilAmmo",lod,TIF_NOTAKEINFINITE);
				A_GiveInventory("ZM66JailbrokenMag");
			}
			A_TakeInventory("ZM66NoMag");
		}
		RIFG B 8 offset(-15,45)A_PlaySound("weapons/rifleload",CHAN_WEAPON);
		RIFG B 1 offset(-14,44)A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		RIFG B 0{
			if(!countinv("ZM66JailbrokenMag"))setweaponstate("chamber_manual");
		}
		RIFG A 8 offset(-18,50){
			A_MuzzleClimb(frandom(2.3,3.6),frandom(2.4,3.8));
			A_PlaySound("weapons/rifleclick2",6);
			A_PlaySound("weapons/smack",7);
		}
		RIFG A 4 offset(-17,49) A_Log("Reloading a 4.26 UAC Standard magazine into another firearm without auth--\cgFUCK YOURSELF.\c- Sincerely, management.",true);
	chamber_manual:
		RIFG A 4 offset(-15,43){
			if(!countinv("ZM66Chamber")){
				A_PlaySound("weapons/rifleclick");
				A_TakeInventory("ZM66Loaded",1);
				A_GiveInventory("ZM66Chamber",1);
			}else setweaponstate("reloadend");
		}
		RIFG B 4 offset(-14,45);
		goto reloadend;

	reloadend:
		RIFG B 2 offset(-11,39);
		RIFG A 1 offset(-8,37) A_MuzzleClimb(frandom(2,-24),frandom(2,-14));
		RIFG A 1 offset(-3,34);
		RIFG A 1 offset(0,33);
		goto nope;


	unloadchamber:
		RIFG A 1 offset(0,33);
		RIFG A 1 offset(-3,34);
		RIFG A 1 offset(-8,37);
		RIFG B 2 offset(-11,39);
		RIFG B 3 offset(-19,44) A_MuzzleClimb(frandom(-0.4,0.4),frandom(-0.4,0.4));
		RIFG A 2 offset(-16,42) A_MuzzleClimb(frandom(-0.4,0.4),frandom(-0.4,0.4));
		RIFG A 0{
			if(
				countinv("ZM66Chamber")
				&&!countinv("ZM66BrokenRound")
			){
				A_SpawnItemEx("ZM66DroppedRound",0,0,20,
					random(4,7),random(-2,2),random(-2,1),0,
					SXF_NOCHECKPOSITION
				);
				A_TakeInventory("ZM66Chamber");
				A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
			}else if(!random(0,4)){
				A_TakeInventory("ZM66BrokenRound");
				A_TakeInventory("ZM66Chamber");
				A_PlaySound("weapons/rifleclick");
				for(int i=0;i<3;i++)A_SpawnItemEx("TinyWallChunk",0,0,20,
					random(4,7),random(-2,2),random(-2,1),0,SXF_NOCHECKPOSITION
				);
			}
		}goto reloadend;

	nadeflash:
		RIFG A 0 A_JumpIfInventory("ZM66GLoaded",1,1);
		stop;
		RIFG A 2{
			A_SpawnItemEx("GyroGrenade",0,0,height-6,
				vel.x,vel.y,vel.z,0,
				SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			A_TakeInventory("ZM66GLoaded");
			A_PlaySound("weapons/grenadeshot",CHAN_WEAPON);
			A_ZoomFactor(0.99,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		}
		RIFG A 2 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		RIFG A 0 A_MuzzleClimb(-1.6,-4.8);
		stop;
	firefrag:
		RIFG B 2;
		RIFG B 3 A_Gunflash("nadeflash");
		goto nope;


	altfire:
		RIFG A 0{
			A_TakeInventory("AirburstCount");
			if(countinv("ZM66GLMode")) A_TakeInventory("ZM66GLMode");
			else A_GiveInventory("ZM66GLMode");
		}goto toggleend;
	zoom:
		RIFG A 0{
			if(countinv("ZM66Zoom")) A_TakeInventory("ZM66Zoom");
			else A_GiveInventory("ZM66Zoom");
		}
	toggleend:
		RIFG A 1 offset(0,34){
			A_SetCrosshair(21);
		}
		RIFG A 0 A_JumpIfInventory("PressingZoom",1,"zoomadjust");
		goto nope;
	zoomadjust:
		RIFG A 1 A_WeaponReady(WRF_NOFIRE);
		RIFG A 0{
			A_GiveInventory("WeaponBusy");
			if(countinv("PressingFire")||countinv("PressingAltfire")){
				A_GiveInventory("ZM66Zoom");
				setweaponstate("zoomclick");
			}else if(countinv("PressingZoom")){
				setweaponstate("zoomadjust");
			}setweaponstate("nope");
		}
	zoomclick:
		RIFG A 0{
			if(countinv("PressingFire")) A_GiveInventory("ZM66ZoomDegree",1);
			else if(countinv("PressingAltFire")) A_TakeInventory("ZM66ZoomDegree",1);
		}
	zoomclicked:
		RIFG A 1{
			A_WeaponReady(WRF_NOFIRE);
			if(
				!countinv("PressingFire")&&
				!countinv("PressingAltfire")
			)setweaponstate("zoomadjust");
		}goto zoomclicked;

	altreload:
		RIFG A 0{
			if(
				!countinv("ZM66GLoaded")
				&&countinv("HDRocketAmmo")
			)setweaponstate("unloadgrenade");
		}goto nope;
	unloadgrenade:
		RIFG B 0{
			A_SetCrosshair(21);
			A_MuzzleClimb(-0.3,-0.3);
		}
		RIFG B 2 offset(0,34)
		RIFG B 1 offset(4,38){
			A_MuzzleClimb(-0.3,-0.3);
		}
		RIFG B 2 offset(8,48){
			A_PlaySound("weapons/grenopen",CHAN_WEAPON);
			A_MuzzleClimb(-0.3,-0.3);
		}
		RIFG B 3 offset(10,49){
			if(!countinv("ZM66GLoaded")){
				A_SetTics(0);
				return;
			}
			A_TakeInventory("ZM66GLoaded");
			if(
				!countinv("PressingUnload")
				||A_JumpIfInventory("HDRocketAmmo",0,"null")
			){
				A_SpawnItemEx("HDRocketAmmo",
					cos(pitch)*10,0,height-10-10*sin(pitch),vel.x,vel.y,vel.z,0,
					SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
			}else{
				A_SetTics(10);
				A_PlaySound("weapons/pocket",CHAN_WEAPON);
				A_GiveInventory("HDRocketAmmo",1);
				A_MuzzleClimb(frandom(0.8,-0.2),frandom(0.4,-0.2));
			}
		}
		RIFG B 0 A_JumpIfInventory("JustUnloading",1,"greloadend");
	loadgrenade:
		RIFG B 4 offset(10,50) A_PlaySound("weapons/pocket",CHAN_WEAPON);
		RIFG BBB 8 offset(10,50) A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		RIFG B 18 offset(8,50){
			A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
			A_GiveInventory("ZM66GLoaded",1);
			A_PlaySound("weapons/rockreload",CHAN_WEAPON);
		}
	greloadend:
		RIFG B 4 offset(4,44) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		RIFG B 1 offset(0,40);
		RIFG A 1 offset(0,34) A_MuzzleClimb(frandom(-2.4,0.2),frandom(-1.4,0.2));
		goto nope;
	}
}

actor ZM66GLMode:InventoryFlag{}
actor ZM66Zoom:InventoryFlag{}
actor ZM66BrokenRound:InventoryFlag{}
actor ZM66JailbrokenMag:InventoryFlag{}
actor ZM66NoMag:InventoryFlag{}
actor ZM66ZoomDegree:InventoryFlag{inventory.maxamount 2}
actor ZM66Ratchet:InventoryFlag{Inventory.MaxAmount 3}
actor ZM66Heat:InventoryFlag{Inventory.MaxAmount 80}
actor ZM66FullAuto:InventoryFlag{Inventory.MaxAmount 2}
actor ZM66RoundCounter:InventoryFlag{inventory.maxamount 99} //remove this in favour of hud
//BUT TEST MULTI BEFORE COMMIT

actor ZM66Chamber:Ammo{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{setweaponstate("null");}stop}
}
actor ZM66Loaded:Ammo{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 50
	ammo.backpackmaxamount 50
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{setweaponstate("null");}stop}
}
actor ZM66GLoaded:Ammo{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{setweaponstate("null");}stop}
}
actor ZM66Shoot:ActionItem{
	states{
	pickup:
		RIFF A 0 A_GiveInventory("ZM66Heat",random(2,4))
		RIFG A 0 A_JumpIfInventory("ZM66Heat",14,"shoot3")
		RIFG A 0 A_JumpIfInventory("ZM66Heat",10,"shoot2")
		TNT1 A 0 A_GiveInventory("DecoBulleter426")
		fail
	shoot2:
		TNT1 A 0{
			A_SpawnItemEx("HDGunSmoke",0,0,height-6,cos(pitch)*cos(angle)*4+vel.x+frandom(-1,1),cos(pitch)*sin(angle)*4+vel.y+frandom(-1,1),-sin(pitch)*4+vel.z+frandom(-1,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH,64);
			A_GiveInventory("DecoBulleter426");
		}fail
	shoot3:
		TNT1 A 0{
			A_SpawnItemEx("HDGunSmoke",0,0,height-6,cos(pitch)*cos(angle)*4+vel.x+frandom(-1,1),cos(pitch)*sin(angle)*4+vel.y+frandom(-1,1),-sin(pitch)*4+vel.z+frandom(-1,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_GiveInventory("DecoBulleter426s");
		}fail
	}
}
actor ZM66HeatVent:CustomInventory{
	states{
	pickup:
		RIFG A 0 A_TakeInventory("ZM66Heat",1)
		RIFG A 0 A_JumpIfInventory("ZM66Heat",random(12,36),1)
		fail
		TNT1 A 0 A_FireCustomMissile("HDGunSmoke",frandom(-1,1),0,0,0,0,frandom(-1,1))
		TNT1 A 0 A_CustomMissile("HDGunSmoke",6,0,random(-1,1),CMF_AIMDIRECTION)
		fail
	}
}


actor ZM66RifleSpawner
{
	health 1
	+invisible
	states
	{
	spawn:
		TNT1 A 0
		TNT1 A 0 A_Jump (256, 1, 3, 5, 2, 4, 6, 2, 4, 7)
		TNT1 A 0 A_SpawnItemEx ("ZM66RifleMags", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		TNT1 A 0 A_SpawnItemEx ("ZM66RiflePickup", random(-4,4), random(-4,4), 0, 0,0,0, 0,32)
		stop
		TNT1 A 0 A_SpawnItemEx ("RocketAmmo", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		TNT1 A 0 A_SpawnItemEx ("ZM66GrenadeRiflePickup", random(-4,4), random(-4,4), 0, 0,0,0, 0,32)
		stop
		TNT1 A 0 A_SpawnItemEx ("RocketAmmo", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		TNT1 A 0 A_SpawnItemEx ("RocketAmmo", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		stop
		TNT1 A 0 A_SpawnItemEx ("ZM66RifleMags", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		TNT1 A 0 A_SpawnItemEx ("ZM66SemiRiflePickup", random(-4,4), random(-4,4), 0, 0,0,0, 0,32)
		stop
	}
}



// ------------------------------------------------------------
// Mags and pickups
// ------------------------------------------------------------

actor ZM66GrenadeRiflePickup : HDUPK
{
	//*** NOTE TO SELF: COPY THAT A_WARP BELOW BEFORE DELETING THE TAKELOOP WHILE SCRIPTIFYING ***

	scale 0.65 height 10
	obituary "People don't kill %o! Guns kill %o!"
	states
	{
	spawn:
		RIGL A 0 A_Stop
		---- A 0 A_JumpIfInventory("Clip",1,"spawn2")
		---- A 0 A_GiveInventory("Clip",1)
		---- A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		---- A 0 A_GiveInventory("ZM66Loaded",50)
		---- A 0 A_GiveInventory("ZM66GLoaded",12)
//		---- A 0 A_GiveInventory("ZM66Chamber")
		---- A 0 A_Jump(256,"spawn2")
	spawn2:
		---- A 0 A_JumpIfInventory("ZM66BrokenRound",1,3)
		---- A 0 A_JumpIfInventory("ZM66Loaded",1,3)
		---- A 0 A_JumpIfInventory("ZM66Chamber",1,2)
		---- A 0 A_Jump(256,2)
		---- A 0 A_JumpIfInventory("ZM66Heat",27,"spawnshoot")
		---- D 0 A_JumpIfInventory("ZM66NoMag",1,2)
		---- A 0
		---- A 1 A_GiveInventory("ZM66HeatVent")
		loop
	spawnshoot:
		---- B 0 A_GiveInventory("ZM66Chamber")
		---- B 0 A_PlaySound("weapons/rifle",1)
		---- A 0 A_ChangeVelocity(frandom(-0.4,0.1),frandom(-0.1,0.08),1,CVF_RELATIVE)
		---- A 0 A_SetPitch(random(-4,14))
		---- A 0 A_SetAngle(angle+random(-8,8))
		---- A 0 A_GiveInventory("ZM66Heat",1)
		---- C 1 light("SHOT") A_GiveInventory("DecoBulleter426s")
		---- B 2{
			A_SpawnItemEx("HDGunSmoke",0,0,4,cos(pitch)*cos(angle)*4+vel.x+frandom(-1,1),cos(pitch)*sin(angle)*4+vel.y+frandom(-1,1),-sin(pitch)*4+vel.z+frandom(-1,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			if(countinv("ZM66FullAuto")==2){A_SetTics(0);}
		}
		---- B 0{
			if(countinv("ZM66Loaded")<1){A_TakeInventory("ZM66Chamber",1);}
			else{A_TakeInventory("ZM66Loaded",1);}
		}
		---- A 0 A_Jump(256,"spawn2")
	grab:
		---- "A" 0 A_JumpIfInventory("ZM66BrokenRound",1,2)
		---- A 0 A_JumpIfInventory("ZM66Loaded",1,2)
		---- A 0 A_Jump(256,2)
		---- A 0 A_JumpIfInventory("ZM66Heat",27,"spawn2")
		---- A 0
		goto super::grab
	takeloop:
		---- A 0{
			if(countinv("ZM66Loaded",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66Loaded",countinv("ZM66Loaded",AAPTR_TARGET));
				A_TakeFromTarget("ZM66Loaded");
			}
			if(countinv("ZM66Heat",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66Heat",countinv("ZM66Heat",AAPTR_TARGET));
				A_TakeFromTarget("ZM66Heat");
			}
			if(countinv("ZM66NoMag",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66NoMag");
				A_TakeFromTarget("ZM66NoMag");
			}
			if(countinv("ZM66JailBrokenMag",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66JailBrokenMag");
				A_TakeFromTarget("ZM66JailBrokenMag");
			}
			if(countinv("ZM66BrokenRound",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66BrokenRound");
				A_TakeFromTarget("ZM66BrokenRound");
			}
			if(countinv("ZM66Chamber",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66Chamber");
				A_TakeFromTarget("ZM66Chamber");
			}
			if(countinv("ZM66ZoomDegree",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66ZoomDegree",countinv("ZM66ZoomDegree",AAPTR_TARGET));
				A_TakeFromTarget("ZM66ZoomDegree");
			}

			//warp the gun ahead when it cooks off so it doesn't shoot you
			if(countinv("ZM66Heat")>=27){  
				A_Warp(AAPTR_TARGET,20,0,32,0,WARPF_INTERPOLATE);
			}
			setweaponstate("takeFA");
		}
	takeFA:
		---- A 0{
			if(countinv("ZM66FullAuto",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66FullAuto",countinv("ZM66FullAuto",AAPTR_TARGET));
				A_TakeFromTarget("ZM66FullAuto");
			}
			setweaponstate("takeGL");
		}
	takeGL:
		---- A 0{
			if(countinv("ZM66GLoaded",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66GLoaded");
				A_TakeFromTarget("ZM66GLoaded");
			}
			setweaponstate("spawn2");
		}
	give:
		---- A 0 A_JumpIfInTargetInventory("ZM66SemiRifle",1,"spawn")
		---- A 0 A_JumpIfInTargetInventory("ZM66Rifle",1,"spawn")
		---- A 0 A_JumpIfInTargetInventory("ZM66GrenadeRifle",1,"spawn")
		---- A 0 A_PlaySound("misc/w_pkup")
		---- A 0 A_Jump(256,"give2")
	give2:
		---- A 0 A_GiveToTarget("ZM66GrenadeRifle",1)
	givegunloop:
		---- A 0{
			if(countinv("ZM66Loaded")>0){  
				A_GiveToTarget("ZM66Loaded",countinv("ZM66Loaded"));
				A_TakeInventory("ZM66Loaded");
			}
			if(countinv("ZM66Heat")>0){  
				A_GiveToTarget("ZM66Heat",countinv("ZM66Heat"));
				A_TakeInventory("ZM66Heat");
			}
			if(countinv("ZM66NoMag")>0){  
				A_GiveToTarget("ZM66NoMag");
				A_TakeInventory("ZM66NoMag");
			}
			if(countinv("ZM66JailBrokenMag")>0){  
				A_GiveToTarget("ZM66JailBrokenMag");
				A_TakeInventory("ZM66JailBrokenMag");
			}
			if(countinv("ZM66BrokenRound")>0){  
				A_GiveToTarget("ZM66BrokenRound");
				A_TakeInventory("ZM66BrokenRound");
			}
			if(countinv("ZM66Chamber")>0){  
				A_GiveToTarget("ZM66Chamber");
				A_TakeInventory("ZM66Chamber");
			}
			if(countinv("ZM66ZoomDegree")>0){  
				A_GiveToTarget("ZM66ZoomDegree",countinv("ZM66ZoomDegree"));
				A_TakeInventory("ZM66ZoomDegree");
			}
			setweaponstate("giveFA");
		}
	giveFA:
		---- A 0{
			if(countinv("ZM66FullAuto")>0){  
				A_GiveToTarget("ZM66FullAuto",countinv("ZM66FullAuto"));
				A_TakeInventory("ZM66FullAuto");
			}
			setweaponstate("giveGL");
		}
	giveGL:
		---- A 0{
			if(countinv("ZM66GLoaded")>0){  
				A_GiveToTarget("ZM66GLoaded");
				A_TakeInventory("ZM66GLoaded");
			}
			setweaponstate("givegunloopend");
		}
	}
}
actor ZM66RiflePickup : ZM66GrenadeRiflePickup
{
	states
	{
	spawn:
		RIFL A 0 A_Stop
		---- A 0 A_JumpIfInventory("Clip",1,"spawn2")
		---- A 0 A_GiveInventory("Clip",1)
		---- A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		---- A 0 A_GiveInventory("ZM66Loaded",50)
//		---- A 0 A_GiveInventory("ZM66Chamber",1)
		---- A 0 A_Jump(256,"spawn2")
	takeGL:
		---- A 0 A_Jump(256,"spawn2")
	give2:
		---- A 0 A_GiveToTarget("ZM66Rifle",1)
		goto givegunloop
	giveGL:
		---- A 0 A_Jump(256,"givegunloopend")
	}
}
actor ZM66SemiRiflePickup : ZM66RiflePickup
{
	states
	{
	spawn2:
		---- A 0 A_JumpIfInventory("ZM66BrokenRound",1,3)
		---- A 0 A_JumpIfInventory("ZM66Loaded",1,3)
		---- A 0 A_JumpIfInventory("ZM66Chamber",1,2)
		---- A 0 A_Jump(256,2)
		RIFL A 0 A_JumpIfInventory("ZM66Heat",27,"spawnshoot")
		RIFS D 0 A_JumpIfInventory("ZM66NoMag",1,2)
		RIFS A 0
		---- A 1 A_GiveInventory("ZM66HeatVent")
		loop
	takeFA:
		---- A 0 A_Jump(256,"spawn2")
	give2:
		---- A 0 A_GiveToTarget("ZM66SemiRifle",1)
		goto givegunloop
	giveFA:
		---- A 0 A_Jump(256,"givegunloopend")
	}
}
actor ZM66RiflePickupDropped : ZM66RiflePickup
{
	states
	{
	spawn:
		RIFL A 0 A_Stop
		---- A 0 A_JumpIfInventory("Clip",1,"spawn2")
		---- A 0 A_GiveInventory("Clip",1)
		---- A 0 A_JumpIf(random(0,51)==0,"spawn2")
		---- A 0 A_GiveInventory("ZM66Loaded",random(1,50))
		---- A 0 A_GiveInventory("ZM66Chamber",1)
		---- A 0 A_Jump(256,"spawn2")
	give2:
		---- A 0 A_GiveToTarget("ZM66Rifle",1)
		goto givegunloop
	}
}
actor ZM66SemiRiflePickupDropped : ZM66RiflePickup
{
	states
	{
	spawn2:
		---- A 0 A_JumpIfInventory("ZM66BrokenRound",1,3)
		---- A 0 A_JumpIfInventory("ZM66Loaded",1,3)
		---- A 0 A_JumpIfInventory("ZM66Chamber",1,2)
		---- A 0 A_Jump(256,2)
		RIFL A 0 A_JumpIfInventory("ZM66Heat",27,"spawnshoot")
		RIFS D 0 A_JumpIfInventory("ZM66NoMag",1,2)
		RIFS A 0
		---- A 1 A_GiveInventory("ZM66HeatVent")
		loop
	spawn:
		RIFL A 0 A_Stop
		RIFL D 0 A_JumpIfInventory("ZM66NoMag",1,2)
		RIFL A 0
		---- A 0 A_JumpIfInventory("Clip",1,"spawn2")
		---- A 0 A_GiveInventory("Clip",1)
		---- A 0 A_JumpIf(random(0,51)==0,"spawn2")
		---- A 0 A_GiveInventory("ZM66Loaded",random(1,50))
		---- A 0 A_GiveInventory("ZM66Chamber",1)
		---- A 0 A_Jump(256,"spawn2")
	give2:
		---- A 0 A_GiveToTarget("ZM66SemiRifle",1)
		goto givegunloop
	}
}
actor ZM66GrenadeRiflePickupDropped : ZM66RiflePickup
{
	states
	{
	spawn:
		RIGL A 0 A_Stop
		---- A 0 A_JumpIfInventory("Clip",1,"spawn2")
		---- A 0 A_GiveInventory("Clip",1)
		---- A 0 A_JumpIf(random(0,51)==0,3)
		---- A 0 A_GiveInventory("ZM66Loaded",random(1,50))
		---- A 0 A_GiveInventory("ZM66Chamber",1)
		---- A 0 A_Jump(200,2)
		---- A 0 A_GiveInventory("ZM66GLoaded",1)
		---- A 0 A_Jump(256,"spawn2")
	give2:
		---- A 0 A_GiveToTarget("ZM66GrenadeRifle",1)
		goto givegunloop
	}
}
