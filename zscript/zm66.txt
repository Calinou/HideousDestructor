// ------------------------------------------------------------
// ZM66 4.26mm UAC Standard Automatic Rifle
// ------------------------------------------------------------
const HDCONST_ZM66COOKOFF=21;
class ZM66AssaultRifle:HDWeapon{
	default{
+weapon.cheatnotweapon;
		weapon.selectionorder 20;
		weapon.slotnumber 4;
		inventory.pickupsound "misc/w_pkup";
		inventory.pickupmessage "You got the assault rifle!";
		scale 0.65;
		weapon.bobrangex 0.22;
		weapon.bobrangey 0.9;
		obituary "%o was assaulted by %k.";
	}
	override void tick(){
		super.tick();
		drainheat(6,12);
	}
	action bool brokenround(){
		if(!(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBERBROKEN)){
			int rnd=invoker.owner==null?10:1;
			int sq=invoker.weaponstatus[ZM66S_AUTO];
			if(sq)rnd+=sq*sq;
			rnd+=invoker.weaponstatus[ZM66S_MAG]/3; //int, leave it as division
			if(random(0,2000)<rnd){
				invoker.weaponstatus[ZM66S_FLAGS]|=ZM66F_CHAMBERBROKEN;
			}
		}return invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBERBROKEN;
	}
	states{
	ready:
		RIFG A 1{
			if(
				invoker.weaponstatus[ZM66S_HEAT]>HDCONST_ZM66COOKOFF    
				&&invoker.weaponstatus[0]&ZM66F_CHAMBER
				&&!(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
			){
				setweaponstate("cookoff");
				return;
			}else{
				A_WeaponReady(WRF_ALL);
				if(invoker.weaponstatus[ZM66S_AUTO]>2)invoker.weaponstatus[ZM66S_AUTO]=2;  
			}
		}goto readyend;
	firemode:
		RIFG A 0 A_JumpIf(invoker.weaponstatus[0]&ZM66F_GLMODE,"abadjust");
		RIFG A 1{
			if(invoker.weaponstatus[0]&ZM66F_NOFIRESELECT){
				invoker.weaponstatus[ZM66S_AUTO]=0;
				return;
			}
			if(invoker.weaponstatus[ZM66S_AUTO]>=2)invoker.weaponstatus[ZM66S_AUTO]=0;  
			else invoker.weaponstatus[ZM66S_AUTO]++;
			A_WeaponReady(WRF_NONE);
		}goto nope;
	abadjust:
		RIFG A 2 A_WeaponReady(WRF_NONE);
		RIFG A 0{
			A_GiveInventory("WeaponBusy");
			if (countinv("PressingFire")||countinv("PressingAltfire")){
				setweaponstate("abclick");
			}else if(countinv("PressingZoom")){
				invoker.weaponstatus[ZM66S_AIRBURST]=-1;
				setweaponstate("nope");
			}else if(countinv("PressingFireMode"))setweaponstate("abadjust");
			setweaponstate("nope");
		}
	abclick:
		RIFG A 0{
			if(countinv("PressingFire"))invoker.weaponstatus[ZM66S_AIRBURST]++;
			else invoker.weaponstatus[ZM66S_AIRBURST]--;
			setweaponstate("abadjust");
		}

	select0:
		RIFG A 0{
			invoker.weaponstatus[0]&=~ZM66F_GLMODE;
			if(invoker.weaponstatus[0]&ZM66F_NOLAUNCHER)setweaponstate("select0small");
		}goto select0big;
	deselect0:
		RIFG A 0{
			if(
				invoker.weaponstatus[ZM66S_HEAT]>HDCONST_ZM66COOKOFF      
				&&!(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
				&&(
					invoker.weaponstatus[ZM66S_MAG]||
					invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER
				)
			){
				A_DropInventory(invoker.getclassname());
				return;
			}
			if(invoker.weaponstatus[0]&ZM66F_NOLAUNCHER)setweaponstate("select0small");
		}goto deselect0big;
	flash:
		RIFF A 1 bright{
			A_Light1();
			HDFlashAlpha(-16);
			A_PlaySound("weapons/rifle",CHAN_WEAPON);
			A_ZoomFactor(min(0.99,1.01-0.01*invoker.weaponstatus[ZM66S_AUTO]),
				ZOOM_INSTANT|ZOOM_NOSCALETURNING
			);
			A_MuzzleClimb(
				-0.2,-0.3,
				-frandom(0.4,1.4),-frandom(1.3,2.6)
			);

			//shoot the bullet
			//copypaste any changes to spawnshoot as well!
			actor bbb=spawn("HDBullet426",pos+(0,0,height-8));
			bbb.target=self;bbb.vel+=vel;bbb.pitch=pitch;bbb.angle=angle;
			double brnd=invoker.weaponstatus[ZM66S_HEAT];
			if(brnd>12.){  
				bbb.angle=angle+frandom(-brnd,brnd)*0.1;
				bbb.pitch=pitch+frandom(-brnd,brnd)*0.1;
				bbb.speed-=brnd*10.;
			}

			invoker.weaponstatus[ZM66S_FLAGS]&=~ZM66F_CHAMBER;
			invoker.weaponstatus[ZM66S_HEAT]+=random(2,4);
			A_AlertMonsters();
		}
		RIFF A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		goto lightdone;


	fire:
		RIFG A 2{
			if(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_GLMODE)setweaponstate("firefrag");
			else if(invoker.weaponstatus[ZM66S_AUTO])A_SetTics(3);
		}goto shootgun;
	hold:
		RIFG A 0 A_JumpIf(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_GLMODE,"FireFrag");
		RIFG A 0 A_JumpIf(invoker.weaponstatus[ZM66S_AUTO]>=4,"nope");
		RIFG A 0 A_JumpIf(invoker.weaponstatus[ZM66S_AUTO],"shootgun");
	althold:
		---- A 1{
			if(
				invoker.weaponstatus[ZM66S_HEAT]>HDCONST_ZM66COOKOFF      
				&&!(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
				&&invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER
			)setweaponstate("cookoff");
			else A_WeaponReady(WRF_NOFIRE);
		}
		---- A 0 A_Refire();
		goto ready;
	jam:
		RIFG B 1 offset(-1,36){
			A_PlaySound("weapons/rifleclick");
			invoker.weaponstatus[0]|=ZM66F_CHAMBERBROKEN;
			invoker.weaponstatus[ZM66S_FLAGS]&=~ZM66F_CHAMBER;
		}
		RIFG B 1 offset(1,30) A_PlaySound("weapons/rifleclick",7);
		goto nope;

	shootgun:
		RIFG A 1{
			if(
				//can neither shoot nor chamber
				invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN
				&&!(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER)
				&&invoker.weaponstatus[ZM66S_MAG]<1
			){
				setweaponstate("nope");
			}else if(!(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER)){
				//no shot but can chamber
				setweaponstate("chamber_premanual");
			}else{
				A_GunFlash();
				A_WeaponReady(WRF_NOFIRE); //not WRF_NONE: switch to drop during cookoff
				if(invoker.weaponstatus[ZM66S_AUTO]>=2)invoker.weaponstatus[ZM66S_AUTO]++;  
			}
		}
	chamber:
		RIFG B 2 offset(0,32){
			if(invoker.weaponstatus[ZM66S_MAG]<1){
				setweaponstate("nope");
				return;
			}
			if(brokenround()){
				setweaponstate("jam");
				return;
			}
			if(invoker.weaponstatus[ZM66S_MAG]%100>0){  
				if(invoker.weaponstatus[ZM66S_MAG]==51)invoker.weaponstatus[ZM66S_MAG]=50;
				invoker.weaponstatus[ZM66S_MAG]--;
				invoker.weaponstatus[ZM66S_FLAGS]|=ZM66F_CHAMBER;
			}else{
				A_PlaySound("weapons/rifleclick",CHAN_WEAPON);
			}
			if(!invoker.weaponstatus[ZM66S_AUTO])A_SetTics(1);
			else if(invoker.weaponstatus[ZM66S_AUTO]>1)A_SetTics(0);
		}
		RIFG B 0 A_Refire();
		goto ready;


	cookoff:
		RIFG A 0{
			A_TakeInventory("IsSupported");
			A_GiveInventory("IsMoving",5);
			if(
				(countinv("PressingReload")||countinv("PressingUnload"))	//trying to detach
				&&(invoker.weaponstatus[ZM66S_MAG]>=0)	//something to detach  
			){
				A_SpawnItemEx("HD4mMag",
					cos(pitch)*8,0,height-10-8*sin(pitch),
					vel.x,vel.y,vel.z,0,
					SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				invoker.weaponstatus[ZM66S_MAG]=-1;
			}
			else if(countinv("PressingAltfire")){
				A_Gunflash("nadeflash");
			}
			setweaponstate("shootgun");
		}


	chamber_premanual:
		RIFG A 1 offset(0,33);
		RIFG A 1 offset(-3,34);
		RIFG A 1 offset(-8,37);
		goto chamber_manual;

	user4:
	unload:
		RIFG A 0{
			invoker.weaponstatus[ZM66S_FLAGS]|=ZM66F_UNLOADONLY;
			if(
				invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_GLMODE
			){
				setweaponstate("unloadgrenade");
			}
			else if(
				invoker.weaponstatus[ZM66S_MAG]>=0  
			){
				setweaponstate("unloadmag");
			}
			else if(
				invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER
			){
				setweaponstate("unloadchamber");
			}
			setweaponstate("reload");
		}
	reload:
		RIFG A 0{
			if(	//full mag, no jam, not unload-only - why hit reload at all?
				!(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
				&& invoker.weaponstatus[ZM66S_MAG]%100==50
				&& !(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_UNLOADONLY)
			){
				setweaponstate("nope");
			}else if(	//if jammed, treat as unloading
				invoker.weaponstatus[ZM66S_MAG]<0
				&& invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN
			){
				invoker.weaponstatus[ZM66S_FLAGS]|=ZM66F_UNLOADONLY;
				setweaponstate("unloadchamber");
			}
			setweaponstate("unloadmag");
		}
	unloadmag:
		RIFG A 1 offset(0,33);
		RIFG A 1 offset(-3,34);
		RIFG A 1 offset(-8,37);
		RIFG B 2 offset(-11,39){
			if(	//no mag, skip unload
				invoker.weaponstatus[ZM66S_MAG]<0
			){
				setweaponstate("magout");
			}
			if(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
				invoker.weaponstatus[ZM66S_FLAGS]|=ZM66F_UNLOADONLY;
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
			A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		}
		RIFG B 4 offset(-12,40){
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
			A_PlaySound("weapons/rifleload",CHAN_WEAPON);
		}
		RIFG B 20 offset(-14,44){
			if(
				(
					!invoker.weaponstatus[ZM66S_MAG]
				)||(
					!countinv("PressingUnload")&&!countinv("PressingReload")
				)||(
					(invoker.weaponstatus[ZM66S_MAG]==51)
					&&(A_JumpIfInventory("ZM66RifleMags",0,"null"))
				)||(
					(invoker.weaponstatus[ZM66S_MAG]>0)
					&&(countinv("FourMilAmmo")>AmmoCap("FourMilAmmo")-invoker.weaponstatus[ZM66S_MAG])  
				)
			){
				int garbage;actor mmm;
				[garbage,mmm]=A_SpawnItemEx("HD4mmMag",12,0,height-12,1,0,-1,0,SXF_SETTARGET);
				mmm.stamina=invoker.weaponstatus[ZM66S_MAG]%100;
				A_SetTics(1);
			}else{
				A_PlaySound("weapons/pocket",CHAN_WEAPON);
				if(invoker.weaponstatus[ZM66S_MAG]==51)A_GiveInventory("ZM66RifleMags",1);    
				else{
					A_GiveInventory("FourMilAmmo",invoker.weaponstatus[ZM66S_MAG]%100);
					A_Log("Reloading a 4.26 UAC Standard magazine into another firearm without authorization is a breach of the Volt End User License Agreement.",true);
				}
			}
			invoker.weaponstatus[ZM66S_MAG]=-1;
		}
	magout:
		RIFG B 0{
			if(
				invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_UNLOADONLY
				||(!countinv("ZM66RifleMags")&&!countinv("FourMilAmmo"))
			)setweaponstate("reloadend");
		} //fallthrough to loadmag
	loadmag:
		---- A 20{
			if(countinv("ZM66RifleMags"))A_SetTics(14);
			A_PlaySound("weapons/pocket",CHAN_WEAPON);
		}
		---- A 2{
			if(countinv("ZM66RifleMags")){
				invoker.weaponstatus[ZM66S_MAG]=51;
				A_TakeInventory("ZM66RifleMags",1,TIF_NOTAKEINFINITE);
			}else{
				int lod=min(random(1,50),countinv("FourMilAmmo"));
				invoker.weaponstatus[ZM66S_MAG]=lod+100;
				A_TakeInventory("FourMilAmmo",lod,TIF_NOTAKEINFINITE);
			}
		}
		RIFG B 8 offset(-15,45)A_PlaySound("weapons/rifleload",CHAN_WEAPON);
		RIFG B 1 offset(-14,44)A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		RIFG A 8 offset(-18,50){
			if(invoker.weaponstatus[ZM66S_MAG]<100){
				setweaponstate("chamber_manual");
				return;
			}
			A_MuzzleClimb(frandom(2.3,3.6),frandom(2.4,3.8));
			A_PlaySound("weapons/rifleclick2",6);
			A_PlaySound("weapons/smack",7);
		}
		RIFG A 4 offset(-17,49) A_Log("Reloading a 4.26 UAC Standard magazine into another firearm without auth--\cgFUCK YOURSELF.\c- Sincerely, management.",true);
	chamber_manual:
		RIFG A 4 offset(-15,43){
			if(
				!(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER)
				&& invoker.weaponstatus[ZM66S_MAG]%100>0
			){
				A_PlaySound("weapons/rifleclick");
				if(invoker.weaponstatus[ZM66S_MAG]==51)invoker.weaponstatus[ZM66S_MAG]=49;
				else invoker.weaponstatus[ZM66S_MAG]--;
				invoker.weaponstatus[ZM66S_FLAGS]|=ZM66F_CHAMBER;
				brokenround();
			}else setweaponstate("reloadend");
		}
		RIFG B 4 offset(-14,45);
		goto reloadend;

	reloadend:
		RIFG B 2 offset(-11,39);
		RIFG A 1 offset(-8,37) A_MuzzleClimb(frandom(2,-24),frandom(2,-14));
		RIFG A 1 offset(-3,34);
		RIFG A 1 offset(0,33);
		goto nope;


	unloadchamber:
		RIFG A 1 offset(0,33);
		RIFG A 1 offset(-3,34);
		RIFG A 1 offset(-8,37);
		RIFG B 2 offset(-11,39);
		RIFG B 3 offset(-19,44) A_MuzzleClimb(frandom(-0.4,0.4),frandom(-0.4,0.4));
		RIFG A 2 offset(-16,42) A_MuzzleClimb(frandom(-0.4,0.4),frandom(-0.4,0.4));
		RIFG A 0{
			if(
				invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER
				&&!(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
			){
				A_SpawnItemEx("ZM66DroppedRound",0,0,20,
					random(4,7),random(-2,2),random(-2,1),0,
					SXF_NOCHECKPOSITION
				);
				invoker.weaponstatus[ZM66S_FLAGS]&=~ZM66F_CHAMBER;
				A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
			}else if(!random(0,4)){
				invoker.weaponstatus[0]&=~ZM66F_CHAMBERBROKEN;
				invoker.weaponstatus[ZM66S_FLAGS]&=~ZM66F_CHAMBER;
				A_PlaySound("weapons/rifleclick");
				for(int i=0;i<3;i++)A_SpawnItemEx("TinyWallChunk",0,0,20,
					random(4,7),random(-2,2),random(-2,1),0,SXF_NOCHECKPOSITION
				);
			}
		}goto reloadend;

	nadeflash:
		RIFG A 0 A_JumpIf(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_GRENADELOADED,1);
		stop;
		RIFG A 2{
			A_SetInventory("AirburstCount",invoker.weaponstatus[ZM66S_AIRBURST]);
			A_SpawnItemEx("GyroGrenade",0,0,height-6,
				vel.x,vel.y,vel.z,0,
				SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			invoker.weaponstatus[ZM66S_FLAGS]&=~ZM66F_GRENADELOADED;
			A_PlaySound("weapons/grenadeshot",CHAN_WEAPON);
			A_ZoomFactor(0.99,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		}
		RIFG A 2 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		RIFG A 0 A_MuzzleClimb(-1.6,-4.8);
		stop;
	firefrag:
		RIFG B 2;
		RIFG B 3 A_Gunflash("nadeflash");
		goto nope;


	altfire:
		RIFG A 1 offset(0,34){
			if(invoker.weaponstatus[0]&ZM66F_NOLAUNCHER)return;
			invoker.weaponstatus[ZM66S_AIRBURST]=-1;
			invoker.weaponstatus[0]^=ZM66F_GLMODE;
			A_SetCrosshair(21);
		}goto nope;
	zoom:
		RIFG A 1 A_WeaponReady(WRF_NOFIRE);
		RIFG A 0{
			if(countinv("PressingFire"))invoker.weaponstatus[ZM66S_ZOOM]++;
			else if(countinv("PressingAltFire"))invoker.weaponstatus[ZM66S_ZOOM]--;
			else if(!countinv("PressingZoom"))setweaponstate("nope");
			invoker.weaponstatus[ZM66S_ZOOM]=clamp(invoker.weaponstatus[ZM66S_ZOOM],0,27);
		}loop;

	altreload:
		RIFG A 0{
			if(
				!(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_GRENADELOADED)
				&&countinv("HDRocketAmmo")
			)setweaponstate("unloadgrenade");
		}goto nope;
	unloadgrenade:
		RIFG B 0{
			A_SetCrosshair(21);
			A_MuzzleClimb(-0.3,-0.3);
		}
		RIFG B 2 offset(0,34);
		RIFG B 1 offset(4,38){
			A_MuzzleClimb(-0.3,-0.3);
		}
		RIFG B 2 offset(8,48){
			A_PlaySound("weapons/grenopen",CHAN_WEAPON);
			A_MuzzleClimb(-0.3,-0.3);
		}
		RIFG B 3 offset(10,49){
			if(!(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_GRENADELOADED)){
				A_SetTics(0);
				return;
			}
			invoker.weaponstatus[ZM66S_FLAGS]&=~ZM66F_GRENADELOADED;
			if(
				!countinv("PressingUnload")
				||A_JumpIfInventory("HDRocketAmmo",0,"null")
			){
				A_SpawnItemEx("HDRocketAmmo",
					cos(pitch)*10,0,height-10-10*sin(pitch),vel.x,vel.y,vel.z,0,
					SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
			}else{
				A_SetTics(10);
				A_PlaySound("weapons/pocket",CHAN_WEAPON);
				A_GiveInventory("HDRocketAmmo",1);
				A_MuzzleClimb(frandom(0.8,-0.2),frandom(0.4,-0.2));
			}
		}
		RIFG B 0 A_JumpIf(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_UNLOADONLY,"greloadend");
	loadgrenade:
		RIFG B 4 offset(10,50) A_PlaySound("weapons/pocket",CHAN_WEAPON);
		RIFG BBB 8 offset(10,50) A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		RIFG B 18 offset(8,50){
			A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
			invoker.weaponstatus[ZM66S_FLAGS]|=ZM66F_GRENADELOADED;
			A_PlaySound("weapons/rockreload",CHAN_WEAPON);
		}
	greloadend:
		RIFG B 4 offset(4,44) A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		RIFG B 1 offset(0,40);
		RIFG A 1 offset(0,34) A_MuzzleClimb(frandom(-2.4,0.2),frandom(-1.4,0.2));
		goto nope;

	/*
		Frame reference:
		ZM66 A select-fire GL normal
		ZM66 BC select-fire GL shooting
		ZM66 D select-fire no-GL normal
		ZM66 EF select-fire no-GL shooting
		ZM66 G semi no-GL normal
		[ZM66 H semi GL normal???]
	*/
	spawn:
		ZM66 A 0 A_Stop();
	spawn2:
		ZM66 A -1{
			if(
				invoker.weaponstatus[0]&ZM66F_CHAMBER
				&&!(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
				&&invoker.weaponstatus[ZM66S_HEAT]>HDCONST_ZM66COOKOFF  
			){
				setstatelabel("spawnshoot");
			}else if(invoker.weaponstatus[0]&ZM66F_NOLAUNCHER){
				if(invoker.weaponstatus[0]&ZM66F_NOFIRESELECT)frame=6;
				else frame=3;
			}
		}
	spawnshoot:
		ZM66 A 1 light("SHOT"){
			if(invoker.weaponstatus[0]&ZM66F_NOLAUNCHER)frame=4;else frame=1;

			//shoot the bullet
			//copy any changes to flash as well!
			actor bbb=spawn("HDBullet426",pos+(0,0,8));
			bbb.target=self;bbb.vel+=vel;
			double brnd=invoker.weaponstatus[ZM66S_HEAT];
			if(brnd>12.){  
				bbb.angle=angle+frandom(-brnd,brnd)*0.1;
				bbb.pitch=pitch+frandom(-brnd,brnd)*0.1;
				bbb.speed-=brnd*10.;
			}

			A_ChangeVelocity(frandom(-0.4,0.1),frandom(-0.1,0.08),1,CVF_RELATIVE);
			A_PlaySound("weapons/rifle",CHAN_VOICE);
			invoker.weaponstatus[ZM66S_HEAT]+=random(2,4);
			angle+=frandom(4,-14);
			pitch+=frandom(-8,8);
		}
		ZM66 A 2{
			frame++;
			if(invoker.weaponstatus[ZM66S_AUTO]>1)A_SetTics(0);  
			invoker.weaponstatus[0]&=~(ZM66F_CHAMBER|ZM66F_CHAMBERBROKEN);
			if(invoker.weaponstatus[ZM66S_MAG]%100>0){  
				invoker.weaponstatus[ZM66S_MAG]--;
				invoker.weaponstatus[0]|=ZM66F_CHAMBER;
				brokenround();
			}
		}
		goto spawn2;
	}

	override void InitializeWepStats(bool idfa=false){
		weaponstatus[ZM66S_FLAGS]=ZM66F_CHAMBER|ZM66F_GRENADELOADED;
		weaponstatus[ZM66S_MAG]=50;
		weaponstatus[ZM66S_AUTO]=0;
		weaponstatus[ZM66S_ZOOM]=0;
		weaponstatus[ZM66S_AIRBURST]=0;
		weaponstatus[ZM66S_HEAT]=0;
	}
}

/*
	[0]status
	[1]mag, -1 is emptymag
	[3]firemode/ratchet (0=semi;1=auto;2=burst (if 2+, add 1 on each shot;>3, no shot))
	[4]zoomlevel
	[5]airburst
	[6]heat
	[[7]moa?]
*/
enum zm66status{
	ZM66F_CHAMBER=1,
	ZM66F_CHAMBERBROKEN=2,
	ZM66F_DIRTYMAG=4,
	ZM66F_GRENADELOADED=8,
	ZM66F_NOLAUNCHER=16,
	ZM66F_NOFIRESELECT=32,
	ZM66F_GLMODE=64,
	ZM66F_UNLOADONLY=128,

	ZM66S_FLAGS=0,
	ZM66S_MAG=1, //-1 is ampty
	ZM66S_AUTO=2, //2 is burst, 2-5 counts ratchet
	ZM66S_ZOOM=3,
	ZM66S_AIRBURST=4,
	ZM66S_HEAT=5,
};

class ZM66Spawner:IdleDummy{
	states{
	spawn:
		TNT1 A 0 nodelay{
			let rrr=ZM66AssaultRifle(spawn("ZM66AssaultRifle",pos));
			if(!rrr)return;
			if(!random(0,4))rrr.weaponstatus[0]|=ZM66F_NOLAUNCHER;
			else if(!random(0,4))rrr.weaponstatus[0]|=ZM66F_NOFIRESELECT;
			if(rrr.weaponstatus[0]&ZM66F_NOLAUNCHER){
				spawn("ZM66RifleMags",pos+(7,0,0));
				spawn("ZM66RifleMags",pos+(5,0,0));
			}else{
				spawn("RocketAmmo",pos+(10,0,0));
				spawn("RocketAmmo",pos+(8,0,0));
				spawn("ZM66RifleMags",pos+(5,0,0));
			}
		}stop;
	}
}

