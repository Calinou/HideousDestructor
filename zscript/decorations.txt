// ------------------------------------------------------------
//   Props, trees, headsicles, etc.
// ------------------------------------------------------------

class HDFloatingSkull:HDActor replaces FloatingSkull{
	default{
		height 47;radius 16;+nogravity;+noteleport;+solid;
		+shootable;+nodamage;+noblooddecals;
		+pushable;pushfactor 0.3;mass 300;
		bloodtype "HDSmokeChunk";
	}
	states{
	spawn:
		FSKU AB random(2,8) bright light("FSKUL"){
			double ud=frandom(-0.05,0.05);
			if(pos.z-floorz<4){
				ud=0.05;
			}
			else if(pos.z-floorz>28){
				ud=-0.05;
			}
			vel+=(frandom(-0.05,0.05),frandom(-0.05,0.05),ud);
		}loop;
	}
}


class HDTree:HDActor{
	default{
		+solid +shootable +nodamage +dontthrust +forceybillboard +rollsprite
		mass int.MAX;painchance 48;
	}
	void A_Resize(double scx,double scy){
		super.postbeginplay();
		double cz=ceilingz-floorz;
		if(cz>0&&cz<height*scy)scy*=height/cz;
		A_SetSize(radius*scx,height*scy);
		scale=(scale.x*scx,scale.y*scy);
		scale.x*=randompick(-1,1);
		roll+=frandom(-5.,5.);
	}
	states{
	quiet:
		---- A -1{
			bnoblood=true;
			bnopain=true;
		}stop;
	spawn2:
		---- A 1 A_CheckFloor(1);
		wait;
		---- A 2 ACS_NamedExecuteAlways("CheckHellFloor");
		---- A 1 A_JumpIfInventory("IsInHell",1,"spawn3");
		---- A 0 A_JumpIfInventory("IsInHell",random(1,6),"spawn3",AAPTR_PLAYER1);
		goto quiet;
		---- A 0 A_SetAngle(random(1,360));
	spawn3:
		---- A 1 A_SetTics(random(1,60));
		---- A 0 A_Jump(32,2);
		---- A 0 A_PlaySound("grunt/active",random(0,7),frandom(0.1,0.4),0,1);
		goto spawn3;
		---- A 0 A_PlaySound("tree/pain",random(0,7),frandom(0.2,1.0),0,1);
		goto spawn3;
	pain:
		---- A 1{
			for(int i=0;i<7;i++){
				A_StopSound(i);
			}
			A_PlaySound("tree/pain",0,1.0,0,1);
			A_Immolate(self,self,random(2,4)*100);
			bnopain=true;
			A_SetTics(random(35,350));
		}
		---- A 0{bnopain=false;}
		goto spawn2;
	}
}