// ------------------------------------------------------------
// Chainsaw
// ------------------------------------------------------------
const LUMBERJACKDRAIN=1023;
class Lumberjack:HDWeapon replaces Chainsaw{
	default{
		weapon.selectionorder 90;
		weapon.slotnumber 1;
		weapon.bobstyle "Alpha";
		weapon.bobrangex 0.3;
		weapon.bobrangey 1.4;
		weapon.bobspeed 2.1;
		weapon.ammotype2 "HDCellPacks";
		weapon.kickback 2;
		scale 0.4;
		inventory.pickupmessage "You got the chainsaw! Go find some meat!";
	}
	states{
	ready:
		BEVG C 1{
			A_TakeInventory("WasChoppingFlesh");
			if(invoker.weaponstatus[2]>0)setweaponstate("ready2");
			else A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWUSER4);
		}goto readyend;
	ready2:
		BEVG CD 3{
			if(invoker.weaponstatus[2]>0)invoker.weaponstatus[2]--;
			if((invoker.weaponstatus[2]>4)&&(invoker.weaponstatus[1]>4)){
				A_SetTics(2);
				A_PlaySound("weapons/sawfull",CHAN_WEAPON);
			}else if((invoker.weaponstatus[2]>1)&&(invoker.weaponstatus[1]>2)){
				A_PlaySound("weapons/sawidle",CHAN_WEAPON);
			}else{
				A_SetTics(random(2,4));
				A_PlaySound("weapons/sawidle",CHAN_WEAPON);
			}
			A_WeaponReady(WRF_NOSECONDARY);
		}goto readyend;
	select0:
		BEVG A 0{invoker.weaponstatus[2]=0;}
		goto select0big;
	deselect0:
		BEVG A 0;
		goto deselect0big;
	hold:
		BEVG A 0 A_JumpIf(invoker.weaponstatus[1]>0,"saw");
		goto nope;
	fire:
		BEVG C 2;
		BEVG C 4 A_JumpIf(invoker.weaponstatus[1]>0,"saw");
		goto beatdown;
	saw:
		BEVG AB 1{
			int drainprob=LUMBERJACKDRAIN;
			if(invoker.weaponstatus[2]<12)invoker.weaponstatus[2]++;
			if((invoker.weaponstatus[1]>random(5,8))&&(invoker.weaponstatus[2]>11)){
				A_MuzzleClimb(
					randompick(-1,1)*frandom(-0.2,-0.3),
					randompick(-1,1)*frandom(0.2,0.4)
				);
				A_Saw("weapons/sawfull","weapons/sawhit",5,"HDSawPuff",SF_NOPULLIN);
				A_AlertMonsters();
			}else if((invoker.weaponstatus[1]>random(2,4))&&(invoker.weaponstatus[2]>6)){
				A_MuzzleClimb(
					randompick(-1,1)*frandom(-0.1,-0.3),
					randompick(-1,1)*frandom(0.1,0.4)
				);
				A_Saw("weapons/sawfull","weapons/sawhit",3,"HDSawPuff",SF_NOPULLIN);
				A_SetTics(2);
				A_AlertMonsters();
			}else if((invoker.weaponstatus[1]>random(1,4))&&(invoker.weaponstatus[2]>1)){
				drainprob*=1.5;
				A_MuzzleClimb(
					randompick(-1,1)*frandom(-0.05,-0.6),
					randompick(-1,1)*frandom(0.05,0.2)
				);
				A_Saw("weapons/sawfull","weapons/sawhit",1,"HDSawPuff",SF_NOPULLIN);
				A_SetTics(random(2,4));
				A_AlertMonsters();
			}else{
				drainprob*=4;
				A_MuzzleClimb(frandom(-0.2,0.2),frandom(-0.2,0.2));
				A_PlaySound("weapons/sawidle",CHAN_WEAPON);
				A_FireProjectile("HDSawPuffShitty");
				A_SetTics(random(3,6));
			}
			if(!random(0,drainprob)&&invoker.weaponstatus[1]>0)invoker.weaponstatus[1]--;
		}
		BEVG B 1 A_Refire();
		goto ready;

	altfire:
	beatdown:
		BEVG C 0 A_JumpIfInventory("PowerStrength",1,"beatdownstrong");
		BEVG C 1 offset(0,33);
		BEVG C 1 offset(0,32);
		BEVG DC 1 A_SetPitch(pitch-1,SPF_INTERPOLATE);
		BEVG DC 2 A_SetPitch(pitch-1,SPF_INTERPOLATE);
		BEVG CC 2 A_SetPitch(pitch-2,SPF_INTERPOLATE);
		BEVG C 0 A_Refire("beatdown2");
		goto whack;
	beatdownstrong:
		BEVG D 1 A_SetPitch(pitch-4,SPF_INTERPOLATE);
		BEVG C 1 A_SetPitch(pitch-6,SPF_INTERPOLATE);
		BEVG C 1 A_SetPitch(pitch-8,SPF_INTERPOLATE);
		BEVG C 0 A_Refire("beatdown2");
		goto whack;
	althold:
	beatdown2:
		BEVG C 1{
			A_SetAngle(angle+frandom(-0.1,0.08),SPF_INTERPOLATE);
			A_SetPitch(pitch+frandom(-0.05,0.1),SPF_INTERPOLATE);
		}
		BEVG C 0 A_Refire("beatdown2");
	whack:
		BEVG D 1 A_JumpIf(pitch>25,"nowhack");
		BEVG AB 1 offset(0,36) A_SetPitch(pitch+10,SPF_INTERPOLATE);
		BEVG AAAAA 0 A_CustomPunch(random(1,5),0,0,"HDNullPuff",46);
		BEVG A 1 offset(0,35){
			if(countinv("PowerStrength")>0){A_CustomPunch(random(10,20),0,0,"HDNullPuff",46);}  
			A_SetPitch(pitch+10,SPF_INTERPOLATE);
		}
		BEVG B 2 offset(0,34);
		BEVG C 2 offset(0,33);
	nowhack:
		BEVG C 2 offset(0,32);
		BEVG CCCCC 1 A_WeaponReady(WRF_NOFIRE);
		BEVG C 0 A_JumpIfInventory("PowerStrength",1,6);
		BEVG CCCCC 1 A_WeaponReady(WRF_NOFIRE);
		BEVG C 0 A_Refire("beatdown2");
		goto ready;

	reload:
		BEVG C 0{
			if(
				(invoker.weaponstatus[1]>=20)
				||(!countinv("HDCellPacks")&&!countinv("HDCellAmmo"))
			){return resolvestate("nope");}
			return resolvestate("unmag");
		}

	user4:
	unload:
		BEVG C 0{
			if(invoker.weaponstatus[1]<0){
				return resolvestate("nope");
			}A_GiveInventory("JustUnloading");return resolvestate(null);
		}
	unmag:
		BEVG A 1 offset(0,33);
		BEVG A 1 offset(0,35);
		BEVG A 1 offset(0,37);
		BEVG A 1 offset(0,39);
		BEVG A 2 offset(0,44);
		BEVG A 2 offset(0,52);
		BEVG A 3 offset(2,62);
		BEVG A 4 offset(4,74);
		BEVG A 7 offset(6,78)A_PlaySound("weapons/rifleload",CHAN_WEAPON);
		BEVG A 0{
			A_PlaySound("weapons/grenopen",CHAN_WEAPON);
			if(
				(countinv("PressingUnload")+countinv("PressingReload")<1)
				||(countinv("HDCellAmmo")>invoker.AmmoCap("HDCellAmmo")-invoker.weaponstatus[1])      
				||(
					(invoker.weaponstatus[1]>=20)  
					&&(A_JumpIfInventory("HDCellPacks",0,"null"))
				)
				||(!invoker.weaponstatus[1]&&A_JumpIfInventory("HDCellPackEmpty",0,"null"))
			){
				return resolvestate("dropmag");
			}
			return resolvestate("pocketmag");
		}
	dropmag:
		BEVG A 0{
			if(invoker.weaponstatus[1]>=0){
				actor a;int b;
				[b,a]=A_SpawnItemEx("HDCellPickup",
					cos(pitch)*10,0,height-10-10*sin(pitch),
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				a.stamina=invoker.weaponstatus[1];
			}
			invoker.weaponstatus[1]=-1;
		}goto magout;
	pocketmag:
		BEVG A 6 offset(7,80){
			A_PlaySound("weapons/pocket");
			A_MuzzleClimb(
				randompick(-1,1)*frandom(-0.3,-1.2),
				randompick(-1,1)*frandom(0.3,1.8)
			);
			if(invoker.weaponstatus[1]>=20)A_GiveInventory("HDCellPacks");
			else if(invoker.weaponstatus[1])
				A_GiveInventory("HDCellAmmo",invoker.weaponstatus[1]);
			else A_GiveInventory("HDCellPackEmpty");
			invoker.weaponstatus[1]=-1;
		}
		BEVG A 7 offset(6,81) A_PlaySound("weapons/pocket");
		goto magout;

	magout:
		BEVG A 0 A_JumpIfInventory("JustUnloading",1,"reloadend");
	loadmag:
		BEVG A 4 offset(7,79) A_MuzzleClimb(
			randompick(-1,1)*frandom(-0.3,-1.2),
			randompick(-1,1)*frandom(0.3,0.8)
		);
		BEVG A 2 offset(6,78) A_PlaySound("weapons/pocket");
		BEVG AA 5 offset(5,76) A_MuzzleClimb(
			randompick(-1,1)*frandom(-0.3,-1.2),
			randompick(-1,1)*frandom(0.3,0.8)
		);
		BEVG A 0{
			if(countinv("HDCellPacks")>0){          
				invoker.weaponstatus[1]=20;
				A_TakeInventory("HDCellPacks",1,TIF_NOTAKEINFINITE);
			}else{
				int rld=min(random(1,19),countinv("HDCellAmmo"));
				invoker.weaponstatus[1]=rld;
				A_TakeInventory("HDCellAmmo",rld,TIF_NOTAKEINFINITE);
			}
		}
	reloadend:
		BEVG A 6 offset(5,72);
		BEVG A 5 offset(4,74)A_PlaySound("weapons/huntopen",CHAN_WEAPON);
		BEVG A 4 offset(2,62);
		BEVG A 3 offset(0,52);
		BEVG A 4 offset(0,44);
		BEVG A 1 offset(0,37);
		BEVG A 1 offset(0,35);
		BEVG C 1 offset(0,33);
		goto ready;

	spawn:
		CSAW A -1;
	}

	/*
		[0] flags
		[1] battery
		[2] inertia
	*/
	//for tracking ammo in drops and pickups
	override void initializewepstats(bool idfa=false){
		weaponstatus[1]=20;
	}
}




class HDSawPuff:IdleDummy{
	default{
		+puffonactors +bloodsplatter +puffgetsowner +hittracer +nointeraction
		damagetype "Chainsaw";decal "BulletChipSmall";
	}
	lumberjack lmb;
	states{
	spawn:
		TNT1 A 1 nodelay{
			A_GiveInventory("WasChoppingFlesh",1,AAPTR_TARGET);
			if(tracer && tracer.bcorpse){
				tracer.A_GiveInventory("SawGib",random(5,10));
			}
		}stop;
	crash:
		TNT1 A 1{
			if(target){
				if(!random(0,LUMBERJACKDRAIN)){
					lmb=lumberjack(target.findinventory("lumberjack"));
					if(lmb && lmb.weaponstatus[1]>0)lmb.weaponstatus[1]--;
				}
				if(target && target.countinv("WasChoppingFlesh")){
					let tgt=HDPlayerPawn(target);
					if(tgt){
						tgt.muzzleclimb1.x+=random(-30,10);
						tgt.muzzleclimb1.y+=random(-10,6);
					}
					target.A_Recoil(random(-1,2));
					target.damagemobj(self,target,1,"chainsaw");
				}
			}
			spawn("BulletPuffMedium",pos);
			if(lmb && lmb.weaponstatus[1]>0 && !random(0,LUMBERJACKDRAIN*3))lmb.weaponstatus[1]--;
		}stop;
	}
}


