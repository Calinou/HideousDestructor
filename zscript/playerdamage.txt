/*
keep working on this...

extend class HDPlayerPawn{
	int playerdmob(//override int DamageMobj(
		Actor inflictor,
		Actor source,
		int damage,
		Name mod,
		int flags=0,
		double angle=0
	){
		int towound=0;
		int toburn=0;

		int armourlevel=0;
		if(countinv("BlackArmourFlag")){
			armourlevel=3;
		}
		else if(countinv("BlueArmourFlag")){
			armourlevel=2;
		}
		else if(countinv("GreenArmourFlag")){
			armourlevel=1;
		}

		if(
			mod==(
				"bleedout"
			)
		){
			//bleeding
		}else if(
			mod=="smallarms0"||
			mod=="smallarms1"||
			mod=="smallarms2"||
			mod=="smallarms3"||
			mod=="bullet"||
			mod=="gunshot"
		){
			//shot
			double mult=1;

			int type=0;
			if(mod=="smallarms1")type=1;
			else if(mod=="smallarms2")type=2;
			else if(mod=="smallarms3")type=3;

			//5/6 chance of actually applying armour
			if(random(0,5)){
				if(armourlevel==3){
					mult=min(0.3,0.3);
				}
				else if(armourlevel==2){
					mult=min(0.25*type,0.3);
				}
				else if(armourlevel==1){
					mult=min(0.3*(1+type),1);
				}
			}
			towound=damage*(1-mult)*0.05;
			damage*=mult;
		}else if(
			mod=="thermal"||
			mod=="fire"||
			mod=="ice"||
			mod=="plasma"||
			mod=="burning"
		){
			//burned
			//the heat still has to hit the armour
			if(random(0,5)){
				if(countinv("BlackArmourFlag")){
					damage-=30;
				}
				else if(countinv("BlueArmourFlag")){
					damage-=30;
				}
				else if(countinv("GreenArmourFlag")){
					damage-=30;
				}
			}
			if(damage<1)damage=1;
			toburn=damage;
		}else if(
			mod=="electro"||
			mod=="electrical"||
			mod=="lightning"||
			mod=="bolt"
		){
			//electrocuted
		}else if(
			mod=="balefire"||
			mod=="hellfire"||
			mod=="unholy"
		){
			//balefired
		}else{
			//anything else
			damage*=(1-(armourlevel*0.2));
		}


		//spiritual armour
		if(countinv("SpiritualArmourFlag")){
			towound=0;
			toburn=0;
			damage*=0.5;
			if(damage>health)damage=health-1;
			if(mod!="bleedout" && !random(0,2))A_TakeInventory("SpiritualArmourFlag",1);
		}

		//abort if damage is less than zero
		if(damage<0) return 0;

		//add to wounds and burns
		if(towound){
			A_GiveInventory("WoundCount",towound);
			woundcount+=towound;
		}
		burncount+=toburn;

		//stun the player randomly
		if(damage>50 || (!random(0,2) && damage>20)){
			stunned+=damage;
			A_GiveInventory("stuncount",damage);
		}

		//finally call the real one but ignore all armour
		super.DamageMobj(
			inflictor,
			source,
			damage,
			mod,
			flags|DMG_NO_ARMOR,
			angle
		);
	}
}

*/