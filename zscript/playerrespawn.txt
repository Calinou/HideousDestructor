//Spectator playerpawn
class SpecMorph:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			setz(pos.z+50);
			A_Log(string.format("%s is now a spectator.",player.getusername()));
			A_Morph("HDSpectator",int.MAX,MRF_FULLHEALTH,"HDBloodTrailFloor","TeleportFog");
		}fail;
	}
}
class BotSpawner:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			actor spot;int garbage;
			if(!player.getgender()){
				[garbage,spot]=A_SpawnItemEx("BotBot",flags:SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
			}else{
				[garbage,spot]=A_SpawnItemEx("BotBotF",flags:SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
			}
			if(spot){
				spot.master=self;
			}
			setz(pos.z+50);
			A_Log(string.format("Bot %s replaced with rifleman.",player.getusername()));
			A_Morph("HDBotSpectator",int.MAX,MRF_FULLHEALTH,"HDBloodTrailFloor","TeleportFog");
		}fail;
	}
}
class BotKill:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			bshootable=1;
			A_Die();
		}fail;
	}
}
//hack given by ACS map restart
class RestartMap:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			level.nextmap=level.mapname;
			Exit_Normal(0);
		}fail;
	}
}
class HDBotSpectator:HDSpectator{
	default{
		+nointeraction
	}
}
class HDSpectator:PlayerPawn{
	default{
		-solid -shootable +invisible +notarget +nogravity +noblockmap
		-telestomp +alwaystelefrag -pickup +notrigger
		telefogsourcetype "";
		telefogdesttype "";
		player.viewbob 0;
		player.soundclass "spectator";
		player.userange 0;player.jumpz 0;maxstepheight 1;
		player.morphweapon "NullWeapon";
		player.forwardmove 0.3;player.sidemove 0.3;
		player.startitem "NullWeapon";
		player.viewheight 1;player.attackzoffset 0;
		height 4;radius 4;
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_TakeInventory("IsAlive");
		setz(min(floorz+64,ceilingz-4));
	}
	override void checkcrouch(bool totallyfrozen){}
	int destplayer;
	override void tick(){
		playerpawn.tick();
		if(!player)return;

		int oldinput=getplayerinput(MODINPUT_OLDBUTTONS);
		vel*=0.9;
		if(player.cmd.buttons&BT_CROUCH)vel.z-=1;

		//warp to players
		int chosenplayer=-1;int choosedir;
		if(
			(player.cmd.buttons&BT_ATTACK)&&!(oldinput&BT_ATTACK)
			||(player.cmd.buttons&BT_ALTATTACK)&&!(oldinput&BT_ALTATTACK)
		){
			if(player.cmd.buttons&BT_ATTACK)choosedir=1;
			else choosedir=-1;
	
			for(int i=0;i<MAXPLAYERS&&chosenplayer<0;i++){
				destplayer+=choosedir;
				if(destplayer<0)destplayer=MAXPLAYERS-1;
				else if(destplayer==MAXPLAYERS)destplayer=0;

				actor pmo=players[destplayer].mo;
				if(
					playeringame[destplayer] &&
					pmo &&
					!(pmo is "HDSpectator")
				){
					A_Log(players[destplayer].getusername(),true);
					A_Log(string.format(
						"Now viewing %s.",
						players[destplayer].getusername()
					));
					setorigin(pmo.pos+(
						0,0,min(pmo.height+10,pmo.ceilingz-4)
					),true);
					angle=pmo.angle;
					break;
				}
			}
		}
	}
	states{
	spawn:
	see:
	melee:
	missile:
	pain:
		TNT1 A -1;
	death:
	xdeath:
		TNT1 A 0 A_NoBlocking();
		TNT1 A 10 A_CheckPlayerDone();
		wait;
	}
}