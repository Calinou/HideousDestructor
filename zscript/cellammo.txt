// ------------------------------------------------------------
// Cell ammo for Lumberjack and others
// ------------------------------------------------------------
class HDCellAmmo:Ammo{
	default{
		+inventory.ignoreskill
		inventory.maxamount 30;
		ammo.backpackmaxamount 60;
		ammo.backpackamount 0;
	}
	override void detachfromowner(){
		target=owner;
		super.detachfromowner();
	}
	override inventory createtossable(int amount){
		inventory iii=super.createtossable(amount);
		iii.target=owner;
		return iii;
	}
	states{
	spawn:
		TNT1 A 1 nodelay{
			if(target){
				if(amount>0)target.A_GiveInventory("HDCellAmmo",amount);
				target.A_GiveInventory("HDSpareCellDropper");
			}
		}stop;
	}
}
//for the single drop
class HDSpareCellDropper:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			actor a;int b;
			while(countinv("HDCellAmmo")){
				[b,a]=A_SpawnItemEx("HDCellPickup",
					random(8,12),random(0,12),24,5,0,0,random(-6,-12)
				);a.vel+=vel;
				b=min(countinv("HDCellAmmo"),random(1,19));
				a.stamina=b;
				A_TakeInventory("HDCellAmmo",b);
			}
		}fail;
	}
}
class HDCellpacks:Ammo replaces Cell{
	default{
		+inventory.ignoreskill
		inventory.maxamount 6;
		ammo.backpackmaxamount 20;
		ammo.backpackamount 0;
		inventory.pickupmessage "Picked up a cell.";
		scale 0.4;
	}
	states{
	spawn:
		CELL A 0 nodelay A_SpawnItemEx("CelP",0,0,0,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
		stop;
	}
}
class HDCellpackEmpty:Ammo{
	default{
		+inventory.ignoreskill
		inventory.maxamount 6;
		ammo.backpackmaxamount 20;
		ammo.backpackamount 0;
		inventory.pickupmessage "Picked up a depleted cell.";
		scale 0.4;
	}
	states{
	spawn:
		CELL A 0 nodelay A_SpawnItemEx("CelE",0,0,0,vel.x,vel.y,vel.z,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
		stop;
	}
}
class CelP:HDUPK replaces HDCellpacks{
	default{scale 0.4;}
	states{
	spawn:
		CELL A -1 A_Stop();
	give:
		---- A 0 A_JumpIfInTargetInventory("HDCellpacks",0,"spawn");
		---- A 0{
			A_PlaySound("weapons/pocket",CHAN_WEAPON);
			A_GiveToTarget("HDCellpacks",1);
		}stop;
	}
}
class CelE:CelP replaces HDCellpackEmpty{
	default{translation 0;}
	states{
	give:
		---- A 0 A_JumpIfInTargetInventory("HDCellpackEmpty",0,"spawn");
		---- A 0{
			A_PlaySound("weapons/pocket",CHAN_WEAPON);
			A_GiveToTarget("HDCellpackEmpty",1);
		}stop;
	}
}


//replace the derivatives where you can
//spawn a HDCellPickup from the weapon, give it a Clip plus whatever # you want
class HDCellPickup:HDUPK{
	default{scale 0.4;stamina 20;}
	states{
	spawn2:
		CELL CBA -1{
			if(stamina<1){
				actor a=spawn("CelE",pos);a.vel=vel;
				destroy();return;
			}
			else if(stamina>=20){  
				actor a=spawn("CelP",pos);a.vel=vel;
				destroy();return;
			}
			else if(stamina>13)frame=0;  
			else if(stamina>6)frame=1;
		}
	spawn:
		CELL C 0 A_Stop();
		goto spawn2;
	give:
		---- A 0{
			if(stamina>=20){  
				if(A_JumpIfInTargetInventory("HDCellPacks",0,"null")){
					setstatelabel("spawn");
					return;
				}else target.A_GiveInventory("HDCellPacks",1);
			}else if(stamina<1){
				if(A_JumpIfInTargetInventory("HDCellPackEmpty",0,"null")){
					setstatelabel("spawn");
					return;
				}else target.A_GiveInventory("HDCellPackEmpty",1);
			}else{
				if(A_JumpIfInTargetInventory("HDCellAmmo",0,"null")){
					setstatelabel("spawn");
					return;
				}
				target.A_GiveInventory("HDCellAmmo",stamina);
			}
			A_PlaySound("weapons/pocket");
		}stop;
	}
}



