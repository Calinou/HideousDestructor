// ------------------------------------------------------------
// Backpack
// ------------------------------------------------------------
class HDBP:HDWeapon{
	default{
		//$Category "Items/Hideous Destructor/Gear"
		//$Title "Backpack"
		//$Sprite "BPAKA0"

		+inventory.invbar +weapon.wimpy_weapon
		+weapon.no_auto_switch
		weapon.selectionorder 1010;
		inventory.icon "BPAKA0";
		inventory.pickupmessage "Picked up a backpack to help fill your life with ammo!";
		inventory.pickupsound "weapons/pocket";
	}
	override inventory createtossable(int amount){
		target=owner;
		let ct=hdbp(super.createtossable(amount));
		if(ct&&target&&ct.getbulk()){
			ct.target=target;
			ct.translation=target.translation;
		}
		return ct;
	}
	override double,int weaponbulk(){
		return max(100,getbulk()),0;
	}


	action void A_AddBackpackItem(int which){
		class<inventory> itp=invoker.itemtype[which];

		if(
			!countinv(itp)
			||(
				HDBPC_CAPACITY-invoker.itembulk[which]
				<invoker.bulk
			)
		)return;


		//where the magic happens
		if(itp=="HDArmour"){
			let armr=HDArmour(findinventory("HDArmour"));
			if(
				invoker.itemamount[which]>0 //limit one
				||armr.meleethreshold>1
			)return;
			invoker.itemamount[which]=armr.amount;
			A_TakeInventory(itp);
		}else if(itp is "HDMagAmmo"){
			invoker.BPAddMag(invoker.itemtype[which]);
		}else{
			invoker.itemamount[which]++;
			A_TakeInventory(itp,1);
		}


		if(
			invoker.itemamount[which]>20
			||invoker.itembulk[which]>40
		)A_SetTics(4);

		invoker.getbulk();
	}
	void BPAddMag(name what){
		int dex=-1;
		if(what=="HD9mMag15")dex=pistindex;
		else if(what=="HD9mMag30")dex=smgindex;
		else if(what=="HD4mMag")dex=zmindex;
		else if(what=="HD7mMag")dex=libindex;
		else if(what=="HD7mClip")dex=bossindex;
		else if(what=="HDBattery")dex=batteryindex;
		else return;
		double unitbulk=itembulk[dex];
		if(getbulk()+unitbulk>HDBPC_CAPACITY) return;

		//finally, actually do the thing
		let mgg=hdmagammo(owner.findinventory(what));
		if(!mgg||!mgg.mags.size())return;
		itemamount[dex]++;
		if(dex==pistindex)pistmags.push(mgg.TakeMag(false));
		else if(dex==smgindex)smgmags.push(mgg.TakeMag(false));
		else if(dex==zmindex)zmmags.push(mgg.TakeMag(false));
		else if(dex==libindex)libmags.push(mgg.TakeMag(false));
		else if(dex==bossindex)bossclips.push(mgg.TakeMag(false));
		else if(dex==batteryindex)batteries.push(mgg.TakeMag(false));
		else return;
	}
	action void A_DropBackpackItem(int which){
		class<inventory> itp=invoker.itemtype[which];
		if(
			invoker.itemamount[which]<1
			||A_JumpIfInventory(itp,0,"null")
		)return;

		if(
			invoker.itemamount[which]>20
			||invoker.itembulk[which]>40
		)A_SetTics(5);
		else if(invoker.itembulk[which]<20){ //reaching
			A_SetTics(10);
			A_PlaySound("weapons/pocket",CHAN_WEAPON);
		}

		//where the magic happens
		if(itp=="HDArmour"){
			if(countinv("HDArmour"))return;
			A_GiveInventory(itp,invoker.itemamount[which]);
			invoker.itemamount[which]=0;
		}else if(itp is "HDMagAmmo"){
			HDMagAmmo.GiveMag(self,itp,invoker.BPTakeMag(which));
		}else{
			A_GiveInventory(itp,1);
			invoker.itemamount[which]--;
		}

		invoker.getbulk();
	}
	int BPTakeMag(int which){
		int spawnamt=-1;
		SyncMagAmounts();
		if(itemamount[which]<1)return -1;
		if(which==batteryindex){
			spawnamt=batteries[batteries.size()-1];
			batteries.pop();
			itemamount[which]=batteries.size();
		}else if(which==zmindex){
			spawnamt=zmmags[zmmags.size()-1];
			zmmags.pop();
			itemamount[which]=zmmags.size();
		}else if(which==libindex){
			spawnamt=libmags[libmags.size()-1];
			libmags.pop();
			itemamount[which]=libmags.size();
		}else if(which==bossindex){
			spawnamt=bossclips[bossclips.size()-1];
			bossclips.pop();
			itemamount[which]=bossclips.size();
		}else if(which==pistindex){
			spawnamt=pistmags[pistmags.size()-1];
			pistmags.pop();
			itemamount[which]=pistmags.size();
		}else if(which==smgindex){
			spawnamt=smgmags[smgmags.size()-1];
			smgmags.pop();
			itemamount[which]=smgmags.size();
		}
		return spawnamt;
	}


	states{
	spawn:
		BPAK ABC -1 nodelay{
			if(!invoker.getbulk())frame=1;
			else if(target){
				translation=target.translation;
				frame=2;
			}
			invoker.bno_auto_switch=false;
		}
	select0:
		TNT1 A 10{
			A_PlaySound("weapons/pocket",CHAN_WEAPON);
			if(invoker.bulk>(HDBPC_CAPACITY*0.7))A_SetTics(20);
		}goto super::select0;
	ready:
		TNT1 A 1{
			invoker.weaponstatus[HDBPS_COOLDOWN]=max(0,invoker.weaponstatus[HDBPS_COOLDOWN]-1);
			A_WeaponReady(WRF_ALLOWUSER1|WRF_ALLOWUSER2|WRF_ALLOWUSER4|WRF_ALLOWZOOM|WRF_ALLOWRELOAD);
		}goto readyend;
	altreload:
		TNT1 A 0{
			class<inventory> what=invoker.itemtype[invoker.weaponstatus[HDBPS_WHICH]];
			A_DropInventory(what,countinv(what));
		}goto nope;
	fire:
	hold:
	altfire:
	althold:
	firemode:
	scrollitems:
		TNT1 A 3{
			int ispd=player.cmd.pitch;

			//move direction
			bool digitalscrolling=pressingfiremode()?false:true;
			if(digitalscrolling){
				if(pressingfire())
					invoker.weaponstatus[HDBPS_WHICH]--;
					else invoker.weaponstatus[HDBPS_WHICH]++;
			}else{
				if(ispd<0)invoker.weaponstatus[HDBPS_WHICH]++;
				else if(ispd>0)invoker.weaponstatus[HDBPS_WHICH]--;
				A_MuzzleClimb(0,ispd*0.0012);
			}

			//wrap, skip
			if(
				invoker.weaponstatus[HDBPS_WHICH]<0
			){
				invoker.weaponstatus[HDBPS_WHICH]=HDBPC_NUMITEMS-1;
				while(!invoker.itemname[invoker.weaponstatus[HDBPS_WHICH]])
					invoker.weaponstatus[HDBPS_WHICH]--;
			}else if(
				invoker.weaponstatus[HDBPS_WHICH]>=HDBPC_NUMITEMS
				||!invoker.itemname[invoker.weaponstatus[HDBPS_WHICH]]
			)invoker.weaponstatus[HDBPS_WHICH]=0;

			//set tics
			int which=invoker.weaponstatus[HDBPS_WHICH];

			if(
				which&&!countinv(invoker.itemtype[which])
				&&invoker.itemamount[which]<1
			){
				if(pressingfiremode())setweaponstate("scrollitems");
				A_Refire();
			}else{
				if(digitalscrolling){
					if(invoker.itemamount[which]>0)A_SetTics(3);
					else if(
						which&&!countinv(invoker.itemtype[which])
					){
						if(pressingfiremode())setweaponstate("scrollitems");
						A_Refire();
					}else A_SetTics(3);
				}else{
					ispd=abs(ispd);
					if(ispd>500&&which%3)A_SetTics(0);
					else if(ispd>450&&which%2)A_SetTics(0);
					else if(ispd>400)A_SetTics(1);
					else if(ispd>200)A_SetTics(3);
					else if(ispd>100)A_SetTics(5);
					else A_SetTics(7);
				}
			}
		}
		TNT1 A 0 A_Refire();
		goto ready;
	reload:
		TNT1 A 5 A_AddBackpackItem(invoker.weaponstatus[HDBPS_WHICH]);
		goto ready;
	unload:
		TNT1 A 7 A_DropBackpackItem(invoker.weaponstatus[HDBPS_WHICH]);
		goto ready;

	zoom:
		TNT1 A 0{
			invoker.weaponstatus[HDBPS_COOLDOWN]+=8;
			if(invoker.weaponstatus[HDBPS_COOLDOWN]<16)return;
			for(int i=0;i<HDBPC_NUMITEMS;i++){
				if(invoker.itemtype[i]&&invoker.itemamount[i]>0){
					if(invoker.itemtype[i]=="HDArmour"){
						inventory aaa=inventory(spawn("HDArmour",pos+(0,0,height*0.6)));
						aaa.amount=invoker.itemamount[i];
					}
					else A_DropItem(invoker.itemtype[i],invoker.itemamount[i]);
					invoker.itemamount[i]=0;
				}
			}
			invoker.getbulk();
		}goto nope;
	}

	double bulk;
	double getbulk(){
		double ebulk=0;
		for (int i=0;i<HDBPC_NUMITEMS;i++){
			if(itemamount[i]>0){
				if(itemtype[i]=="HDArmour"){ //always worth 1 suit
					ebulk+=itembulk[i];
				}else ebulk+=itembulk[i]*itemamount[i];
			}
		}
		int magslength=pistmags.size();for(int i=0;i<magslength;i++){ebulk+=ENC_9_LOADED*pistmags[i];}
		magslength=smgmags.size();for(int i=0;i<magslength;i++){ebulk+=ENC_9_LOADED*smgmags[i];}
		magslength=zmmags.size();for(int i=0;i<magslength;i++){ebulk+=ENC_426_LOADED*zmmags[i];}
		magslength=libmags.size();for(int i=0;i<magslength;i++){ebulk+=ENC_776_LOADED*libmags[i];}
		magslength=bossclips.size();for(int i=0;i<magslength;i++){ebulk+=ENC_776*bossclips[i];}
		bulk=ebulk;
		return ebulk;
	}

	string itemname[HDBPC_NUMITEMS];
	name itemtype[HDBPC_NUMITEMS];
	int itemamount[HDBPC_NUMITEMS];
	double itembulk[HDBPC_NUMITEMS];

	override void initializewepstats(bool idfa){
		return;
		//old code below, for adding ammo in IDFA
		if(!idfa)return;
		for(int i=0;i<HDBPC_NUMITEMS;i++){

			if(i==armourindex)itemamount[i]=HDCONST_GREENARMOUR;
			else if(itemname[i]=="br"||itemname[i]=="cl")itemamount[i]=0;
			else itemamount[i]=max(
				1,
				itemamount[i],
				10/(max(1,itembulk[i]))
			);
			getbulk();
		}
	}
	int armourindex;
	int derpindex;int bderpindex;
	int sevenmilindex;int brassindex;int loosezedindex;
	int potionindex;int talismanindex;

	int pistindex;int smgindex;int zmindex;int libindex;int bossindex;int batteryindex;
	array<int> pistmags;array<int> smgmags;array<int> zmmags;array<int> libmags;
	array<int> bossclips;array<int> batteries;
	void SyncMagAmounts(){
		itemamount[pistindex]=max(itemamount[pistindex],pistmags.size());
			while(itemamount[pistindex]>pistmags.size()){pistmags.push(15);}
		itemamount[smgindex]=max(itemamount[smgindex],smgmags.size());
			while(itemamount[smgindex]>smgmags.size()){smgmags.push(30);}
		itemamount[zmindex]=max(itemamount[zmindex],zmmags.size());
			while(itemamount[zmindex]>zmmags.size()){zmmags.push(51);}
		itemamount[libindex]=max(itemamount[libindex],libmags.size());
			while(itemamount[libindex]>libmags.size()){libmags.push(30);}
		itemamount[bossindex]=max(itemamount[bossindex],bossclips.size());
			while(itemamount[bossindex]>bossclips.size()){bossclips.push(10);}
		itemamount[batteryindex]=max(itemamount[batteryindex],batteries.size());
			while(itemamount[batteryindex]>batteries.size()){batteries.push(20);}
	}

	override void beginplay(){
		int i=-1;
		i++;itembulk[i]=ENC_GREENARMOUR;itemtype[i]="HDArmour";itemname[i]="Soft armour";armourindex=i;
		i++;itembulk[i]=ENC_LADDER;itemtype[i]="PortableLadder";itemname[i]="Ladder";
		i++;itembulk[i]=ENC_RADSUIT;itemtype[i]="PortableRadSuit";itemname[i]="Environment suit";
		i++;itembulk[i]=ENC_LITEAMP;itemtype[i]="PortableLiteAmp";itemname[i]="Light amplifier";
		i++;itemname[i]="br";

		i++;itembulk[i]=ENC_MEDIKIT;itemtype[i]="PortableMedikit";itemname[i]="Medikit";
		i++;itembulk[i]=ENC_STIMPACK;itemtype[i]="PortableBerserkPack";itemname[i]="Berserk pack";
		i++;itembulk[i]=ENC_STIMPACK;itemtype[i]="PortableStimpack";itemname[i]="Stimpack";
		i++;itembulk[i]=ENC_BLUEPOTION;itemtype[i]="BluePotion";itemname[i]="Healing potion";potionindex=i;
		i++;itembulk[i]=ENC_SQUADSUMMONER;itemtype[i]="SquadSummoner";itemname[i]="Summoning talisman";talismanindex=i;
		i++;itemname[i]="br";

		i++;itembulk[i]=ENC_HEATROCKET;itemtype[i]="HEATAmmo";itemname[i]="H.E.A.T. rocket";
		i++;itembulk[i]=ENC_ROCKET;itemtype[i]="HDRocketAmmo";itemname[i]="Rocket grenade";
		i++;itembulk[i]=ENC_ROCKET;itemtype[i]="DudRocketAmmo";itemname[i]="Defused rocket";
		i++;itemname[i]="br";

		i++;itembulk[i]=ENC_FRAG;itemtype[i]="HDFragGrenadeAmmo";itemname[i]="Hand grenade";
		i++;itembulk[i]=ENC_BATTERY;itemtype[i]="HDBattery";itemname[i]="Battery";batteryindex=i;
		i++;itembulk[i]=ENC_BRONTOSHELL;itemtype[i]="BrontornisRound";itemname[i]="Brontornis shell";
		i++;itemname[i]="br";

		i++;itembulk[i]=ENC_426MAG_EMPTY;itemtype[i]="HD4mMag";itemname[i]="4.26mm mag";zmindex=i;
		i++;itembulk[i]=ENC_426;itemtype[i]="FourMilAmmo";itemname[i]="Misc. 4.26mm ammo";loosezedindex=i;
		i++;itemname[i]="cl";

		i++;itembulk[i]=ENC_776MAG_EMPTY;itemtype[i]="HD7mMag";itemname[i]="7.76mm mag";libindex=i;
		i++;itembulk[i]=ENC_776CLIP;itemtype[i]="HD7mClip";itemname[i]="7.76mm clip";bossindex=i;
		i++;itembulk[i]=ENC_776;itemtype[i]="SevenMilAmmo";itemname[i]="Misc. 7.76mm ammo";sevenmilindex=i;
		i++;itembulk[i]=ENC_776B;itemtype[i]="SevenMilBrass";itemname[i]="7.76mm casing";brassindex=i;
		i++;itemname[i]="br";

		i++;itembulk[i]=ENC_9MAG_EMPTY;itemtype[i]="HD9mMag15";itemname[i]="Pistol mag";pistindex=i;
		i++;itembulk[i]=ENC_9MAG30_EMPTY;itemtype[i]="HD9mMag30";itemname[i]="SMG mag";smgindex=i;
		i++;itembulk[i]=ENC_9;itemtype[i]="HDPistolAmmo";itemname[i]="Misc. 9mm ammo";
		i++;itemname[i]="br";

		i++;itembulk[i]=ENC_SHELL;itemtype[i]="HDShellAmmo";itemname[i]="Shotgun shell";
		i++;itemname[i]="br";

		i++;itembulk[i]=ENC_DERP;itemtype[i]="DERPUsable";itemname[i]="D.E.R.P. robot";derpindex=i;
		i++;itembulk[i]=ENC_DERP;itemtype[i]="DERPDEAD";itemname[i]="Broken D.E.R.P. robot";bderpindex=i;
		i++;itembulk[i]=9;itemtype[i]="HDIEDKit";itemname[i]="I.E.D. kit";
		super.beginplay();
	}
}
enum HDBackpackItems{
	HDBPS_WHICH=1,
	HDBPS_COOLDOWN=2,

	HDBPF_NOAUTO=1,

	HDBPC_CAPACITY=1000,
	HDBPC_NUMITEMS=40, //should be the length of the array including brs
}

class HDBPPreset:Inventory replaces backpack{
	default{
		inventory.maxamount 999;
	}
	override void postbeginplay(){
		super.postbeginplay();
		actor prebp;
		if(owner){
			owner.A_SetInventory("HDBP",1);
			prebp=owner.findinventory("HDBP");
		}else{
			prebp=spawn("HDBP",pos);
			amount=random(1,20);
		}
		let bp=HDBP(prebp);
		if(bp){
			addstuff(bp);
		}
		destroy();
	}
	void addstuff(hdbp bp){
		if(amount==999){ //custom
			for(int i=0;i<HDBPC_NUMITEMS;i++){
				if(bp.itemtype[i]){
					int thisamt=cvar.getcvar(
						string.format("hd_loadbp%i",i),
						owner.player
					).getint();
					if(thisamt>0){
						if(bp.itemtype[i]=="HDArmour")bp.itemamount[bp.armourindex]=HDCONST_GREENARMOUR;
						else bp.itemamount[i]=thisamt;
					}
					if(bp.getbulk()>=HDBPC_CAPACITY){
						bp.itemamount[i]=0;
						break;
					}
				}
			}
		}else{
			for(int i=0;i<HDBPC_NUMITEMS;i++){
				class<inventory>bpi=bp.itemtype[i];
				if(amount==1){ //contractor
					if(bpi=="HDShellAmmo")bp.itemamount[i]=40;
					else if(bpi=="HDRocketAmmo")bp.itemamount[i]=5;
					else if(bpi=="PortableStimpack")bp.itemamount[i]=7;
					else if(bpi=="PortableMedikit")bp.itemamount[i]=3;
					else if(bpi=="HDFragGrenadeAmmo")bp.itemamount[i]=7;
				}else if(amount==2){ //medic
					if(bpi=="PortableMedikit")bp.itemamount[i]=5;
					else if(bpi=="PortableBerserkPack")bp.itemamount[i]=5;
					else if(bpi=="PortableStimpack")bp.itemamount[i]=5;
					else if(bpi=="HDBattery")bp.itemamount[i]=2;
					else if(bpi=="PortableRadsuit")bp.itemamount[i]=2;
					else if(bpi=="PortableLadder")bp.itemamount[i]=1;
				}else if(amount==3){ //roboticist
					if(bpi=="DERPDEAD")bp.itemamount[i]=1;
					else if(bpi=="HDBattery")bp.itemamount[i]=6;
					else if(bpi=="DudRocketAmmo")bp.itemamount[i]=5;
					else if(bpi=="HD9mMag15")bp.itemamount[i]=10;
					else if(bpi=="HD4mMag")bp.itemamount[i]=6;
				}else if(!random(0,5)&&bpi){ //insurgent
					int maxrand=random(0,3);
					if(
						i!=bp.potionindex
						&&i!=bp.talismanindex
					)maxrand=random(50,250)/(max(1,bp.itembulk[i]));
					if(i==bp.armourindex)maxrand=random(random((HDCONST_GREENARMOUR>>1),HDCONST_GREENARMOUR),HDCONST_GREENARMOUR);
					if(!maxrand)continue;
					bp.itemamount[i]=random(1,random(1,maxrand));
					if(bp.getbulk()>=HDBPC_CAPACITY){
						bp.itemamount[i]=0;
						break;
					}
				}
			}
		}
		bp.getbulk();
		destroy();
	}
}
