// ------------------------------------------------------------
// The cause of - and solution to -
// ------------------------------------------------------------
extend class HDPlayerPawn{
	void ConsolidateAmmo(){
		let bp=HDBP(findinventory("HDBP"));

		//use the BFG to charge everything
		if(countinv("BFG9k")){
			hdweapon(findinventory("BFG9k")).initializewepstats(true);
			//convert empty to full
			while(
				countinv("HDCellPackEmpty")
				&&!A_JumpIfInventory("HDCellPacks",0,"null")
			){
				A_TakeInventory("HDCellPackEmpty",1);
				A_GiveInventory("HDCellPacks");
			}
			//convert partial to full
			while(
				countinv("HDCellAmmo")
				&&!A_JumpIfInventory("HDCellPacks",0,"null")
			){
				A_TakeInventory("HDCellAmmo",random(4,20));
				A_GiveInventory("HDCellPacks");
			}
			if(countinv("ThunderBuster")){
				hdweapon(findinventory("ThunderBuster")).weaponstatus[TBS_BATTERY]=20;
			}
			if(countinv("Lumberjack")){
				hdweapon(findinventory("Lumberjack")).weaponstatus[CSAWS_BATTERY]=20;
			}
			if(countinv("Vulcanette")){
				hdweapon(findinventory("Vulcanette")).weaponstatus[VULCS_BATTERY]=20;
			}

			//convert stuff in backpacks
			if(bp){
				bp.itemamount[bp.fcellindex]+=bp.itemamount[bp.ecellindex];
				bp.itemamount[bp.ecellindex]=0;
				bp.itemamount[bp.fcellindex]+=max(1,bp.itemamount[bp.mcellindex]/15);
				bp.itemamount[bp.mcellindex]=0;
			}
		}
		//there is no else.
		//consider using the big battery pack sprite as a charger on some maps?

		
		//repair *ERPs
		if(countinv("DERPDEAD")){
			A_TakeInventory("DERPDEAD");
			A_GiveInventory("DERPUsable");
		}
		if(bp
			&&bp.itemamount[bp.derpindex]<1
			&&bp.itemamount[bp.bderpindex]>0  
		){
			bp.itemamount[bp.bderpindex]--;
			bp.itemamount[bp.derpindex]=1;
		}
		if(countinv("HERPDEAD")){
			A_TakeInventory("HERPDEAD");
			A_GiveInventory("HERPUsable");
		}


		//reload as much brass as possible and consolidate again
		if(
			(countinv("LiberatorRifle")||countinv("BossRifle"))
		){
			int totalbrass=countinv("SevenMilBrass");
			int totalpowder=countinv("FourMilAmmo");

			//take recyclables out of guns
			let boss=bossrifle(findinventory("BossRifle"));
			if(boss){
				int br=boss.weaponstatus[BOSSS_CHAMBER];
				if(br!=2&&br!=4&&br>0){  
					totalbrass++;
					boss.weaponstatus[BOSSS_CHAMBER]=0;
				}
			}
			let libb=liberatorrifle(findinventory("LiberatorRifle"));
			if(libb){
				if(libb.weaponstatus[LIBS_CHAMBER]==1){
					libb.weaponstatus[LIBS_CHAMBER]=0;
					totalbrass++;
				}
				int brasss=libb.weaponstatus[LIBS_BRASS];
				libb.weaponstatus[LIBS_BRASS]=0;
				if(brasss>0)totalbrass+=brasss;  
			}
			let zed=zm66assaultrifle(findinventory("zm66assaultrifle"));
			if(
				zed&&
				zed.weaponstatus[0]
				&ZM66F_CHAMBERBROKEN
			){
				zed.weaponstatus[0]&=~(ZM66F_CHAMBER|ZM66F_CHAMBERBROKEN);
				totalpowder++;
			}

			//and other containers
			int brassinbp=0;
			int zedinbp=0;
			if(bp){
				brassinbp=bp.itemamount[bp.brassindex];
				zedinbp=bp.itemamount[bp.loosezedindex];

				totalbrass+=brassinbp;
				totalpowder+=zedinbp;
			}


			//figure out what you can actually do
			int max7=hdmath.maxinv(self,"SevenMilAmmo")-countinv("SevenMilAmmo");
			int max7bp=0;
			if(bp)max7bp=max(0,(HDBPC_CAPACITY-bp.getbulk())/(bp.itembulk[bp.sevenmilindex]));

			//random losses
			int scrapped=totalbrass*0.02+random(0,2);
			totalbrass-=scrapped;
			scrapped=totalpowder*0.05+random(0,12);
			totalpowder-=scrapped;

			//and now make the dang things
			int made=min(
				totalbrass,
				totalpowder/3,
				max7+max7bp
			);
			totalbrass-=made;
			totalpowder-=made*3;

			A_Log(string.format("Reloaded %i 7.76mm rounds during downtime.",made),true);

			//fill inventory first, then backpack
			//let the player load into mags after
			max7=min(max7,made);
			made-=max7;
			A_GiveInventory("SevenMilAmmo",max7);

			//put stuff back into backpack
			if(bp){
				bp.itemamount[bp.sevenmilindex]+=made;

				brassinbp=min(totalbrass,brassinbp);
				zedinbp=min(totalpowder,zedinbp);
				totalbrass-=brassinbp;
				totalpowder-=zedinbp;

				bp.itemamount[bp.brassindex]=brassinbp;
				bp.itemamount[bp.loosezedindex]=zedinbp;
			}

			//put stuff back into inventory
			A_SetInventory("SevenMilBrass",totalbrass);
			A_SetInventory("FourMilAmmo",totalpowder);
		}

		//I've deleted ALL things that can be done manually by the player.
		//Too many possible permutations.
		//Fuck, just look at the extra code for putting reloads in the backpack!
	}
}
