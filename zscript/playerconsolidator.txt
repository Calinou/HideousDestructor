// this one gets its own file because it's sooooo sprawly.

extend class HDPlayerPawn{
	void ConsolidateAmmo(){
		//make as many mags and clips as possible to make room for more 7mm
		if(countinv("SevenMilAmmo")>10){
			int maxclag=HDMath.MaxInv(self,"LiberatorMag");
			while(
				countinv("SevenMilAmmo")>29 &&  
				countinv("LiberatorMag")<maxclag
			){
				A_TakeInventory("SevenMilAmmo",30);
				A_GiveInventory("LiberatorMag");
			}
			if(countinv("BossRifle")){
				maxclag=HDMath.MaxInv(self,"BossClip");
				while(
					countinv("SevenMilAmmo")>10 &&  
					countinv("BossClip")<maxclag
				){
					A_TakeInventory("SevenMilAmmo",10);
					A_GiveInventory("BossClip");
				}
			}
		}

		//use the BFG to charge everything
		if(countinv("BFG9k")){
			hdweapon(findinventory("BFG9k")).initializewepstats(true);
			//convert empty to full
			while(
				countinv("HDCellPackEmpty")
				&&!A_JumpIfInventory("HDCellPacks",0,"null")
			){
				A_TakeInventory("HDCellPackEmpty",1);
				A_GiveInventory("HDCellPacks");
			}
			//convert partial to full
			while(
				countinv("HDCellAmmo")
				&&!A_JumpIfInventory("HDCellPacks",0,"null")
			){
				A_TakeInventory("HDCellAmmo",random(4,20));
				A_GiveInventory("HDCellPacks");
			}
			if(countinv("ThunderBuster")){
				hdweapon(findinventory("ThunderBuster")).weaponstatus[TBS_BATTERY]=20;
			}
			if(countinv("Lumberjack")){
				hdweapon(findinventory("Lumberjack")).weaponstatus[1]=20;
			}
			if(countinv("Vulcanette")){
				hdweapon(findinventory("Vulcanette")).weaponstatus[1]=20;
			}
		}else{
			//is there anything that can be done?
			//batteries, how the fuck do they work?
			//miraclessssss
		}

		//reload as much brass as possible and consolidate again
		int addsevenmil=0;
		if(
			countinv("LiberatorRifle")
			&&countinv("FourMilAmmo")>4  
		){    
			int curr7=
				countinv("LiberatorMag")*30
				+countinv("BossClip")*10
				+countinv("SevenMilAmmo");
			int max7=
				HDMath.MaxInv(self,"LiberatorMag")*30
				+HDMath.MaxInv(self,"BossClip")*10
				+HDMath.MaxInv(self,"SevenMilAmmo");
			int rnd=random(1,7);
			int powderunits=max(0,countinv("FourMilAmmo")-rnd);
			int totalbrass=countinv("SevenMilBrass");

			//take recyclables out of guns
			if(
				bossrifle(findinventory("BossRifle"))
			){
				int br=bossrifle(findinventory("BossRifle")).weaponstatus[BOSSS_CHAMBER];
				if(br!=2&&br!=4&&br>0){
					totalbrass++;
					bossrifle(findinventory("BossRifle")).weaponstatus[BOSSS_CHAMBER]=0;
				}
			}
			liberatorrifle libb=liberatorrifle(findinventory("LiberatorRifle"));
			if(libb){
				if(libb.weaponstatus[LIBS_CHAMBER]==1){
					libb.weaponstatus[LIBS_CHAMBER]=0;
					totalbrass++;
				}
				int brasss=libb.weaponstatus[LIBS_BRASS];
				libb.weaponstatus[LIBS_BRASS]=0;
				if(brasss>0)totalbrass+=brasss;
			}
			if(
				zm66assaultrifle(findinventory("zm66assaultrifle"))&&
				zm66assaultrifle(findinventory("zm66assaultrifle")).weaponstatus[0]
				&ZM66F_CHAMBERBROKEN
			){
				zm66assaultrifle(findinventory("zm66assaultrifle")).weaponstatus[0]&=~(
					ZM66F_CHAMBER|ZM66F_CHAMBERBROKEN
				);
				powderunits++;
			}

			//put it all together
			addsevenmil=min(
				max7-curr7,
				powderunits/4,
				totalbrass
			);
			A_TakeInventory("FourMilAmmo",addsevenmil*4+rnd);
			A_SetInventory("SevenMilBrass",totalbrass-addsevenmil);
		}
		//convert spare 776 to Liberator mags
		addsevenmil+=countinv("SevenMilAmmo");
		while(
			addsevenmil>=30      
			&&!A_JumpIfInventory("LiberatorMag",0,"null")
		){
			addsevenmil-=30;
			A_GiveInventory("LiberatorMag");
		}
		//convert spare 776 to clips
		int maxsevenmil=HDMath.MaxInv(self,"SevenMilAmmo");
		while(
			(
				addsevenmil>maxsevenmil
				||countinv("BossRifle")
			)&&(
				addsevenmil>=10      
				&&!A_JumpIfInventory("BossClip",0,"null")
			)
		){
			addsevenmil-=10;
			A_GiveInventory("BossClip");
		}
		//add addsevenmil to spare 776
		A_SetInventory("SevenMilAmmo",addsevenmil);


		//convert spare 9 to pistol and SMG mags
		while(
			countinv("HDPistolAmmo")>=15      
			&&!A_JumpIfInventory("HDPistolMag",0,"null")
		){
			A_TakeInventory("HDPistolAmmo",15);
			A_GiveInventory("HDPistolMag");
		}
		while(
			countinv("HDPistolAmmo")>=30      
			&&!A_JumpIfInventory("HDSMGMag",0,"null")
		){
			A_TakeInventory("HDPistolAmmo",30);
			A_GiveInventory("HDSMGMag");
		}

		//repair *ERPs
		if (countinv("DERPDEAD")){
			A_TakeInventory("DERPDEAD");
			A_GiveInventory("DERPUsable");
		}
		if (countinv("HERPDEAD")){
			A_TakeInventory("HERPDEAD");
			A_GiveInventory("HERPUsable");
		}
	}

}



