// ------------------------------------------------------------
//   Pistol Bullet
// ------------------------------------------------------------

actor HDNineMilNoisemaker:FastProjectile{
	speed 0
	height 1
	radius 1
	damage (0)
	+cannotpush
	states
	{
	spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeVelocity(0,0,256)
		TNT1 A 1
		stop
	death:
		TNT1 A 0
		TNT1 A 0 A_AlertMonsters(860)
		stop
	}
}
actor HDNineMilTrail:IdleDummy{
	states
	{
	spawn:
		TNT1 A 10 nodelay A_PlaySound("weapons/subfwoosh",0,0.02)
		stop
	}
}



// ------------------------------------------------------------
//   Pistol
// ------------------------------------------------------------

actor HDPistolAmmo:Ammo{
	height 16
	radius 8
	scale 0.7
	inventory.pickupmessage "Picked up a 9mm round."
	inventory.maxamount 40
	ammo.backpackmaxamount 80
	ammo.backpackamount 0
	+inventory.ignoreskill
	+cannotpush
	+forcexybillboard
	+rollsprite +rollcenter
	states{
	spawn:
		PBRS A -1
		stop
	}
}

ACTOR HDPistolMag:Ammo
{
	+inventory.ignoreskill
	+cannotpush
	inventory.maxamount 6
	ammo.backpackmaxamount 24
	ammo.backpackamount 0
	inventory.pickupmessage "Picked up a 9mm magazine."
	states
	{
	spawn:
		CLP2 A 0 nodelay A_SpawnItemEx("HD9mPmag",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	}
}
ACTOR HDPistolLoaded:Ammo{
	inventory.maxamount 15
	ammo.backpackmaxamount 15
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
ACTOR HDPistolChamber:Ammo{
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor HDPistolNoMag:InventoryFlag{}
actor HDSecondPistol:Ammo{
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor HDSecondPistolLoaded:Ammo{
	inventory.maxamount 15
	ammo.backpackmaxamount 15
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor HDSecondPistolChamber:Ammo{
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor HDSecondPistolNoMag:InventoryFlag{}

actor HDSpent9mm_
{
	+missile +doombounce +bounceonactors +cannotpush -noteleport +forcexybillboard
	seesound "misc/casing3" scale 0.6
	height 2 radius 2 speed 5
	states
	{
	spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeVelocity(frandom(-1,1),frandom(-8,-9),frandom(-1,1),CVF_RELATIVE)
	spawn2:
		PBRS ABCDEFGH 2
		loop
	death:
		TNT1 A 0 A_ChangeFlag("missile",0)
		TNT1 A 0 A_ChangeFlag("doombounce",0)
		TNT1 A 0 A_Jump (256, 1,1,1,1,2,2,2,2,3,3,4)
		PBRS C -1
		stop
		PBRS G -1
		stop
		PBRS A -1
		stop
		PBRS E -1
		stop
	}
}




// ------------------------------------------------------------
//   SMG
// ------------------------------------------------------------

actor HDSMG:HDWeapon{
	game Doom
	obituary "%o was soaked by %k's pea stream."
	weapon.selectionorder 900
	weapon.slotnumber 2
	weapon.ammotype1 HDSMGLoaded
	weapon.ammotype2 HDSMGMag
	weapon.kickback 30
	weapon.bobrangex 0.3
	weapon.bobrangey 0.6
	weapon.bobspeed 2.5
	scale 0.55
	inventory.pickupmessage "You got the SMG!"
	states{
	select0:
		SMGG A 0
		goto select0small
	deselect0:
		SMGG A 0
		goto deselect0small

	Ready:
		SMGG A 1{
			A_SetCrosshair(21);
			A_TakeInventory("HDSMGRatchet",2);
			A_GiveInventory("IsWeaponShort",1);
			A_GiveInventory("IsWeaponReady",1);
			A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD|WRF_ALLOWZOOM|WRF_ALLOWUSER1|WRF_ALLOWUSER2|WRF_ALLOWUSER3|WRF_ALLOWUSER4);
			A_GiveInventory("NotShot",1);
			if(
				(countinv("NotShot")>469)	//timer
				&&(countinv("HDPistolAmmo")>29)	//have enough loose    
				&&(!A_JumpIfInventory("HDSMGMag",0,"null"))	//not maxed out on mags
			){
				A_GiveInventory("HDSMGMag",1);
				A_TakeInventory("HDPistolAmmo",30);
				A_TakeInventory("NotShot");
			}
		}
		goto readyend
	Altfire:
	Althold:
		goto nope
	Hold:
		TNT1 A 0 A_JumpIfInventory("SMGFullAuto",0,"Fire2")
		TNT1 A 0 A_JumpIfInventory("SMGFullAuto",1,2)
		TNT1 A 0 A_Jump(256,2)
		TNT1 A 0 A_JumpIfInventory("HDSMGRatchet",0,1)
		goto Fire
	HoldEmpty:
		SMGG A 1 A_WeaponReady(WRF_NOFIRE)
		TNT1 A 0 A_Refire
		goto ReadyEnd
	user2:
	firemode:
		"----" A 1{
			if(countinv("SMGFullAuto")>1){A_TakeInventory("SMGFullAuto",2);}  
			else{A_GiveInventory("SMGFullAuto",1);}
			A_WeaponReady(WRF_NOFIRE);
		}
		goto nope
	Fire:
		SMGG A 1
	Fire2:
		TNT1 A 0 A_JumpIfInventory("HDSMGChamber",1,2)
		TNT1 A 0 A_JumpIfInventory("HDSMGLoaded",1,"chamber")
		goto HoldEmpty
		SMGG B 1 A_GunFlash
		SMGG A 1
		TNT1 A 0 A_SpawnItemEx("HDSpent9mm",cos(pitch)*10,0,height-8-sin(pitch)*10,velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_JumpIfInventory("SMGFullAuto",0,2)
		TNT1 A 0 A_JumpIfInventory("SMGFullAuto",1,"Followthrough")
		goto Followthrough
		SMGG A 1
	Followthrough:
		SMGG A 0 A_ReFire
		goto Ready
	Flash:
		SMGG B 0{
			A_GiveInventory("DecoBulleter9f");
			A_ZoomFactor(0.995,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			A_PlaySound("weapons/pistol",CHAN_WEAPON,0.7);
			A_GiveInventory("HDSMGRatchet",1);
			A_TakeInventory("HDSMGChamber");
		}goto EndFlash
	EndFlash:
		TNT1 A 0 A_Jump(CallACS("LightCheck")*5/2,3)
		SMGF A 1 BRIGHT A_Light1
		TNT1 A 0 A_Jump(256,2)
		TNT1 A 1
		TNT1 A 0 A_Light0
		TNT1 A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		TNT1 A 0{
			if(countinv("HDSMGLoaded")>0){    
				A_TakeInventory("HDSMGLoaded",1);
				A_GiveInventory("HDSMGChamber");
			}
		}
		TNT1 AA 1 ACS_NamedExecuteAlways("MuzzleClimb",0,random(5,8),random(4,6),0)
		stop


	unloadchamber:
		SMGG A 0 A_JumpIfInventory("HDSMGChamber",1,1)
		goto nope
		SMGG B 4
		TNT1 A 0 A_TakeInventory("HDSMGChamber",1)
		SMGG B 10 A_SpawnItemEx("HDPistolAmmo",cos(pitch)*10,0,height-8-sin(pitch)*10,velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH)
		goto ReadyEnd
	user4:
	unload:
		SMGG A 0{
			A_GiveInventory("JustUnloading",1);
			if((countinv("HDSMGLoaded")>0)||(countinv("HDSMGNoMag")<1)){return state("unmag");}      
			return state("unloadchamber");
		}
	reload:
		SMGG A 0{
			if(
				(countinv("HDSMGLoaded")==30)
				||(countinv("HDSMGMag")+countinv("HDPistolAmmo")<1)
			){return state("nope");}
			return state("unmag");
		}
	unmag:
		SMGG A 1 offset(0,34){
			A_SetCrosshair(21);
			A_TakeInventory("IsWeaponReady");
		}
		SMGG A 1 offset(5,38) A_TakeInventory("IsWeaponShort")
		SMGG A 1 offset(10,42)
		SMGG B 2 offset(20,46) A_PlaySound("weapons/rifleclick")
		SMGG B 4 offset(30,52){
			ACS_NamedExecuteAlways("MuzzleClimb",0,-4,-3);
			A_PlaySound("weapons/rifleload");
		}
		SMGG B 0{
			if(countinv("HDSMGNoMag")>0){return state("magout");}    
			A_GiveInventory("HDSMGNoMag",1);
			if(
				(countinv("PressingUnload")+countinv("PressingReload")<1)
				||(countinv("HDPistolAmmo")>AmmoCap("HDPistolAmmo")-countinv("HDSMGLoaded"))      
				||(
					(countinv("HDSMGLoaded")==30)
					&&(A_JumpIfInventory("HDSMGMag",0,"null"))
				)
				||(countinv("HDSMGLoaded")<1)
			){
				A_SpawnItemEx("HD9mSmag",12,0,height-12,1,0,-1,0,SXF_SETTARGET);
				return state("magout");
			}return state("pocketmag");
		}
	pocketmag:
		SMGG B 0{
			A_PlaySound("weapons/pocket");
			if(countinv("HDSMGLoaded")==30){A_GiveInventory("HDSMGMag",1);}      
			else{A_GiveInventory("HDPistolAmmo",countinv("HDSMGLoaded"));}
			A_TakeInventory("HDSMGLoaded",countinv("HDSMGLoaded"));
		}
		SMGG BB 7 offset(34,54) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
	magout:
		SMGG B 0{
			if(countinv("JustUnloading")>0){return state("reloadend");}      
			return state("loadmag");
		}

	loadmag:
		SMGG B 0 A_PlayWeaponSound ("weapons/pocket")
		SMGG BB 7 offset(34,54) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		SMGG B 8 offset(34,52) A_PlayWeaponSound ("weapons/pocket")
		SMGG B 12 offset(32,50)
		SMGG B 0{
			if(countinv("HDSMGMag")>0){          
				A_GiveInventory("HDSMGLoaded",30);
				A_TakeInventory("HDSMGMag",1,TIF_NOTAKEINFINITE);
			}else{
				A_TakeInventory("Counter",countinv("Counter"));
				A_GiveInventory("Counter",random(1,30));
				if(countinv("Counter")>countinv("HDPistolAmmo")){          
					A_TakeInventory("Counter",countinv("Counter")-countinv("HDPistolAmmo"));
				}
				A_GiveInventory("HDSMGLoaded",countinv("Counter"));
				A_TakeInventory("HDPistolAmmo",countinv("Counter"),TIF_NOTAKEINFINITE);
			}
			A_TakeInventory("HDSMGNoMag",1);
		}
		SMGG B 0 A_JumpIfInventory("HDSMGChamber",1,5)
	chamber:
		SMGG B 3 offset(32,49) A_PlayWeaponSound("weapons/rifleclick")
		SMGG A 3 offset(32,49)
		SMGG A 2 offset(32,47)
		SMGG B 0{
			A_TakeInventory("HDSMGLoaded",1);
			A_GiveInventory("HDSMGChamber",1);
		}
		SMGG B 8 offset(33,50) A_PlaySound("weapons/rifleload")
		SMGG B 4 offset(32,46) A_PlaySound("weapons/rifleclick2")

	reloadend:
		SMGG B 3 offset(30,52)
		SMGG B 2 offset(20,46)
		SMGG A 1 offset(10,42)
		SMGG A 1 offset(5,38)
		SMGG A 1 offset(0,34)
		SMGG A 0 A_WeaponReady
		goto nope


	zoom:
	user3:
	cannibalize:
		SMGG A 0 A_SetCrosshair(21)
		SMGG A 0 A_TakeInventory("IsWeaponReady")
		SMGG A 0 A_JumpIfInventory("HDPistolMag",1,1)
		goto nope
		SMGG B 4 offset(0,34)
		TNT1 A 0 A_TakeInventory("IsWeaponShort")
		SMGG B 2 offset(0,44)
		SMGG B 2 offset(0,70)

		TNT1 AA 4 A_PlayWeaponSound("weapons/pocket")
		TNT1 A 10 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		TNT1 A 3 A_PlayWeaponSound("weapons/rifleclick2")
		TNT1 AA 2 A_PlayWeaponSound("weapons/rifleclick2")
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		TNT1 AAAAAAAA 1 A_PlayWeaponSound("weapons/rifleclick2")
		TNT1 AA 2 A_PlayWeaponSound("weapons/rifleclick2")
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(4,-2),random(8,-2),0)
		TNT1 AA 3 A_PlayWeaponSound("weapons/rifleclick2")
		TNT1 A 0 A_PlayWeaponSound("weapons/rifleclick")
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(4,-2),random(8,-2),0)

		TNT1 A 0 A_TakeInventory("Counter",countinv("Counter"))
		TNT1 A 0 A_TakeInventory("HDPistolMag",1)
	canniballoop:
		TNT1 A 1{
			if(countinv("Counter")>=15){return state("canniballoopend");}        
			A_GiveInventory("Counter",1);
			if(A_JumpIfInventory("HDPistolAmmo",0,"ready")){
				A_SpawnItemEx("HDPistolAmmo",random(8,12),random(0,-12),24,5,0,0,random(6,12));
				return state("");
			}
			else{
				A_GiveInventory("HDPistolAmmo",1);
				return state("");
			}return state("");
		}loop
	canniballoopend:

		TNT1 A 12 A_PlayWeaponSound("weapons/pocket")
		SMGG B 2 offset(0,70)
		SMGG B 2 offset(0,44)
		SMGG B 4 offset(0,34)
		SMGG A 0 A_WeaponReady
		goto nope
	Spawn:
		TNT1 A 1 nodelay
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("HDSMGPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("HDSMG",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("HDSMGPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop

	}
}
ACTOR HDSMGMag:Ammo
{
	+inventory.ignoreskill
	inventory.maxamount 5
	ammo.backpackmaxamount 18
	ammo.backpackamount 0
	inventory.pickupmessage "Picked up a 30-round 9mm magazine."
	states
	{
	spawn:
		CLP3 A 0 nodelay A_SpawnItemEx("HD9mSmag",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	}
}
actor SMGFullAuto:InventoryFlag{inventory.maxamount 2}
actor HDSMGRatchet:InventoryFlag{inventory.maxamount 3}
actor HDSMGNoMag:InventoryFlag{}
ACTOR HDSMGEmptyMag:HDPistolEmptyMag
{
	states
	{
	spawn:
	death:
		CLP3 B -1
		stop
	}
}
ACTOR HDSMGLoaded:Ammo
{
	inventory.maxamount 30
	ammo.backpackmaxamount 30
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
ACTOR HDSMGChamber:Ammo
{
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}




// ------------------------------------------------------------
//   Pistol
// ------------------------------------------------------------

actor HDPistolFullAuto:Ammo{
	+inventory.undroppable ammo.backpackamount 0
	inventory.maxamount 2 ammo.backpackmaxamount 2
}
actor HDSecondPistolFullAuto:Ammo{
	+inventory.undroppable ammo.backpackamount 0
	inventory.maxamount 2 ammo.backpackmaxamount 2
}
actor HDPistol:HDWeapon
{
	game Doom
	obituary "%o got capped by %k's pea shooter."
	weapon.selectionorder 800
	weapon.slotnumber 2
	weapon.ammotype1 HDPistolLoaded
	weapon.ammotype2 HDPistolMag
	weapon.kickback 30
	weapon.bobrangex 0.1
	weapon.bobrangey 0.6
	weapon.bobspeed 2.5
	weapon.bobstyle normal
	scale 0.65
	inventory.pickupmessage "You got the pistol!"
	states
	{
	select0:
		PISG A 0 A_TakeInventory("HDPistolSelector")
		PISG A 0 A_JumpIfInventory("HDPistolChamber",1,2)
		PISG C 0
		"----" A 1 A_Raise
		"----" A 1 A_Raise(30)
		"----" A 1 A_Raise(30)
		"----" A 1 A_Raise(24)
		"----" A 1 A_Raise(18)
		wait
	deselect0:
		PISG A 0 A_JumpIfInventory("HDPistolChamber",1,2)
		PISG C 0
		"----" AAA 1 A_Lower
		"----" A 1 A_Lower(18)
		"----" A 1 A_Lower(24)
		"----" A 1 A_Lower(30)
		wait
	Ready:
		PISG A 0 A_JumpIfInventory("HDPistolChamber",1,2)
		PISG C 0
		PISG "#" 0{
			A_SetCrosshair(21);
			A_GiveInventory("IsWeaponReady",1);
			A_GiveInventory("IsWeaponPistol",1);
		}
		PISG "#" 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWZOOM|WRF_ALLOWUSER1|WRF_ALLOWUSER2|WRF_ALLOWUSER4)
		goto MagCheck
	MagCheck:
		PISG A 0 A_GiveInventory("NotShot",1)
		PISG A 0 A_JumpIfInventory("HDPistolMag",0,"ReadyEnd")
		PISG A 0 A_JumpIfInventory("NotShot",210,"FillMag")
		goto ReadyEnd
	FillMag:
		PISG A 0 A_TakeInventory("NotShot")
		PISG A 0 A_JumpIfInventory("HDPistolAmmo",15,1)
		goto ReadyEnd
		PISG A 0 A_GiveInventory("HDPistolMag",1)
		PISG A 0 A_TakeInventory("HDPistolAmmo",15)
		goto ReadyEnd
	altfire:
		"----" A 0{
			if(
				(countinv("HDSecondPistol")>0)  
				&&(
					//either already chambered or nothing to chamber
					(countinv("HDPistolChamber")>0)  
					||(countinv("HDPistolLoaded")<1)
				)
			){return state("retainswap");}
			return state("chamber_manual");
		}
	chamber_manual:
		"----" A 0{
			if(countinv("HDPistolChamber")>0){return state("nope");}
			if(countinv("HDPistolLoaded")>0){return state("");}  
			return state("nope");
		}
		PISG B 3 offset(0,34)
		PISG C 4 offset(0,37){
			ACS_NamedExecuteAlways("MuzzleClimb", 0, random(-6,-8), random(-4, -5), 0);
			A_PlaySound("weapons/rifleclick");
			A_TakeInventory("HDPistolLoaded",1);
			A_GiveInventory("HDPistolChamber",1);
		}
		PISG B 3 offset(0,35)
		PISG B 0 A_ReFire
		goto Ready
	althold:
	hold:
		"----" A 1 A_WeaponReady(WRF_NOFIRE)
		"----" A 0 A_Refire
		goto ready
	fire:
		"----" A 0{
			if(countinv("HDPistolChamber")>0){return state("shoot");}    
			else if(countinv("HDPistolLoaded")>0){return state("chamber_manual");}
			else if(countinv("HDSecondPistol")>0){return state("newyorkreload");}
			return state("nope");
		}
	shoot:
		PISG B 1{
			A_ZoomFactor(0.995,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			A_GunFlash;
		}
		PISG C 1 ACS_NamedExecuteAlways("MuzzleClimb",0,random(12,16),random(8,10),0)
		PISG C 0 A_SpawnItemEx("HDSpent9mm",cos(pitch)*12,0,height-7-sin(pitch)*12,velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH)
		PISG C 0 A_GiveInventory("DecoBulleter9")
		PISG C 0 A_JumpIfInventory("HDPistolLoaded",1,"Followthrough")
		PISG C 0 A_PlaySound("weapons/rifleclick",7,0.9)
		goto nope
	Followthrough:
		PISG C 0{
			ACS_NamedExecuteAlways("MuzzleClimb", 0, random(-6,-8), random(-4, -5), 0);
			A_TakeInventory("HDPistolLoaded",1);
			A_GiveInventory("HDPistolChamber",1);
		}
		PISG B 1{
			if(countinv("HDPistolFullAuto")==2){
				A_TakeInventory("IsWeaponReady");
				if((countinv("IsMoving")>5)&&(countinv("Fatigue")<50)){
					A_GiveInventory("Fatigue",8);
				}
				A_GiveInventory("IsMoving",5);
				A_Refire("fire");
			}else{A_Refire;}
		}goto ready
	Flash:
		PISF A 0 ACS_NamedExecuteAlways("MuzzleClimb", 0, random(4,16), random(4, 12), 0)
		goto EndFlash
	EndFlash:
		TNT1 A 0 A_Jump(CallACS("LightCheck")*3/4,3)
		PISF A 1 BRIGHT A_Light1
		TNT1 A 0 A_Jump(256,2)
		TNT1 A 1
		TNT1 A 0 A_PlaySound("weapons/pistol",CHAN_WEAPON,1.0)
		PISF A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		PISF A 0 A_Light0
		PISF A 0 A_TakeInventory("HDPistolChamber",1)
		stop
	HoldEmpty:
		PISG C 1 A_WeaponReady(WRF_NOFIRE)
		PISG C 0 A_Refire
		goto Ready
	user4:
	unload:
		"----" A 0{
			if((countinv("HDPistolLoaded")>0)||(countinv("HDPistolNoMag")<1)){      
				A_GiveInventory("JustUnloading",1);
				return state("unmag");
			}else if(countinv("HDPistolChamber")>0){
				return state("unloadchamber");
			}return state("");
		}
		"----" A 0 A_JumpIfInventory("HDPistolChamber",1,1)
		goto nope
	unloadchamber:
		PISG B 2
		PISG C 2 offset(0,34)
		PISG D 8{
			A_TakeInventory("HDPistolChamber",1);
			A_PlaySound("weapons/rifleclick2");
			A_SpawnItemEx("HDPistolAmmo",cos(pitch*12),0,height-8-sin(pitch)*12,1,2,3,0);
		}
		goto nope
	reload:
		"----" A 0{
			if(
				(countinv("HDPistolLoaded")==15)
				||(countinv("HDPistolMag")+countinv("HDPistolAmmo")<1)
			){return state("nope");}
			return state("unmag");
		}
	unmag:
		"----" A 1 offset(0,34){
			A_SetCrosshair(21);
			A_TakeInventory("IsWeaponReady");
		}
		"----" A 1 offset(1,38)
		"----" A 2 offset(2,42)
		"----" A 3 offset(3,46) A_PlayWeaponSound("weapons/rifleclick")
		"----" A 0{
			if(countinv("HDPistolNoMag")>0){return state("magout");}    
			A_GiveInventory("HDPistolNoMag",1);
			if(
				(countinv("HDPistolLoaded")<1)
				||(countinv("HDPistolAmmo")>AmmoCap("HDPistolAmmo")-countinv("HDPistolLoaded"))      
				||(countinv("PressingUnload")+countinv("PressingReload")<1)
			){
				A_SpawnItemEx("HD9mPmag",12,0,height-12,1,0,-1,0,SXF_SETTARGET);
				return state("magout");
			}
			return state("pocketmag");
		}
	pocketmag:
		"----" A 0{
			A_PlayWeaponSound("weapons/pocket");
			if(A_JumpIfInventory("HDPistolLoaded",0,"null")){A_GiveInventory("HDPistolMag",1);}
			else{A_GiveInventory("HDPistolAmmo",countinv("HDPistolLoaded"));}
			A_TakeInventory("HDPistolLoaded",countinv("HDPistolLoaded"));
		}
		"----" AAA 5 offset(0,46) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		goto magout
	magout:
		"----" A 0{
			if(countinv("JustUnloading")>0){return state("reloadend");}      
			return state("loadmag");
		}

	loadmag:
		"----" A 4 offset(0,46) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		"----" A 0 A_PlayWeaponSound ("weapons/pocket")
		"----" AAA 5 offset(0,46) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		"----" A 3
		"----" A 0{
			if(countinv("HDPistolMag")>0){          
				A_GiveInventory("HDPistolLoaded",15);
				A_TakeInventory("HDPistolMag",1,TIF_NOTAKEINFINITE);
			}else{
				A_TakeInventory("Counter",countinv("Counter"));
				A_GiveInventory("Counter",random(1,15));
				if(countinv("Counter")>countinv("HDPistolAmmo")){          
					A_TakeInventory("Counter",countinv("Counter")-countinv("HDPistolAmmo"));
				}
				A_GiveInventory("HDPistolLoaded",countinv("Counter"));
				A_TakeInventory("HDPistolAmmo",countinv("Counter"),TIF_NOTAKEINFINITE);
			}
			A_TakeInventory("HDPistolNoMag",1);
			A_PlaySound("weapons/rifleclick",CHAN_BODY);
		}
		"----" A 0{
			if(countinv("HDPistolChamber")<1){
				A_TakeInventory("HDPistolLoaded",1);
				A_GiveInventory("HDPistolChamber",1);
				return state("");
			}return state("reloadend");
		}
		PISG A 3 offset(0,48) A_PlaySound("weapons/rifleclick")
		PISG A 2 offset(0,45)
		goto reloadend

	reloadend:
		"----" A 2 offset(3,46)
		"----" A 1 offset(2,42)
		"----" A 1 offset(2,38)
		"----" A 1 offset(1,34)
		"----" A 0 A_WeaponReady
		goto Ready


	zoom:
	user3:
	cannibalize:
		"----" A 0 A_SetCrosshair(21)
		"----" A 0 A_TakeInventory("IsWeaponReady")
		"----" A 0 A_JumpIfInventory("HDSMGMag",1,1)
		goto nope
		"----" A 4 offset(0,34)
		"----" A 2 offset(0,44)
		"----" A 2 offset(0,70)

		"----" AA 4 A_PlayWeaponSound("weapons/pocket")
		"----" A 10 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		"----" A 3 A_PlayWeaponSound("weapons/rifleclick2")
		"----" AA 2 A_PlayWeaponSound("weapons/rifleclick2")
		"----" A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		"----" AAAAAAAA 1 A_PlayWeaponSound("weapons/rifleclick2")
		"----" AA 2 A_PlayWeaponSound("weapons/rifleclick2")
		"----" A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(4,-2),random(8,-2),0)
		"----" AA 3 A_PlayWeaponSound("weapons/rifleclick2")
		"----" A 0 A_PlayWeaponSound("weapons/rifleclick")
		"----" A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(4,-2),random(8,-2),0)

		"----" A 0 A_TakeInventory("Counter",countinv("Counter"))
		"----" A 0 A_TakeInventory("HDSMGMag",1)
	canniballoop:
		"----" A 1{
			if(countinv("Counter")>=30){return state("canniballoopend");}        
			A_GiveInventory("Counter",1);
			if(A_JumpIfInventory("HDPistolAmmo",0,"ready")){
				A_SpawnItemEx("HDPistolAmmo",random(8,12),random(0,-12),24,5,0,0,random(6,12));
				return state("");
			}
			else{
				A_GiveInventory("HDPistolAmmo",1);
				return state("");
			}return state("");
		}loop
	canniballoopend:
		"----" A 8
		"----" A 4 A_PlayWeaponSound("weapons/pocket")
		"----" A 2 offset(0,70)
		"----" A 2 offset(0,44)
		"----" A 4 offset(0,34)
		"----" A 0 A_WeaponReady
		goto nope


	user1:
	altreload:
	retainswap:
		"----" A 0 A_JumpIfInventory("HDSecondPistol",1,"swapfakedeselect")
		goto nope
	swapfakedeselect:
		PISG "#" 0 A_TakeInventory("IsWeaponReady")
		PISG A 0{
			A_TakeInventory("IsWeaponPistol");
			if(countinv("HDPistolChamber")+countinv("HDPistolLoaded")<1)
			{return state("swapfakedeselectu");}
			return state("");
		}
		PISG A 1 A_WeaponOffset(-2,38)
		PISG B 1 A_WeaponOffset(-4,46)
		PISG B 1 A_WeaponOffset(-8,58)
		PISG C 1 A_WeaponOffset(-12,70)
		TNT1 A 4
		goto swappistols
	swapfakedeselectu:
		PISG C 1 A_WeaponOffset(-2,38)
		PISG C 1 A_WeaponOffset(-4,46)
		PISG D 1 A_WeaponOffset(-8,58)
		PISG D 1 A_WeaponOffset(-12,70)
		TNT1 A 4
		goto swappistols
	newyorkreload:
		"----" A 0{
			A_TakeInventory("HDSecondPistol");
			A_SpawnItemEx("HDPistolPickup",0,0,height-12,5*cos(pitch),0,-5*sin(pitch),0,SXF_NOCHECKPOSITION|SXF_SETTARGET);
			return state("swappistols");
		}goto swappistols
	swapfakeselect:
		goto select0
	swappistols:
		TNT1 A 2
		TNT1 A 2{
			A_PlaySound("weapons/pocket");
			A_TakeInventory("Counter");
			if(countinv("HDPistolLoaded")>0){    
				A_GiveInventory("Counter",countinv("HDPistolLoaded"));}
			A_TakeInventory("HDPistolLoaded");
			if(countinv("HDSecondPistolLoaded")>0){    
				A_GiveInventory("HDPistolLoaded",countinv("HDSecondPistolLoaded"));}
			A_TakeInventory("HDSecondPistolLoaded");
			if(countinv("Counter")>0){    
				A_GiveInventory("HDSecondPistolLoaded",countinv("Counter"));}

			A_TakeInventory("Counter");
			if(countinv("HDPistolChamber")>0){    
				A_GiveInventory("Counter");}
			A_TakeInventory("HDPistolChamber");
			if(countinv("HDSecondPistolChamber")>0){    
				A_GiveInventory("HDPistolChamber");}
			A_TakeInventory("HDSecondPistolChamber");
			if(countinv("Counter")>0){    
				A_GiveInventory("HDSecondPistolChamber");}

			A_TakeInventory("Counter");
			if(countinv("HDPistolNoMag")>0){    
				A_GiveInventory("Counter");}
			A_TakeInventory("HDPistolNoMag");
			if(countinv("HDSecondPistolNoMag")>0){    
				A_GiveInventory("HDPistolNoMag");}
			A_TakeInventory("HDSecondPistolNoMag");
			if(countinv("Counter")>0){    
				A_GiveInventory("HDSecondPistolNoMag");}

			A_TakeInventory("Counter");
			if(countinv("HDPistolFullAuto")>0){  
				A_GiveInventory("Counter",countinv("HDPistolFullAuto"));}
			A_TakeInventory("HDPistolFullAuto");
			if(countinv("HDSecondPistolFullAuto")>0){  
				A_GiveInventory("HDPistolFullAuto",countinv("HDSecondPistolFullAuto"));}
			A_TakeInventory("HDSecondPistolFullAuto");
			if(countinv("Counter")>0){  
				A_GiveInventory("HDSecondPistolFullAuto",countinv("Counter"));}
		}goto swapfakeselect
	user2:
	firemode:
		"----" A 1{
			if(countinv("HDPistolFullAuto")==1){
				A_TakeInventory("HDPistolFullAuto");
				A_GiveInventory("HDPistolFullAuto",2);
			}else if(countinv("HDPistolFullAuto")==2){
				A_TakeInventory("HDPistolFullAuto");
				A_GiveInventory("HDPistolFullAuto",1);
			}else{A_TakeInventory("HDPistolFullAuto");}
			A_WeaponReady(WRF_NOFIRE);
		}
		goto nope


	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("HDPistolPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("HDPistol",1,"spawnfresh")
		TNT1 A 0{
			if(countinv("HDSecondPistol",AAPTR_TARGET)){A_GiveInventory("HDPistolSelector",1,AAPTR_TARGET);}
		}
		TNT1 A 0 A_SpawnItemEx("HDPistolPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	}
}



// ------------------------------------------------------------
//   Mags and pickups
// ------------------------------------------------------------

actor HD9mPmag:HDUPK replaces HDPistolMag
{
	var int user_cap;
	states
	{
	spawn:
		CLP2 A 0 A_Stop
		"----" A 0 A_SetUserVar(user_cap,15)
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("HDPistolAmmo",user_cap)
		"----" A 0 A_Jump(256,"spawn2")
	spawn2:
		"----" A -1{
			if(countinv("HDPistolAmmo")<1){
				A_SpawnItemEx("HDPistolEmptyMag",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
				return state("null");
			}
			return state("");
		}
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("HDPistolLoaded",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("HDPistolLoaded",1)
		"----" A 0 A_GiveInventory("HDPistolAmmo",1)
		loop
	give:
		"----" A 0 A_JumpIfInventory("HDPistolAmmo",user_cap,"givemag")
		"----" A 0 A_JumpIfInTargetInventory("HDPistolAmmo",0,"spawn")
		"----" A 0 A_Jump(256,"giveloop")
	giveloop:
		"----" A 0 A_JumpIfInTargetInventory("HDPistolAmmo",0,"spawn")
		"----" A 0 A_GiveToTarget("HDPistolAmmo",1)
		"----" A 0 A_TakeInventory("HDPistolAmmo",1)
		"----" A 0 A_JumpIfInventory("HDPistolAmmo",1,"giveloop")
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	givemag:
		"----" A 0 A_JumpIfInTargetInventory("HDPistolMag",0,"spawn")
		"----" A 0 A_GiveToTarget("HDPistolMag",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor HDPistolPickup:HDUPK replaces Pistol
{
	scale 0.63
	var int user_cap;
	states
	{
	spawn:
		"----" A 0 A_Stop
		"----" A 0 A_SetUserVar(user_cap,15)
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("HDPistolLoaded",user_cap)
		"----" A 0 A_GiveInventory("HDPistolChamber",1)
		"----" A 0 {if(random(0,99)<1){A_GiveInventory("HDPistolFullAuto",random(1,2));}}
		"----" A 0 A_Jump(256,"spawn2")
	spawn2:
		PIST B -1{
			if(countinv("HDPistolFullAuto")>0){
				if(countinv("HDPistolChamber")>0){return state("spawn2fl");}
				else{return state("spawn2f");}
			}else{
				if(countinv("HDPistolChamber")>0){return state("spawn2l");}
			}return state("");
		}
	spawn2f:
		PIST D -1
	spawn2l:
		PIST A -1
	spawn2fl:
		PIST C -1
	takeloop:
		"----" A 0{
			if(countinv("HDPistolLoaded",AAPTR_TARGET)>0){  
				A_GiveInventory("HDPistolLoaded",countinv("HDPistolLoaded",AAPTR_TARGET));
				A_TakeFromTarget("HDPistolLoaded");
			}
			if(countinv("HDPistolChamber",AAPTR_TARGET)>0){  
				A_GiveInventory("HDPistolChamber");
				A_TakeFromTarget("HDPistolChamber");
			}
			if(countinv("HDPistolNoMag",AAPTR_TARGET)>0){  
				A_GiveInventory("HDPistolNoMag");
				A_TakeFromTarget("HDPistolNoMag");
			}
			if(countinv("HDPistolFullAuto",AAPTR_TARGET)>0){  
				A_GiveInventory("HDPistolFullAuto",countinv("HDPistolFullAuto",AAPTR_TARGET));
				A_TakeFromTarget("HDPistolFullAuto");
			}
		}goto spawn2
	give:
		"----" A 0{
			if(countinv("HDSecondPistol",AAPTR_TARGET)+countinv("HDPistol",AAPTR_TARGET)>1)  
				{return state("spawn");}
			if(countinv("HDPistol",AAPTR_TARGET)<1){return state("givegun");}
			return state("givesecondgun");
		}
	givegun:
		"----" A 0{
			A_PlaySound("misc/w_pkup");
			A_GiveToTarget("HDPistol",1);
			if(countinv("HDPistolLoaded")>0){  
				A_GiveToTarget("HDPistolLoaded",countinv("HDPistolLoaded"));
				A_TakeInventory("HDPistolLoaded");
			}
			if(countinv("HDPistolChamber")>0){  
				A_GiveToTarget("HDPistolChamber");
				A_TakeInventory("HDPistolChamber");
			}
			if(countinv("HDPistolNoMag")>0){  
				A_GiveToTarget("HDPistolNoMag");
				A_TakeInventory("HDPistolNoMag");
			}
			if(countinv("HDPistolFullAuto")>0){  
				A_GiveToTarget("HDPistolFullAuto",countinv("HDPistolFullAuto"));
				A_TakeInventory("HDPistolFullAuto");
			}
		}stop
	givesecondgun:
		"----" A 0{
			A_PlaySound("misc/w_pkup");
			A_GiveToTarget("HDSecondPistol",1);
			if(countinv("HDPistolLoaded")>0){  
				A_GiveToTarget("HDSecondPistolLoaded",countinv("HDPistolLoaded"));
				A_TakeInventory("HDPistolLoaded");
			}
			if(countinv("HDPistolChamber")>0){  
				A_GiveToTarget("HDSecondPistolChamber");
				A_TakeInventory("HDPistolChamber");
			}
			if(countinv("HDPistolNoMag")>0){  
				A_GiveToTarget("HDSecondPistolNoMag");
				A_TakeInventory("HDPistolNoMag");
			}
			if(countinv("HDPistolFullAuto")>0){  
				A_GiveToTarget("HDSecondPistolFullAuto",countinv("HDPistolFullAuto"));
				A_TakeInventory("HDPistolFullAuto");
			}
		}stop
	}
}
actor HDAutoPistolPickup:HDPistolPickup
{
	states
	{
	spawn:
		"----" A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_GiveInventory("HDPistolLoaded",15)
		"----" A 0 A_GiveInventory("HDPistolChamber",1)
		"----" A 0 A_GiveInventory("HDPistolFullAuto",1)
		"----" A 0 A_Jump(256,"spawn2")
	}
}
actor HDSemiPistolPickup:HDPistolPickup
{
	states
	{
	spawn:
		"----" A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_GiveInventory("HDPistolLoaded",15)
		"----" A 0 A_GiveInventory("HDPistolChamber",1)
		"----" A 0 A_Jump(256,"spawn2")
	}
}
actor HDEmptyPistolPickup:HDPistolPickup
{
	states
	{
	takeloop:
		PIST A 0 A_Jump(256,"spawn2")
	}
}
actor HD9mSmag:HD9mPmag replaces HDSMGMag
{
	states
	{
	spawn2:
		"----" A -1{
			if(countinv("HDPistolAmmo")<1){
				A_SpawnItemEx("HDSMGEmptyMag",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
				return state("null");
			}
			return state("");
		}
	spawn:
		CLP3 A 0 A_Stop
		"----" A 0 A_SetUserVar(user_cap,30)
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("HDPistolAmmo",user_cap)
		"----" A 0 A_Jump(256,"spawn2")
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("HDSMGLoaded",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("HDSMGLoaded",1)
		"----" A 0 A_GiveInventory("HDPistolAmmo",1)
		loop
	givemag:
		"----" A 0 A_JumpIfInTargetInventory("HDSMGMag",0,"spawn")
		"----" A 0 A_GiveToTarget("HDSMGMag",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor HDSMGPickup:HDUPK
{
	scale 0.55
	var int user_cap;
	states
	{
	spawn2:
		SMGN A -1 A_JumpIfInventory("HDSMGNoMag",1,1)
		SMGN B -1
	spawn:
		SMGN A 0 A_Stop
		"----" A 0 A_SetUserVar(user_cap,30)
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("HDPistolAmmo",user_cap)
		"----" A 0 A_GiveInventory("HDSMGChamber",1)
		"----" A 0 A_Jump(256,"spawn2")
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("HDSMGLoaded",1,1)
		goto take2
		"----" A 0 A_TakeFromTarget("HDSMGLoaded",1)
		"----" A 0 A_GiveInventory("HDPistolAmmo",1)
		loop
	take2:
		"----" A 0 A_JumpIfInTargetInventory("HDSMGNoMag",1,1)
		goto take3
		"----" A 0 A_TakeFromTarget("HDSMGNoMag",1)
		"----" A 0 A_GiveInventory("HDSMGNoMag",1)
	take3:
		"----" A 0 A_JumpIfInTargetInventory("HDSMGChamber",1,1)
		goto takeloop4
		"----" A 0 A_TakeFromTarget("HDSMGChamber",1)
		"----" A 0 A_GiveInventory("HDSMGChamber",1)
	takeloop4:
		"----" A 0 A_JumpIfInTargetInventory("SMGFullAuto",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("SMGFullAuto",1)
		"----" A 0 A_GiveInventory("SMGFullAuto",1)
		loop
	give:
		"----" A 0 A_JumpIfInTargetInventory("HDSMG",1,"spawn")
	givegun:
		"----" A 0 A_PlaySound("misc/w_pkup")
		"----" A 0 A_GiveToTarget("HDSMG",1)
	givegunloop:
		"----" A 0 A_JumpIfInventory("HDPistolAmmo",1,1)
		goto givegun2
		"----" A 0 A_GiveToTarget("HDSMGLoaded",1)
		"----" A 0 A_TakeInventory("HDPistolAmmo",1)
		loop
	givegun2:
		"----" A 0 A_JumpIfInventory("HDSMGNoMag",1,1)
		goto givegun3
		"----" A 0 A_GiveToTarget("HDSMGNoMag",1)
		"----" A 0 A_TakeInventory("HDSMGNoMag",1)
	givegun3:
		"----" A 0 A_JumpIfInventory("HDSMGChamber",1,1)
		goto givegunloop4
		"----" A 0 A_GiveToTarget("HDSMGChamber",1)
		"----" A 0 A_TakeInventory("HDSMGChamber",1)
	givegunloop4:
		"----" A 0 A_JumpIfInventory("SMGFullAuto",1,1)
		goto givegunloopend
		"----" A 0 A_GiveToTarget("SMGFullAuto",1)
		"----" A 0 A_TakeInventory("SMGFullAuto",1)
		loop
	}
}
actor HDSMGDropped:HDSMGPickup
{
	states
	{
	spawn:
		SMGN A 0 A_Stop
		SMGN A 0 A_JumpIfInventory("Clip",1,"spawn2")
		SMGN A 0 A_GiveInventory("Clip",1)
		SMGN A 0 A_GiveInventory("HDPistolAmmo",random(1,30))
		SMGN A 0 A_GiveInventory("HDSMGChamber",1)
		goto spawn2
	}
}
actor HDPistolDropped:HDPistolPickup
{
	states
	{
	spawn:
		PIST A 0 A_Stop
		PIST A 0 A_JumpIfInventory("Clip",1,"spawn2")
		PIST A 0 A_GiveInventory("Clip",1)
		PIST A 0 {if(random(0,99)<1){A_GiveInventory("HDPistolFullAuto",random(1,2));}}
		PIST A 0{
			A_GiveInventory("HDPistolLoaded",random(1,15));
			A_GiveInventory("HDPistolChamber",1);
		}goto spawn2
	}
}


