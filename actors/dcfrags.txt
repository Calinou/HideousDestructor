// ------------------------------------------------------------
//   Hand Grenade
// ------------------------------------------------------------

actor HDFragGrenades : Ring
{
	game Doom
	weapon.selectionorder 803
	weapon.slotnumber 0
	+WEAPON.NO_AUTO_SWITCH
	+weapon.noalert
	+weapon.wimpy_weapon
	+weapon.ammo_optional
	+weapon.alt_ammo_optional
	weapon.bobstyle Alpha
	weapon.bobspeed 2.5
	weapon.bobrangex 0.1
	weapon.bobrangey 0.5
	weapon.ammotype "HDFragGrenadeAmmo"
	weapon.ammotype2 "HDFragGrenadeAmmo"
	weapon.ammogive 0
	weapon.ammogive2 0
	weapon.ammouse 1
	weapon.ammouse2 1
	attacksound "*fist"
	states
	{
	punch:
		PUNF A 0 A_JumpIfInventory("IsFemale",1,3)
		PUNG A 0 A_JumpIfInventory("IsMale",1,2)
		TNT1 A 0
		"----" A 0
		goto super::punch
	select0:
		TNT1 A 0 A_TakeInventory("FragTimer")
		TNT1 A 0 A_TakeInventory("GrenadeForce")
		TNT1 A 0 A_TakeInventory("NotShot")
		TNT1 A 4 A_JumpIfInventory("NulledWeapon",1,1)
		TNT1 A 0 A_TakeInventory("NulledWeapon")
		TNT1 A 8 A_JumpIf(countinv("HDFragGrenadeAmmo")<1,"select2")
	select2:
		FRGG BBBB 0 A_Raise
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,2)
		TNT1 A 1 A_Raise
		loop
		FRGG B 1 A_Raise
		loop
	deselect0:
		TNT1 A 0 A_TakeInventory("GrenadeForce")
		TNT1 A 0 A_JumpIfInventory("SpoonOff",1,"deselectoshi")
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"deselectpinbackin")
		TNT1 A 0 A_TakeInventory("FragTimer")
	deselect2:
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,3)
		TNT1 A 1 A_Lower
		TNT1 A 0 A_Jump(256,2)
		FRGG B 1 A_Lower
		TNT1 AAAA 0 A_Lower
		loop
	deselectpinbackin:
		TNT1 A 8 A_PlayWeaponSound ("weapons/fragpinin")
		FRGG A 0 A_TakeInventory("FragOut")
		FRGG A 0 A_TakeInventory("SpoonOff")
		FRGG A 0 A_TakeInventory("ReallyPull")
	deselectpinbackin2:
		TNT1 A 1 A_Lower
		TNT1 AAAA 0 A_Lower
		loop
	deselectoshi:
		TNT1 A 0 A_TakeInventory("FragOut")
		TNT1 A 0 A_TakeInventory("SpoonOff")
		TNT1 A 0 A_TakeInventory("ReallyPull")
		TNT1 A 0 A_TakeInventory("GrenadeForce")
		TNT1 A 0 A_GiveInventory("GrenadeForce",random(10,20))
		TNT1 A 0 A_GiveInventory("HDGrenadeToss",1)
		FRGG A 12 A_JumpIfHealthLower (1,"deselectpinbackin2")
	deselectoshi2:
		FRGG A 1 A_Lower
		FRGG AAAA 0 A_Lower
		loop
	ready:
		TNT1 A 0 A_JumpifInventory("SpoonOff",1,"cooking")
		TNT1 A 0 A_JumpifInventory("FragOut",1,"pinout")
		TNT1 A 0 A_TakeInventory("GrenadeForce")
		TNT1 A 0 A_TakeInventory("FragTimer")
		TNT1 A 0 A_TakeInventory("ReallyPull")
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,"ready2")
		TNT1 A 1 A_WeaponReady
		goto ready3
	ready2:
		FRGG B 1 A_WeaponReady
		goto ready3
	ready3:
		TNT1 A 0 A_TakeInventory("JustThrew")
		TNT1 A 0 A_TakeInventory("WeaponBusy")
		goto readyend

	pinout:
		FRGG A 0 A_WeaponReady(30)
		TNT1 A 1 A_WeaponReady(16)
		loop
	cooking:
		TNT1 A 1 A_WeaponReady
		FRGG A 0 A_JumpIfInventory("FragTimer",136,"oshi")
		FRGG A 0 A_GiveInventory("FragTimer",1)
		loop

	altfire:
		TNT1 A 0 A_JumpIfInventory("SpoonOff",1,"altidle")
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"startcooking")
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,1)
		goto lunge
	althold:
		TNT1 A 0 A_JumpIfInventory("SpoonOff",1,"altidle")
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"altidle")
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,1)
		goto punch
		TNT1 A 0
		goto startpull
	altidle:
		TNT1 A 0 A_JumpIfInventory("SpoonOff",1,2)
		TNT1 A 0 A_Jump (256,2)
		TNT1 A 0 A_GiveInventory("FragTimer",1)
		TNT1 A 0 A_JumpIfInventory("FragTimer",136,"oshi")
		TNT1 A 1
		TNT1 A 0 A_Refire
		goto ready
	startpull:
		TNT1 A 0 A_JumpifInventory("ReallyPull",26,"endpull")
		FRGG B 1 A_GiveInventory("ReallyPull",1)
		TNT1 A 0 A_Refire
		goto ready
	endpull:
		TNT1 A 0 A_TakeInventory("ReallyPull")
		FRGG B 1 offset(0,34)
		FRGG B 1 offset(0,36)
		FRGG B 1 offset(0,38)
		TNT1 A 6
		TNT1 A 0 A_GiveInventory("FragOut",1)
		TNT1 A 3 A_PlayWeaponSound ("weapons/fragpinout")
		TNT1 A 0 A_Refire
		goto ready
	startcooking:
		TNT1 A 6{
			A_SpawnItemEx("HDFragSpoon",cos(pitch)*4,-1,height-6-sin(pitch)*4,cos(pitch)*cos(angle)*4+velx,cos(pitch)*sin(angle)*4+vely,-sin(pitch)*4+velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_GiveInventory("SpoonOff",1);
			if(getcvar("hd_helptext")){
				A_Print("\cgThe fuze is lit!\n\n\n\n\cgRemember to throw!",4,SMALLFONT);
			}
			A_PlaySound("weapons/fragspoonoff",0,1,0,20);
		}
		TNT1 A 0 A_Refire
		goto ready
	oshi:
		TNT1 A 0 A_GiveInventory("GrenadeForce",random(10,20))
		goto throw
	dontthrow:
		TNT1 A 1
		TNT1 A 0 A_Refire
		goto ready
	fire:
		TNT1 A 0 A_JumpIfInventory("JustThrew",1,"dontthrow")
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"hold2")
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,1)
		goto punch
		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,3)
		FRGG B 1 offset(0,34)
		FRGG B 1 offset(0,36)
		FRGG B 1 offset(0,38)
		TNT1 A 0 A_Refire
		goto ready
	hold:
		TNT1 A 0 A_JumpIfInventory("JustThrew",1,"dontthrow")
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"hold2")
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,1)
		goto punch

		TNT1 A 0 A_JumpIfInventory("GrenadeForce",1,"hold2")
		TNT1 A 8 A_JumpIfInventory("PowerStrength",1,1)
		TNT1 A 0 A_GiveInventory("FragOut",1)
		TNT1 A 3 A_PlayWeaponSound ("weapons/rifleclick")
	hold2:
		TNT1 A 0 A_JumpIfInventory("FragTimer",136,"oshi")
		FRGG E 0 A_JumpIfInventory("GrenadeForce",40,"hold3a")
		FRGG D 0 A_JumpIfInventory("GrenadeForce",30,"hold3a")
		FRGG C 0 A_JumpIfInventory("GrenadeForce",20,"hold3")
		FRGG B 0 A_JumpIfInventory("GrenadeForce",10,"hold3")
		FRGG A 0
		goto hold3
	hold3a:
		FRGG "#" 0 A_GiveInventory("GrenadeForce",1)
	hold3:
		FRGG "#" 0 A_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD)
		FRGG "#" 1 A_GiveInventory("GrenadeForce",1)
		TNT1 A 0 A_JumpIfInventory("SpoonOff",1,2)
		TNT1 A 0 A_Jump (256,2)
		TNT1 A 0 A_GiveInventory("FragTimer",1)
		TNT1 A 0 A_Refire
		goto throw
	throw:
		TNT1 A 0 A_GiveInventory("HDGrenadeToss",1)
		goto followthrough
	followthrough:
		TNT1 A 0 A_TakeInventory("FragOut")
		TNT1 A 0 A_TakeInventory("SpoonOff")
		TNT1 A 0 A_TakeInventory("ReallyPull")
		TNT1 A 0 A_GiveInventory("JustThrew",1)
		FRGG A 1 offset(0,34)
		FRGG A 1 offset(0,38)
		FRGG A 1 offset(0,48)
		FRGG A 1 offset(0,52)
		FRGG A 0 A_Refire
		goto ready
	reload:
		TNT1 A 0 A_JumpIfInventory("GrenadeForce",1,"pinbackin")
		TNT1 A 0 A_JumpIfInventory("FragOut",1,"altpinbackin")
		TNT1 A 0 A_JumpIfInventory("HDFragGrenadeAmmo",1,"Ready")
		goto super::reload
	pinbackin:
		FRGG A 0 A_TakeInventory("GrenadeForce")
		FRGG B 1 offset (0,34)
		FRGG B 1 offset (0,36)
		FRGG B 1 offset (0,38)
	altpinbackin:
		FRGG A 0 A_JumpIfInventory("FragTimer",1,"juststopthrowing")
		TNT1 A 8 A_PlayWeaponSound ("weapons/shotgr")
		FRGG A 0 A_TakeInventory("FragOut")
		FRGG A 0 A_TakeInventory("SpoonOff")
		FRGG A 0 A_TakeInventory("ReallyPull")
		TNT1 A 0 A_Refire("nullhold")
		FRGG B 1 offset (0,38)
		FRGG B 1 offset (0,36)
		FRGG B 1 offset (0,34)
		goto ready
	juststopthrowing:
		TNT1 A 10
		FRGG A 0 A_TakeInventory("GrenadeForce")
		TNT1 A 0 A_Refire
		FRGG B 1 offset (0,38)
		FRGG B 1 offset (0,36)
		FRGG B 1 offset (0,34)
		goto ready
	nullhold:
		TNT1 A 1
		TNT1 A 0 A_Refire("nullhold")
		goto ready
	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("HDFragGrenadePickup",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("HDFragGrenades",1,"spawnfresh")
		TNT1 A 0{
			A_GiveToTarget("HDFragGrenades");
			A_GiveToTarget("DropFrag");
		}stop
	}
}
actor FragOut : InventoryFlag {}
actor SpoonOff : InventoryFlag {}
actor ReallyPull : InventoryFlag
{
	inventory.maxamount 28
}
actor FragTimer : InventoryFlag
{
	inventory.maxamount 140
}
actor GrenadeForce : InventoryFlag
{
	inventory.maxamount 50
}
actor JustThrew : InventoryFlag {}
actor HDFragGrenadeAmmo : Ammo
{
	inventory.icon FRAGA0
	inventory.amount 1
	inventory.maxamount 16
	ammo.backpackamount 0
	ammo.backpackmaxamount 60
	scale 0.3
	+forcexybillboard
	inventory.pickupmessage "Picked up a hand grenade."
	states
	{
	spawn:
		FRAG A 0 nodelay A_SpawnItemEx("FragP",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	}
}
actor HDGrenadeToss:ActionItem{
	states{
	pickup:
		TNT1 A 0{ 
			if(countinv("SpoonOff")<1){A_SpawnItemEx("HDFragSpoon",cos(pitch)*-4,-3,height-6-sin(pitch)*-4,cos(pitch)*cos(angle-random(30,45))*3+velx,cos(pitch)*sin(angle-random(30,45))*3+vely,-sin(pitch+random(10,20))*3+velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
			A_SpawnItemEx("HDFragGrenade",0,0,height-6,cos(pitch)*cos(angle)*4+velx,cos(pitch)*sin(angle)*4+vely,-sin(pitch)*4+velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_TakeInventory("HDFragGrenadeAmmo",1,TIF_NOTAKEINFINITE);
			A_SetInventory("Counter",
				+(100-health)*0.1
			);
			if(countinv("GrenadeForce")>50-countinv("Counter")){
				A_TakeInventory("GrenadeForce",countinv("GrenadeForce")-(50-countinv("Counter")));}
		}stop
	}
}
actor FragP : HDUPK replaces HDFragGrenadeAmmo
{
	scale 0.3 +forcexybillboard
	states
	{
	spawn:
		FRAG A -1 A_Stop
	give:
		"----" A 0 A_JumpIfInTargetInventory("HDFragGrenadeAmmo",0,"spawn")
		"----" A 0 A_PlaySound("weapons/pocket")
		"----" A 0 A_GiveToTarget("HDFragGrenadeAmmo",1)
		stop
	}
}


