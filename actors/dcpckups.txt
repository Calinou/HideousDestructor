//-------------------------------------------------
// Usable items
//-------------------------------------------------
actor PortableHealingItem:RandomSpawner replaces Stimpack{
	dropitem "PortableStimpack" 256 4
	dropitem "PortableMedikitPickup" 256 1
}
actor PortableHealingItemBig:RandomSpawner replaces Medikit{
	dropitem "PortableStimpack" 256 1
	dropitem "PortableMedikitPickup" 256 3
}
actor PortableHealingItemBigger:RandomSpawner replaces Berserk{
	dropitem "PortableBerserkPack" 256 5
	dropitem "BlackArmour" 256 2
	dropitem "HEATAmmo" 256 1
}
actor PortableLiteAmp : HDPickup replaces Infrared
{
	inventory.amount 1
	inventory.maxamount 1
	inventory.interhubamount 1
	inventory.pickupmessage "Light amplification visor."
	inventory.icon PPVIA0
	scale 0.5
	states
	{
	spawn:
		TNT1 A 1 nodelay
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("PortableLiteAmpPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("PortableLiteAmp",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("PortableLiteAmpPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	use:
		TNT1 A 0 A_JumpIfInventory("PortableLiteAmpPower",1,"misuse")
		goto recharge
	recharge:
		TNT1 A 0 A_JumpIfInventory("HDCellPacks",1,"rechargeok")
	rechargeshitty:
		TNT1 A 0 A_JumpIfInventory("HDCellAmmo",1,1)
		goto misuse
		TNT1 A 0 A_JumpIfInventory("PortableLiteAmpPower",0,"misuse")
		TNT1 A 0 A_Jump(28,"misuse")
		TNT1 A 0 A_TakeInventory("HDCellAmmo",1)
		TNT1 A 0 A_GiveInventory("PortableLiteAmpPower",4200)
		loop
	rechargeok:
		TNT1 A 0 A_TakeInventory("HDCellPacks",1)
		TNT1 A 0 A_GiveInventory("PortableLiteAmpPower",84000)
		goto misuse
	misuse:
		TNT1 A 0 A_JumpIfInventory("PowerLightAmpP",1,"disuse")
		TNT1 A 0 A_SetBlend("01 00 00",0.8,16)
		TNT1 A 0 A_TakeInventory("PortableLiteAmpPower",10)
		TNT1 A 0 A_GiveInventory("PowerLightAmpP",1)
		fail
	disuse:
		TNT1 A 0 A_SetBlend("01 00 00",0.8,16)
		TNT1 A 0 A_TakeInventory("PowerLightAmpP",999)
		fail
	}
}
actor PortableLiteAmpPower : InventoryFlag
{
	inventory.amount 42000
	inventory.maxamount 84000
	inventory.interhubamount 84000
}
actor PowerLightAmpP : PowerLightAmp
{
	powerup.duration 0x7FFFFFFF
}
actor PortableLiteAmpExiter : ActionItem
{
	states
	{
	pickup:
		TNT1 A 0 A_SetBlend("01 00 00",0.8,16)
		TNT1 A 0 A_TakeInventory("PowerLightAmpP",999)
		fail
	}
}
actor PortableLiteAmpPickup : HDUPK replaces PortableLiteAmp
{
	scale 0.4
	states
	{
	spawn:
		PVIS B 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("PortableLiteAmpPower",84000)
		"----" A 0 A_Jump(256,"spawn2")
	takeloop:
		"----" A 0{
			if(countinv("PortableLiteAmpPower",AAPTR_TARGET)>0){
				A_GiveInventory("PortableLiteAmpPower",countinv("PortableLiteAmpPower",AAPTR_TARGET));
				A_TakeFromTarget("PortableLiteAmpPower",countinv("PortableLiteAmpPower",AAPTR_TARGET));
			}
		}goto spawn2
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableLiteAmp",1,"spawn")
	givegun:
		"----" A 0 A_PlaySound("weapons/grenopen")
		"----" A 0 A_GiveToTarget("PortableLiteAmp",1)
	givegunloop:
		"----" A 0{
			if(countinv("PortableLiteAmpPower")>0){
				A_GiveToTarget("PortableLiteAmpPower",countinv("PortableLiteAmpPower"));
				A_TakeInventory("PortableLiteAmpPower",countinv("PortableLiteAmpPower"));
			}
		}stop
	}
}




//-------------------------------------------------
// Other Replacements
//-------------------------------------------------

actor PlasmaReplaces : RandomSpawner replaces PlasmaRifle
{
	dropitem "LiberatorRiflePickup" 256 2
	dropitem "LiberatorGrenadeRiflePickup" 256 1
	dropitem "PlasmaPickup" 256 5
}

actor ChaingunReplaces : RandomSpawner replaces Chaingun
{
	dropitem "LiberatorRiflePickup" 256 1
	dropitem "HERPPickup" 256 2
	dropitem "VulcPickup" 256 9
}

actor SSGReplaces : RandomSpawner replaces SuperShotgun
{
	dropitem "BloopMapPickup" 256 2
	dropitem "SlayerPickup" 256 5
}
actor RLReplaces : RandomSpawner replaces RocketLauncher
{
	dropitem "BloopMapPickup" 256 1
	dropitem "RocquetteLauncherPickup" 256 4
}
actor BloopMapPickup
{
	states
	{
	spawn:
		TNT1 A 0 nodelay{
			A_SpawnItemEx("Blooper");
			A_SpawnItemEx("RocketBigPickup",3);
			A_SpawnItemEx("RocP",5);
		}stop
	}
}


//-------------------------------------------------
// Keys
//-------------------------------------------------

actor HDRedKey:HDHPK replaces RedCard{
	+wallsprite
	scale 0.4
	radius 20
	states{
	spawn:
		RKEY A 0 A_Stop
	spawn1:
		"####" ABABABAB 2
		"####" ABABABABABABABAB 3
		"####" ABABAB 6
	spawn2:
		"----" A 1 A_SetTics(random(1,1000))
	spawn3:
		"####" AB 1 A_SetTics(random(1,5))
		"----" A 0 A_Jump(16,"spawn2")
		loop
	grab:
		"----" A 0{
			A_FaceTarget(0,0);
			pitch=random(0,-3);
		}
		goto super::grab
	give:
		"----" A 0{
			A_GiveToTarget("RedCard",1);
			A_GiveInventory("RedCard",1,AAPTR_PLAYER1);
			A_GiveInventory("RedCard",1,AAPTR_PLAYER2);
			A_GiveInventory("RedCard",1,AAPTR_PLAYER3);
			A_GiveInventory("RedCard",1,AAPTR_PLAYER4);
			A_GiveInventory("RedCard",1,AAPTR_PLAYER5);
			A_GiveInventory("RedCard",1,AAPTR_PLAYER6);
			A_GiveInventory("RedCard",1,AAPTR_PLAYER7);
			A_GiveInventory("RedCard",1,AAPTR_PLAYER8);
			A_Log("\crRED\c- local area clearance code downloaded.");
		}
	beep:
		"----" A 0{
			A_PlaySound("misc/i_pkup",0,1,0,0);
			A_Stop();
		}goto spawn1
	}
}
actor HDBlueKey:HDRedKey replaces BlueCard{
	states{
	spawn:
		BKEY A 0 A_Stop
		goto spawn1
	give:
		"----" A 0{
			A_GiveToTarget("BlueCard",1);
			A_GiveInventory("BlueCard",1,AAPTR_PLAYER1);
			A_GiveInventory("BlueCard",1,AAPTR_PLAYER2);
			A_GiveInventory("BlueCard",1,AAPTR_PLAYER3);
			A_GiveInventory("BlueCard",1,AAPTR_PLAYER4);
			A_GiveInventory("BlueCard",1,AAPTR_PLAYER5);
			A_GiveInventory("BlueCard",1,AAPTR_PLAYER6);
			A_GiveInventory("BlueCard",1,AAPTR_PLAYER7);
			A_GiveInventory("BlueCard",1,AAPTR_PLAYER8);
			A_Log("\cnBLUE\c- local area clearance code downloaded.");
		}goto beep
	}
}
actor HDYellowKey:HDRedKey replaces YellowCard{
	states{
	spawn:
		YKEY A 0 A_Stop
		goto spawn1
	give:
		"----" A 0{
			A_GiveToTarget("YellowCard",1);
			A_GiveInventory("YellowCard",1,AAPTR_PLAYER1);
			A_GiveInventory("YellowCard",1,AAPTR_PLAYER2);
			A_GiveInventory("YellowCard",1,AAPTR_PLAYER3);
			A_GiveInventory("YellowCard",1,AAPTR_PLAYER4);
			A_GiveInventory("YellowCard",1,AAPTR_PLAYER5);
			A_GiveInventory("YellowCard",1,AAPTR_PLAYER6);
			A_GiveInventory("YellowCard",1,AAPTR_PLAYER7);
			A_GiveInventory("YellowCard",1,AAPTR_PLAYER8);
			A_Log("\cfYELLOW\c- local area clearance code downloaded.");
		}goto beep
	}
}

actor HDRedSkull : HDHPK replaces RedSkull
{
	scale 0.6
	radius 20
	renderstyle translucent
	alpha 0.75
	states
	{
	spawn:
		RSKU A 0 A_Stop
		"----" A 0 A_Jump(256,"spawn2")
	spawn2:
		RSKU AB 1 light("REDKEY") A_SetTics(random(1,6))
		loop
	give:
		"----" A 0 A_JumpIfInTargetInventory("RedSkull",1,"spawn")
		"----" A 0 A_GiveToTarget("RedSkull",1)
		"----" A 0 A_Log("\crRED\c-, the way of the blood shed for you in vain.")
	effect:
		"----" A 0 A_PlaySound("brain/cube",0,1,0,0)
		"----" A 0 A_Stop
		"----" A 0 A_GiveToTarget("Health",10)
		"----" A 0 A_DamageTarget(1)
		"####" "#####" 1 A_SpawnItemEx("HDSmoke",0,0,0,random(4,0),random(-2,2),random(1,3),0,SXF_NOCHECKPOSITION)
		"----" A 0 A_GiveToTarget("WoundCount",1)
		"----" A 0 A_GiveToTarget("IsMoving",99)
		"----" A 0 A_Jump(256,"spawn")
	}
}
actor HDBlueSkull : HDRedSkull replaces BlueSkull
{
	states
	{
	give:
		"----" A 0 A_JumpIfInTargetInventory("BlueSkull",1,"spawn")
		"----" A 0 A_GiveToTarget("BlueSkull",1)
		"----" A 0 A_Log("\cnBLUE\c-, the way of the heaven forever lost to you.")
		goto effect
	spawn2:
		BSKU AB 1 light("HEALTHPOTION") A_SetTics(random(1,3))
		loop
	}
}
actor HDYellowSkull : HDRedSkull replaces YellowSkull
{
	states
	{
	give:
		"----" A 0 A_JumpIfInTargetInventory("YellowSkull",1,"spawn")
		"----" A 0 A_GiveToTarget("YellowSkull",1)
		"----" A 0 A_Log("\cfYELLOW\c-, the way of the gold that has lured all mankind to death.")
		goto effect
	spawn2:
		YSKU AB 1 light("YELLOWKEY") A_SetTics(random(1,3))
		loop
	}
}

actor HDMap : HDUPK replaces Allmap
{
	scale 0.3
	states
	{
	give:
		PMAP A 0{
			A_GiveToTarget("MapRevealer",1);
			A_Log("\c-Local area map downloaded.");
			A_PlaySound("misc/i_pkup",0,1,0,0);
		}//fallthrough to spawn
	spawn:
		PMAP A 0 A_Stop
		PMAP A 0 A_Jump(256,"a","b","c","d")
	a:
		PMAP AE 1 A_SetTics(random(1,3))
		"----" A 0 A_Jump(4,"spawn")
		loop
	b:
		PMAP BF 1 A_SetTics(random(1,3))
		"----" A 0 A_Jump(4,"spawn")
		loop
	c:
		PMAP CG 1 A_SetTics(random(1,3))
		"----" A 0 A_Jump(4,"spawn")
		loop
	d:
		PMAP DH 1 A_SetTics(random(1,3))
		"----" A 0 A_Jump(4,"spawn")
		loop
	}
}


actor HelpScreen:ActionItem{
	states{
	pickup:
		TNT1 A 0 A_Print("Blood on floor means\nyou're \crbleeding\c- to death.\n\nUse \cnmedikits\c- to stop \crbleeding\c-\nand \cnstimpacks\c- to slow it down.\n\nHit the \cdreload\c- key to reload.\n\nTap or hold the \cduse/open door\c- key to pick\nup things and kick corpses.\n\nHold the \cdjump\c- key in front of a \nlow ledge to climb over it.\n\nHold the \cdrun/walk\c- key to run.\n\nStop moving and hold the \cduse/open door\c- \nkey to view all inventory.\n\nDon't forget to bind \cdfire mode\c-, \cdunload\c- and\n\cdsecondary reload\c-! (read the manual too!)")
		fail
	}
}
