

//-------------------------------------------------
//    Usable items
//-------------------------------------------------

actor PortableBerserkPack : HDPickup
{
	inventory.amount 1
	inventory.maxamount 8
	inventory.interhubamount 8
	inventory.icon PPSTA0
	inventory.pickupsound "misc/p_pkup"
	inventory.pickupmessage "Picked up a berserk pack."
	states
	{
	spawn:
		TNT1 A 1
		TNT1 A 0 A_SpawnItemEx("PortableBerserkPackPickup",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	use:
		TNT1 A 0 A_JumpIfInventory("UsingMeds",1,2)
		TNT1 A 0 ACS_NamedExecuteAlways("UseMeds", 0, 3)
		stop
		TNT1 A 0
		fail
	}
}
actor PortableBerserkPackPickup : HDUPK replaces PortableBerserkPack
{
	xscale 0.32 yscale 0.37
	states
	{
	spawn:
		PSTR A -1 A_Stop
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableBerserkPack",0,"spawn")
		"----" A 0 A_GiveToTarget("PortableBerserkPack",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor PortableBerserkPackBigPickup : HDUPK replaces Berserk
{
	xscale 0.42 yscale 0.36
	states
	{
	spawn:
		PSTR A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_GiveInventory("PortableBerserkPack",4)
		goto spawn2
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableBerserkPack",0,"spawn")
		"----" A 0 A_Jump(256,"giveloop")
	giveloop:
		"----" A 0 A_GiveToTarget("PortableBerserkPack",1)
		"----" A 0 A_TakeInventory("PortableBerserkPack",1)
		"----" A 0 A_JumpIfInventory("PortableBerserkPack",1,"give")
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor PortableMedikit : HDPickup
{
	inventory.amount 1
	inventory.maxamount 8
	inventory.interhubamount 8
	inventory.pickupmessage "Picked up a medikit."
	inventory.icon PMEDA0
	states
	{
	spawn:
		TNT1 A 1
		TNT1 A 0 A_SpawnItemEx("PortableMedikitSingle",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	use:
		TNT1 A 0 A_JumpIfInventory("WoundCount",1,2)
		TNT1 A 0 A_JumpIfHealthLower(76, 1)
		fail
		TNT1 A 0 A_JumpIfInventory("UsingMeds",1,2)
		TNT1 A 0 ACS_NamedExecuteAlways("UseMeds",0,2)
		stop
		TNT1 A 0
		fail
	}
}
actor PortableMedikitSingle : HDUPK replaces PortableMedikit
{
	scale 0.4
	states
	{
	spawn:
		MEDI A -1 A_Stop
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableMedikit",0,"spawn")
		"----" A 0 A_GiveToTarget("PortableMedikit",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor PortableMedikitPickup : HDUPK
{
	xscale 0.51 yscale 0.39
	states
	{
	spawn:
		MEDI A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_GiveInventory("PortableMedikit",2)
		goto spawn2
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableMedikit",0,"spawn")
		"----" A 0 A_Jump(256,"giveloop")
	giveloop:
		"----" A 0 A_GiveToTarget("PortableMedikit",1)
		"----" A 0 A_TakeInventory("PortableMedikit",1)
		"----" A 0 A_JumpIfInventory("PortableMedikit",1,"give")
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor PortableStimpack : HDPickup
{
	inventory.amount 1
	inventory.maxamount 8
	inventory.interhubamount 8
	inventory.pickupmessage "Picked up a stimpack."
	inventory.icon PSTIA0
	states
	{
	spawn:
		TNT1 A 1
		TNT1 A 0 A_SpawnItemEx("PortableStimPick",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	use:
		TNT1 A 0 A_JumpIfHealthLower(76, 1)
		fail
		TNT1 A 0 A_JumpIfInventory("UsingMeds",1,2)
		TNT1 A 0 ACS_NamedExecuteAlways("UseMeds", 0, 1)
		stop
		TNT1 A 0
		fail
	}
}
actor PortableStimPick : HDUPK replaces PortableStimpack
{
	scale 0.37
	states
	{
	spawn:
		STIM A -1 A_Stop
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableStimpack",0,"spawn")
		"----" A 0 A_GiveToTarget("PortableStimpack",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor PortableHealingItem : RandomSpawner replaces Stimpack
{
	dropitem "PortableStimpack" 256 3
	dropitem "PortableMedikit" 256 1
}
actor PortableHealingItemBig : RandomSpawner replaces Medikit
{
	dropitem "PortableStimpack" 256 1
	dropitem "PortableMedikitPickup" 256 3
}
actor PortableLiteAmp : HDPickup replaces Infrared
{
	inventory.amount 1
	inventory.maxamount 1
	inventory.interhubamount 1
	inventory.pickupmessage "Light amplification visor."
	inventory.icon PPVIA0
	scale 0.5
	states
	{
	spawn:
		TNT1 A 1 nodelay
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("PortableLiteAmpPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("PortableLiteAmp",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("PortableLiteAmpPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	use:
		TNT1 A 0 A_JumpIfInventory("PortableLiteAmpPower",1,"misuse")
		goto recharge
	recharge:
		TNT1 A 0 A_JumpIfInventory("HDCellPacks",1,"rechargeok")
	rechargeshitty:
		TNT1 A 0 A_JumpIfInventory("HDCellAmmo",1,1)
		goto misuse
		TNT1 A 0 A_JumpIfInventory("PortableLiteAmpPower",0,"misuse")
		TNT1 A 0 A_Jump(28,"misuse")
		TNT1 A 0 A_TakeInventory("HDCellAmmo",1)
		TNT1 A 0 A_GiveInventory("PortableLiteAmpPower",4200)
		loop
	rechargeok:
		TNT1 A 0 A_TakeInventory("HDCellPacks",1)
		TNT1 A 0 A_GiveInventory("PortableLiteAmpPower",84000)
		goto misuse
	misuse:
		TNT1 A 0 A_JumpIfInventory("PowerLightAmpP",1,"disuse")
		TNT1 A 0 A_SetBlend("01 00 00",0.8,16)
		TNT1 A 0 A_TakeInventory("PortableLiteAmpPower",10)
		TNT1 A 0 A_GiveInventory("PowerLightAmpP",1)
		fail
	disuse:
		TNT1 A 0 A_SetBlend("01 00 00",0.8,16)
		TNT1 A 0 A_TakeInventory("PowerLightAmpP",999)
		fail
	}
}
actor PortableLiteAmpPower : InventoryFlag
{
	inventory.amount 42000
	inventory.maxamount 84000
	inventory.interhubamount 84000
}
actor PowerLightAmpP : PowerLightAmp
{
	powerup.duration 0x7FFFFFFF
}
actor PortableLiteAmpExiter : ActionItem
{
	states
	{
	pickup:
		TNT1 A 0 A_SetBlend("01 00 00",0.8,16)
		TNT1 A 0 A_TakeInventory("PowerLightAmpP",999)
		fail
	}
}
actor PortableLiteAmpPickup : HDUPK replaces PortableLiteAmp
{
	scale 0.4
	states
	{
	spawn:
		PVIS B 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("PortableLiteAmpPower",84000)
		"----" A 0 A_Jump(256,"spawn2")
	takeloop:
		"----" A 0{
			if(countinv("PortableLiteAmpPower",AAPTR_TARGET)>0){          
				A_GiveInventory("PortableLiteAmpPower",countinv("PortableLiteAmpPower",AAPTR_TARGET));
				A_TakeFromTarget("PortableLiteAmpPower",countinv("PortableLiteAmpPower",AAPTR_TARGET));
			}
		}goto spawn2
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableLiteAmp",1,"spawn")
	givegun:
		"----" A 0 A_PlaySound("weapons/grenopen")
		"----" A 0 A_GiveToTarget("PortableLiteAmp",1)
	givegunloop:
		"----" A 0{
			if(countinv("PortableLiteAmpPower")>0){
				A_GiveToTarget("PortableLiteAmpPower",countinv("PortableLiteAmpPower"));
				A_TakeInventory("PortableLiteAmpPower",countinv("PortableLiteAmpPower"));
			}
		}stop
	}
}

ACTOR HDRadSuit : RadSuit
{
	Powerup.Duration -0x7FFFFFFF
	+inventory.persistentpower
}
actor PortableRadsuit : HDPickup
{
	inventory.amount 1
	inventory.maxamount 2
	inventory.interhubamount 2
	inventory.pickupmessage "Radiation shielding suit."
	inventory.pickupsound "weapons/pocket"
	inventory.icon SUITB0
	states
	{
	spawn:
		TNT1 A 1
		TNT1 A 0 A_SpawnItemEx("PortableRadsuitPickup",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	use:
		TNT1 A 0{
			if(countinv("PowerIronFeet")<1){
				A_GiveInventory("HDRadSuit");
			}else{
				A_SpawnItemEx("PortableRadsuitSingle",0,0,height/2,2,0,4);
				A_TakeInventory("PowerIronFeet");
				A_TakeInventory("HDRadSuit");
				A_TakeInventory("PortableRadsuit",1);
			}
			A_SetBlend("00 00 00",1,6,"00 00 00");
			A_PlaySound("weapons/pocket");
			A_ChangeVelocity(0,0,2);
			return state("");
		}fail
	}
}
actor PortableRadsuitSingle : HDUPK replaces PortableRadsuit
{
	states
	{
	spawn:
		SUIT A -1 A_Stop
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableRadsuit",0,"spawn")
		"----" A 0 A_GiveToTarget("PortableRadsuit",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor PortableRadsuitPickup : HDUPK replaces RadSuit
{
	states
	{
	spawn:
		SUIT A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_GiveInventory("PortableMedikit",2)
		goto spawn2
	give:
		"----" A 0 A_JumpIfInTargetInventory("PortableRadsuit",0,"spawn")
		"----" A 0 A_Jump(256,"giveloop")
	giveloop:
		"----" A 0 A_GiveToTarget("PortableRadsuit",1)
		"----" A 0 A_TakeInventory("PortableRadsuit",1)
		"----" A 0 A_JumpIfInventory("PortableRadsuit",1,"giveloop")
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}



//-------------------------------------------------
//    Other Replacements
//-------------------------------------------------

actor PlasmaReplaces : RandomSpawner replaces PlasmaRifle
{
	dropitem "LiberatorRiflePickup" 256 2
	dropitem "LiberatorGrenadeRiflePickup" 256 1
	dropitem "PlasmaPickup" 256 5
}

actor ChaingunReplaces : RandomSpawner replaces Chaingun
{
	dropitem "LiberatorRiflePickup" 256 1
	dropitem "HERPPickup" 256 2
	dropitem "VulcPickup" 256 9
}

actor SSGReplaces : RandomSpawner replaces SuperShotgun
{
	dropitem "BloopMapPickup" 256 2
	dropitem "SlayerPickup" 256 5
}
actor RLReplaces : RandomSpawner replaces RocketLauncher
{
	dropitem "BloopMapPickup" 256 1
	dropitem "RocquetteLauncherPickup" 256 4
}
actor BloopMapPickup
{
	states
	{
	spawn:
		TNT1 A 0 nodelay{
			A_SpawnItemEx("Blooper");
			A_SpawnItemEx("RocketBigPickup",3);
			A_SpawnItemEx("RocP",5);
		}stop
	}
}



//-------------------------------------------------
//    Medical Station
//-------------------------------------------------

actor MedStationJuice : Ammo{
	inventory.maxamount 30
	ammo.backpackmaxamount 30
	ammo.backpackamount 0 +inventory.untossable
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor MedStation:HDUPK{
	scale 0.4
	maxtargetrange 56
	bloodcolor "ff d8 22"
	painchance 255
	mass 10000
	health 100
	height 32
	radius 10
	states
	{
	spawn:
		MEST F 0 A_Stop
		MEST F 0 A_JumpIfInventory("Clip",1,"spawn1")
		MEST F 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),2)
		MEST F 0 A_GiveInventory("MedStationJuice",20)
		goto spawn1
		MEST F 0 A_JumpIfInTargetInventory("MedStationJuice",1,"takeloop")
		MEST F -1 A_GiveInventory("NotShot",1)
	takeloop:
		MEST F 0 A_JumpIfInTargetInventory("MedStationJuice",1,1)
		goto spawn1
		MEST F 0 A_TakefromTarget("MedStationJuice",1)
		MEST F 0 A_GiveInventory("MedStationJuice",1)
		loop
	spawn1:
		MEST F 30 A_JumpIfInventory("NotShot",1,"spawn2")
		MEST F 0 A_PlaySound("weapons/vulcanup")
		MEST EEDCAB 4 A_PlaySound("derp/crawl",CHAN_AUTO)
		MEST ABABABABAB 2
		goto spawnready
	spawnready:
		MEST A 0 A_JumpIfInventory("MedStationJuice",1,2)
		MEST A 0 A_Jump(256,"inactive")
		MEST B 0 A_ClearTarget
		MEST A 25
		MEST B 10 A_Look
		loop
	pain:
		MEST A 4
		goto spawn2
	active:
	inactive:
		MEST "#" 10 A_JumpIfInventory("NotShot",1,"spawnpickup")
		MEST F 0{
			A_UnsetSolid;
			A_GiveInventory("NotShot",1);
			A_PlaySound("weapons/vulcandown");
		}
		MEST ACDE 3 A_PlaySound("derp/crawl",CHAN_AUTO)
		MEST F -1
	spawnpickup:
		goto super::inactive
	give:
		MEST F 0 A_JumpIfInTargetInventory("MedDeployer",1,"spawn")
		MEST F 0 A_PlaySound("weapons/pocket")
		MEST F 0 A_GiveToTarget("MedDeployer",1)
		MEST F 0 A_JumpIfInventory("MedStationJuice",0,1)
		goto giveloop
		MEST F 0{
			A_SpawnItemEx("HDCellPacks",8,0,32);
			A_SpawnItemEx("PortableStimpack",4,2,32);
			A_SpawnItemEx("PortableStimpack",5,1,32);
			A_SpawnItemEx("PortableMedikit",7,-1,32);
		}stop
	giveloop:
		MEST F 0{
			if(countinv("MedStationJuice")>0){
				A_GiveToTarget("MedStationJuice",countinv("MedStationJuice"));
				A_TakeInventory("MedStationJuice");
			}
		}stop
	see:
		MEST B 10 A_JumpIfInTargetLOS(1,36,JLOSF_DEADNOJUMP,56)
		goto spawnready
		MEST B 10 A_JumpIfInTargetInventory("IsMoving",1,"spawnready")
		goto heelz
	heelz:
		MEST B 0 A_JumpIfInTargetInventory("IsHurt",1,"reallyheelz")
		MEST B 10 A_JumpIfInTargetInventory("WoundCount",1,"reallyheelz")
		goto spawnready
	reallyheelz:
		MEST B 10 A_PlaySound("misc/i_pkup",CHAN_VOICE)
		MEST B 3 A_TakeInventory("MedStationJuice",1)
		MEST ABABABABABABABAB 2 A_PlaySound("derp/crawl",CHAN_AUTO)
		MEST A 10 A_JumpIfInTargetLOS(1,36,JLOSF_DEADNOJUMP,56)
		goto spawnready
		MEST A 10{
			A_GiveToTarget("RegenBers",8);
			A_GiveToTarget("RegenStims",4);
			A_GiveToTarget("Fatigue",56);
			A_GiveToTarget("StimInstaUser",1);
			if(random(1,4)<2){A_TakeFromTarget("LethalDamage",random(1,2));}
			A_GiveToTarget("HDFireEnder",3);
			if(countinv("woundcount",AAPTR_TARGET)>0){A_TakeFromTarget("WoundCount",8);}
			else{A_GiveToTarget("RegenStims",8);}
		}goto spawnready
	}
}
actor MedDeployer : HDPickup
{
	inventory.pickupmessage "Picked up a medical station kit."
	+inventory.fancypickupsound
	inventory.amount 1
	inventory.maxamount 2
	inventory.interhubamount 2
	inventory.icon MEDSTEX
	states
	{
	use:
		TNT1 A 0 A_JumpIfInventory("MedStationJuice",1,"deploy")
		TNT1 A 0 A_JumpIfInventory("PortableMedikit",1,2)
		TNT1 A 0 A_Log("The medical station requires 1 medikit, 2 stimpacks and 1 cell pack to deploy. You need a medikit!")
		fail
		TNT1 A 0 A_JumpIfInventory("PortableStimpack",2,2)
		TNT1 A 0 A_Log("The medical station requires 1 medikit, 2 stimpacks and 1 cell pack to deploy. You need more stimpacks!")
		fail
		TNT1 A 0 A_JumpIfInventory("HDCellPacks",1,2)
		TNT1 A 0 A_Log("The medical station requires 1 medikit, 2 stimpacks and 1 cell pack to deploy. You need a cell!")
		fail
		TNT1 A 0 A_TakeInventory("PortableMedikit",1,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_TakeInventory("PortableStimpack",2,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_TakeInventory("HDCellPacks",1,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("MedStationJuice",999)
	deploy:
		TNT1 A 0 A_SpawnItemEx("MedStation",12,0,12, 1,0,2, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_SETTARGET)
		stop
	spawn:
		TNT1 A 1 nodelay
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("MedStation",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("MedDeployer",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("MedStation",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	}
}


//-------------------------------------------------
//    Keys
//-------------------------------------------------

actor HDRedKey : HDUPK replaces RedCard
{
	scale 0.4
	translation "176:191=96:111"
	states
	{
	spawn:
		RKEY A 0 A_Stop
		RKEY ABABABAB 2
		RKEY ABABABABABABABABAABBAABBAABB 3
	spawn2:
		RKEY A 1 A_SetTics(random(1,1000))
	spawn3:
		RKEY AB 1 A_SetTics(random(1,5))
		TNT1 A 0 A_Jump(16,"spawn2")
		loop
	give:
		RKEY A 0 A_JumpIfInTargetInventory("RedCard",1,"spawn")
		RKEY A 0 A_GiveToTarget("RedCard",1)
		RKEY A 0 A_GiveInventory("RedCard",1,AAPTR_PLAYER1)
		RKEY A 0 A_GiveInventory("RedCard",1,AAPTR_PLAYER2)
		RKEY A 0 A_GiveInventory("RedCard",1,AAPTR_PLAYER3)
		RKEY A 0 A_GiveInventory("RedCard",1,AAPTR_PLAYER4)
		RKEY A 0 A_GiveInventory("RedCard",1,AAPTR_PLAYER5)
		RKEY A 0 A_GiveInventory("RedCard",1,AAPTR_PLAYER6)
		RKEY A 0 A_GiveInventory("RedCard",1,AAPTR_PLAYER7)
		RKEY A 0 A_GiveInventory("RedCard",1,AAPTR_PLAYER8)
		RKEY A 0 A_Log("\crRED\c- local area clearance code downloaded.")
	beep:
		RKEY A 0 A_PlaySound("misc/i_pkup",0,1,0,0)
		goto spawn
	}
}
actor HDBlueKey : HDRedKey replaces BlueCard
{
	translation "176:191=96:111","32:47=200:207"
	states
	{
	give:
		TNT1 A 0 A_JumpIfInventory("BlueCard",1,"spawn")
		TNT1 A 0 A_GiveToTarget("BlueCard",1)
		TNT1 A 0 A_GiveInventory("BlueCard",1,AAPTR_PLAYER1)
		TNT1 A 0 A_GiveInventory("BlueCard",1,AAPTR_PLAYER2)
		TNT1 A 0 A_GiveInventory("BlueCard",1,AAPTR_PLAYER3)
		TNT1 A 0 A_GiveInventory("BlueCard",1,AAPTR_PLAYER4)
		TNT1 A 0 A_GiveInventory("BlueCard",1,AAPTR_PLAYER5)
		TNT1 A 0 A_GiveInventory("BlueCard",1,AAPTR_PLAYER6)
		TNT1 A 0 A_GiveInventory("BlueCard",1,AAPTR_PLAYER7)
		TNT1 A 0 A_GiveInventory("BlueCard",1,AAPTR_PLAYER8)
		RKEY A 0 A_Log("\cnBLUE\c- local area clearance code downloaded.")
		goto beep
	}
}
actor HDYellowKey : HDRedKey replaces YellowCard
{
	translation "176:191=96:111","32:47=64:79"
	states
	{
	give:
		TNT1 A 0 A_JumpIfInventory("YellowCard",1,"spawn")
		TNT1 A 0 A_GiveToTarget("YellowCard",1)
		TNT1 A 0 A_GiveInventory("YellowCard",1,AAPTR_PLAYER1)
		TNT1 A 0 A_GiveInventory("YellowCard",1,AAPTR_PLAYER2)
		TNT1 A 0 A_GiveInventory("YellowCard",1,AAPTR_PLAYER3)
		TNT1 A 0 A_GiveInventory("YellowCard",1,AAPTR_PLAYER4)
		TNT1 A 0 A_GiveInventory("YellowCard",1,AAPTR_PLAYER5)
		TNT1 A 0 A_GiveInventory("YellowCard",1,AAPTR_PLAYER6)
		TNT1 A 0 A_GiveInventory("YellowCard",1,AAPTR_PLAYER7)
		TNT1 A 0 A_GiveInventory("YellowCard",1,AAPTR_PLAYER8)
		RKEY A 0 A_Log("\cfYELLOW\c- local area clearance code downloaded.")
		goto beep
	}
}

actor HDRedSkull : HDUPK replaces RedSkull
{
	scale 0.6
	renderstyle translucent
	alpha 0.75
	states
	{
	spawn:
		RSKU A 0 A_Stop
		"----" A 0 A_Jump(256,"spawn2")
	spawn2:
		RSKU AB 1 light("REDKEY") A_SetTics(random(1,6))
		loop
	give:
		"----" A 0 A_JumpIfInTargetInventory("RedSkull",1,"spawn")
		"----" A 0 A_GiveToTarget("RedSkull",1)
		"----" A 0 A_Log("\crRED\c-, the way of the blood shed for you in vain.")
	effect:
		"----" A 0 A_PlaySound("brain/cube",0,1,0,0)
		"----" A 0 A_Stop
		"----" A 0 A_GiveToTarget("Health",10)
		"----" A 0 A_DamageTarget(1)
		"####" "#####" 1 A_SpawnItemEx("HDSmoke",0,0,0,random(4,0),random(-2,2),random(1,3),0,SXF_NOCHECKPOSITION)
		"----" A 0 A_GiveToTarget("WoundCount",1)
		"----" A 0 A_GiveToTarget("IsMoving",99)
		"----" A 0 A_Jump(256,"spawn")
	}
}
actor HDBlueSkull : HDRedSkull replaces BlueSkull
{
	states
	{
	give:
		"----" A 0 A_JumpIfInTargetInventory("BlueSkull",1,"spawn")
		"----" A 0 A_GiveToTarget("BlueSkull",1)
		"----" A 0 A_Log("\cnBLUE\c-, the way of the heaven forever lost to you.")
		goto effect
	spawn2:
		BSKU AB 1 light("HEALTHPOTION") A_SetTics(random(1,3))
		loop
	}
}
actor HDYellowSkull : HDRedSkull replaces YellowSkull
{
	states
	{
	give:
		"----" A 0 A_JumpIfInTargetInventory("YellowSkull",1,"spawn")
		"----" A 0 A_GiveToTarget("YellowSkull",1)
		"----" A 0 A_Log("\cfYELLOW\c-, the way of the gold that has lured all mankind to death.")
		goto effect
	spawn2:
		YSKU AB 1 light("YELLOWKEY") A_SetTics(random(1,3))
		loop
	}
}

actor HDMap : HDUPK replaces Allmap
{
	scale 0.3
	states
	{
	give:
		TNT1 A 0 A_GiveToTarget("MapRevealer",1)
		TNT1 A 0 A_GiveInventory("MapRevealer",1,AAPTR_PLAYER1)
		TNT1 A 0 A_GiveInventory("MapRevealer",1,AAPTR_PLAYER2)
		TNT1 A 0 A_GiveInventory("MapRevealer",1,AAPTR_PLAYER3)
		TNT1 A 0 A_GiveInventory("MapRevealer",1,AAPTR_PLAYER4)
		TNT1 A 0 A_GiveInventory("MapRevealer",1,AAPTR_PLAYER5)
		TNT1 A 0 A_GiveInventory("MapRevealer",1,AAPTR_PLAYER6)
		TNT1 A 0 A_GiveInventory("MapRevealer",1,AAPTR_PLAYER7)
		TNT1 A 0 A_GiveInventory("MapRevealer",1,AAPTR_PLAYER8)
		PMAP A 0 A_Log("\c-Local area map downloaded.")
		PMAP A 0 A_PlaySound("misc/i_pkup",0,1,0,0)
	spawn:
		PMAP A 0 A_Stop
		PMAP A 0 A_Jump(256,"a","b","c","d")
	a:
		PMAP AE 1 A_SetTics(random(1,3))
		"----" A 0 A_Jump(4,"spawn")
		loop
	b:
		PMAP BF 1 A_SetTics(random(1,3))
		"----" A 0 A_Jump(4,"spawn")
		loop
	c:
		PMAP CG 1 A_SetTics(random(1,3))
		"----" A 0 A_Jump(4,"spawn")
		loop
	d:
		PMAP DH 1 A_SetTics(random(1,3))
		"----" A 0 A_Jump(4,"spawn")
		loop
	}
}


actor HelpScreen : ActionItem
{
	states
	{
	pickup:
		TNT1 A 0 A_Print("Bright red haze means\nyou're \crbleeding\c- to death.\n\nUse \cnmedikits\c- to stop \crbleeding\c-.\nThey take time to work.\n\nHit the \cdreload\c- key to reload.\n\nTap or hold the \cduse/open door\c- key to pick\nup things and melee people.\n\nHold the \cdjump\c- key in front of a \nlow ledge to climb over it.\n\nHold the \cdrun/walk\c- key to run.\n\nStop moving and hold the \cduse/open door\c- \nkey to view all inventory.\n\nDon't forget to bind \cdfire mode\c-, \cdunload\c- and\n\cdsecondary reload\c-! (read the manual too!)")
		fail
	}
}
