
// ------------------------------------------------------------
//   Actors common to rifle and chaingun that must be defined
// ------------------------------------------------------------

ACTOR FourMilAmmo:Ammo{
	inventory.maxamount 60
	ammo.backpackmaxamount 120
	+inventory.ignoreskill ammo.backpackamount 0
	xscale 0.5 yscale 0.6 height 2 radius 2 translation ice
	inventory.pickupmessage "Picked up a stray 4.26 UAC Standard round. Reloading a 4.26 UAC Standard magazine into another firearm without authorization is a breach of the Volt End User License Agreement."
	states{
	spawn:
		TNT1 A 1 nodelay{
			if(!A_CheckProximity("null","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)){
				return state("spawn2");
			}
			else{
				A_SpawnItemEx("HD4mDMagNoMake",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_ISMASTER|SXF_ABSOLUTEMOMENTUM);
				A_GiveInventory("FourMilAmmo",1,AAPTR_TARGET);
				return state("null");
			}
		}stop
	spawn2:
		RBRS A -1
	}
}
ACTOR ZM66RifleMags:Ammo replaces Clip
{
	+inventory.ignoreskill
	inventory.maxamount 6
	ammo.backpackmaxamount 18
	ammo.backpackamount 0
	inventory.pickupmessage "Picked up a 4.26 UAC Standard magazine."
	xscale 0.3
	yscale 0.4
	states
	{
	spawn:
		CLIP C 0 nodelay A_SpawnItemEx("ZM66MagP",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	}
}
actor ZM66MagP:HDUPK replaces ZM66RifleMags
{
	xscale 0.3 yscale 0.4
	states
	{
	spawn:
		CLIP C -1 A_Stop
	give:
		"----" A 0 A_JumpIfInTargetInventory("ZM66RifleMags",0,"spawn")
		"----" A 0 A_PlaySound("weapons/pocket")
		"----" A 0 A_GiveToTarget("ZM66RifleMags",1)
		stop
	}
}
actor HD4mMag:HDUPK
{
	translation "160:167=144:151"
	xscale 0.3 yscale 0.4
	states
	{
	spawn2:
		"----" A -1{
			if(countinv("ZM66Loaded")>=50){
				A_SpawnItemEx("ZM66MagP",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
				return state("null");
			}
			else if(countinv("ZM66Loaded")<1){
				A_SpawnItemEx("ZM66RifleEmptyMag",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
				return state("null");
			}
			return state("");
		}
	spawn:
		CLIP A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("ZM66Loaded",50)
		goto spawn2
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("ZM66Loaded",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("ZM66Loaded",1)
		"----" A 0 A_GiveInventory("ZM66Loaded",1)
		loop
	give:
		"----" A 0 A_JumpIfInventory("ZM66Loaded",50,"givemag")
		"----" A 0 A_JumpIfInTargetInventory("FourMilAmmo",0,"spawn")
	giveloop:
		"----" A 0 A_JumpIfInTargetInventory("FourMilAmmo",0,"spawn")
		"----" A 0{
			A_GiveToTarget("FourMilAmmo",countinv("ZM66Loaded"));
			A_PlaySound("weapons/pocket");
			A_Log("Reloading a 4.26 UAC Standard magazine into another firearm without authorization is a breach of the Volt End User License Agreement.");
		}
		stop
	givemag:
		"----" A 0 A_JumpIfInTargetInventory("ZM66RifleMags",0,"spawn")
		"----" A 0 A_GiveToTarget("ZM66RifleMags",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor HD4mCMag1:HD4mMag{
	states{
	takeloop:
		"----" A 0{
			if(countinv("VulcLoaded1",AAPTR_TARGET)>0){    
				A_GiveInventory("ZM66Loaded",countinv("VulcLoaded1",AAPTR_TARGET));
				A_TakeFromTarget("VulcLoaded1");
			}
		}goto spawn2
	}
}
actor HD4mCMag2:HD4mMag{
	states{
	takeloop:
		"----" A 0{
			if(countinv("VulcLoaded2",AAPTR_TARGET)>0){    
				A_GiveInventory("ZM66Loaded",countinv("VulcLoaded2",AAPTR_TARGET));
				A_TakeFromTarget("VulcLoaded2");
			}
		}goto spawn2
	}
}
actor HD4mDMag:HD4mMag{
	states{
	takeloop:
		"----" A 1{
			if(countinv("FourMilAmmo",AAPTR_TARGET)>0){
				A_TakeInventory("Counter");
				A_GiveInventory("Counter",clamp(random(1,49),1,countinv("FourMilAmmo",AAPTR_TARGET)));
				A_GiveInventory("ZM66Loaded",countinv("Counter"));
				A_TakeFromTarget("FourMilAmmo",countinv("Counter"));
				return state("take2");
			}else{return state("null");}
		}
	take2:
		"----" A 0 A_GiveToTarget("HD4mDMagMaker")
		goto spawn2
	give:
		goto giveloop
		stop
	}
}
actor HD4mDMagNoMake:HD4mDMag{
	states{
	take2:
		goto spawn2
	}
}
actor HD4mDMagMaker:ActionItem{
	states{
	pickup:
		TNT1 A 0 A_SpawnItemEx("HD4mDMag",random(8,12),random(0,12),24,5,0,0,random(-6,-12),SXF_SETTARGET)
		stop
	}
}



// ------------------------------------------------------------
//   Chaingun
// ------------------------------------------------------------

ACTOR Vulcanette:HDWeapon{
	game Doom
	scale 0.8
	inventory.pickupmessage "You got the chaingun! Now it's coward killing time!"
	weapon.selectionorder 204
	weapon.slotnumber 4
	Decal "BulletScratch"
	weapon.ammotype1 VulcLoaded1
	weapon.ammotype2 ZM66RifleMags
	weapon.ammouse 0
	weapon.kickback 24
	weapon.bobrangex 0.3
	weapon.bobrangey 1
	weapon.bobspeed 1.2
	weapon.bobstyle normal
	Obituary "%o met the budda-budda-budda on the street,and %k killed %h."
	states{
	select0:
		VULG A 0{
			A_Overlay(2,"droopsmoke");
			if(countinv("NulledWeapon")<1){A_TakeInventory("ChaingunOn");}
		}goto select0bfg
	deselect0:
		VULG A 0
		goto deselect0bfg

	droopsmoke:
		TNT1 A 1{
			if((pitch<5)&&(countinv("IsSupported")<1)){
				if((countinv("IsMoving")>2)&&(countinv("PowerStrength")<1)){    
					ACS_NamedExecuteAlways("MuzzleClimb",0,random(-1,-clamp(10-pitch,2,5)),random(-1,1));
				}else{
					ACS_NamedExecuteAlways("MuzzleClimb",0,random(0,-clamp(5-pitch,1,3)),random(-1,1));
				}
			}
			if(countinv("PressingFire")+countinv("ChaingunOn")>1){    
				//not using AMC because this is constant
				A_SetPitch(pitch+frandom(-0.05,0.05));
				A_SetAngle(angle+frandom(-0.05,0.05));
			}
			A_TakeInventory("ChaingunHeat",1);
			if(countinv("ChaingunHeat")>37){  
				A_FireCustomMissile("HDGunSmoke",frandom(-1,1),0,0,0,0,frandom(-1,1));
				A_CustomMissile("HDGunSmoke",6,0,random(-1,1),CMF_AIMDIRECTION);
			}
		}loop


	zoom:
		VULG A 1 offset(1,33)
		VULG A 1 offset(1,34)
		VULG A 1 offset(0,33)
		VULG A 1{
			if(countinv("ChaingunZoom")<1){
				A_GiveInventory("ChaingunZoom");
			}
			else{A_TakeInventory("ChaingunZoom",1);}
		}goto nope

	altfire:
		VULG A 1{
			if(countinv("ChaingunOn")<1){
				A_GiveInventory("ChaingunOn");
				A_GiveInventory("VulcJuicer",1000);
			}
			else{A_TakeInventory("ChaingunOn",1);}
			A_PlaySound("weapons/rifleclick2",CHAN_BODY);
		}goto nope

	user2:
	firemode:
		VULG A 1{
			if(countinv("ChaingunFast")<1){A_GiveInventory("ChaingunFast");}
			else{A_TakeInventory("ChaingunFast",1);}
			A_WeaponReady(WRF_NOFIRE);
		}goto nope

	ready:
		VULG A 1{
			A_SetCrosshair(21);
			A_GiveInventory("IsWeaponReady");
			A_GiveInventory("IsWeaponBFG");
			if(A_JumpIfInventory("VulcJuicer",0,"null")){
				A_TakeInventory("VulcJuicer");
				A_GiveInventory("JuiceVulc");
			}else if(countinv("ChaingunOn")>0){A_GiveInventory("VulcJuicer",1);}
			if(countinv("VulcJuice")<1){A_TakeInventory("ChaingunOn");}
			A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWZOOM|WRF_ALLOWUSER1|WRF_ALLOWUSER2|WRF_ALLOWUSER4);
		}
		goto readyend

	fire:
		VULG A 0{
			A_TakeInventory("ChaingunOddBullet");
			if(countinv("ChaingunOn")>0){  
//				A_PlaySound("weapons/vulcanup",7);
				A_GiveInventory("VulcJuicer",5000);
			}
		}goto shoot
	hold:
		VULG A 0 A_JumpIfInventory("VulcJuice",1,1)
		goto nope
	shoot:
		VULG A 2{
			A_GiveInventory("ChaingunSmoker");

			//toggle oddbullet: start none, A yes, B no.
			if(countinv("ChaingunOddBullet")<1){A_GiveInventory("ChaingunOddBullet");}
			else{A_TakeInventory("ChaingunOddBullet");}

			//check speed and then shoot
			if(countinv("ChaingunFast")>0){
				if(countinv("VulcChamber4")>0){A_SetTics(1);}  
				A_GiveInventory("VulcJuicer",5000);
			}else if(countinv("VulcJuice")<50){
				A_SetTics(random(3,4));
			}else if(countinv("VulcJuice")<100){
				A_SetTics(random(2,3));
			}
			if((countinv("VulcBR3")<1)&&(countinv("VulcChamber3")>0)){
				A_GunFlash;
				A_GiveInventory("VulcShoot");
			}
		}
		VULG B 1{
			//if off, just move on
			if(countinv("ChaingunOn")<1){
				A_SetTics(2);
			}

			//check speed and then shoot - but only in fast mode
			else if(countinv("ChaingunFast")>0){
				A_GiveInventory("VulcTurnRound");
				if(countinv("VulcChamber4")>0){A_SetTics(1);}  
				if((countinv("VulcBR3")<1)&&(countinv("VulcChamber3")>0)){
					A_GunFlash;
					A_GiveInventory("VulcShoot");
				}
			}else if(countinv("VulcJuice")<100){
				A_SetTics(random(2,3));
			}else if(countinv("VulcJuice")<150){
				A_SetTics(random(1,2));
			}
		}
		VULG A 1{
			A_GiveInventory("VulcTurnRound");
			if(countinv("ChaingunOn")<1){
				A_Refire;
				if(countinv("VulcLoaded1")<1){return state("turnmagmanual");}
				return state("nope");
			}
			else if(countinv("VulcLoaded1")>0){A_Refire;return state("ready");}
			else if(countinv("VulcJB1")>0){A_Refire;return state("");}
			return state("");
		}
		VULG A 0{
			if(countinv("VulcLoaded2")+countinv("VulcLoaded3")+countinv("VulcLoaded4")+countinv("VulcLoaded5")+countinv("VulcMag1")+countinv("VulcMag2")+countinv("VulcMag3")+countinv("VulcMag4")+countinv("VulcMag5")<1){A_Refire;return state("ready");}
			A_GiveInventory("VulcTurnMag");
			A_GiveInventory("JuiceVulc");
			A_PlaySound("weapons/grenopen",CHAN_BODY);
			if((countinv("VulcChamber5")+countinv("VulcChamber4")+countinv("VulcChamber3")+countinv("PressingFire")>2)&&(countinv("ChaingunFast")<1)){A_Refire;return state("ready");}  
			return state("");
		}
		VULG AB 2 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,-6),random(4,6))
		goto ready
	turnmagmanual:
		VULG A 0{
			if(countinv("VulcLoaded2")+countinv("VulcLoaded3")+countinv("VulcLoaded4")+countinv("VulcLoaded5")+countinv("VulcMag1")+countinv("VulcMag2")+countinv("VulcMag3")+countinv("VulcMag4")+countinv("VulcMag5")<1){A_Refire;return state("nope");}
			A_PlaySound("weapons/grenopen",CHAN_BODY);
			return state("");
		}
		VULG AB 2 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,-6),random(4,6))
		VULG A 0 A_GiveInventory("VulcTurnMag")
		goto ready


	flash:
		VULF A 0{
			A_ZoomFactor(0.99,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			if(countinv("ChaingunFast")+countinv("ChaingunOddBullet")==2){return state("");}
			return state("flashfollow");
		}
		VULF B 0
	flashfollow:
		"----" A 0 A_Jump(CallACS("LightCheck")*3/4,2)
		"----" A 1 BRIGHT A_Light2
		goto flashend
		TNT1 A 1
		goto flashend
	flashend:
		TNT1 A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		goto lightdone


	user1:
	altreload:
	cellreload:
		VULG A 0{
			A_TakeInventory("ChaingunOn");
			if(
				(countinv("HDCellPacks")+countinv("HDCellAmmo")>0)    
				&&(countinv("VulcJuice")<2050)
				){return state("uncell");}
			return state("nope");
		}
	//what key to use for cellunload???
	cellunload:
		VULG A 0{
			if(countinv("VulcJuice")+countinv("VulcEmptyCell")>0){return state("uncell");}
			return state("nope");
		}
	uncell:
		VULG A 2 offset(0,36)
		VULG A 2 offset(4,38){
			A_TakeInventory("ChaingunOn");
			A_PlayWeaponSound("weapons/rifleclick2");
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(18,24),random(12,18),0);
		}
		VULG AA 0 A_GiveInventory("ChaingunSmoker",1)
		VULG A 6 offset(10,40){
			A_PlayWeaponSound("weapons/rifleload");
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(18,24),random(12,18),0);
		}
		VULG A 6 offset(9,41) A_PlayWeaponSound("weapons/pocket")
		VULG A 8 offset(12,43) A_PlayWeaponSound("weapons/huntreload")
		VULG A 5 offset(10,41) A_PlayWeaponSound("weapons/grenopen")
		VULG A 0 A_JumpIf(countinv("VulcEmptyCell")+countinv("VulcJuice")<1,"cellout")
		VULG A 0{
			if(
				(countinv("PressingUnload")+countinv("PressingAltReload")+countinv("PressingReload")<1)
				||(countinv("HDCellAmmo")>CallACS("AmmoCap",2)-(countinv("VulcJuice")/150))  
				||(
					(countinv("VulcJuice")>=2050)  
					&&(A_JumpIfInventory("HDCellPacks",0,"null"))
				)
				||((countinv("VulcJuice")<150)&&(A_JumpIfInventory("HDCellPackEmpty",0,"null")))
			){
				return state("dropcell");
			}
			return state("pocketcell");
		}

	pocketcell:
		VULG A 10 offset(11,42){
			A_PlayWeaponSound("weapons/pocket");
			if(countinv("VulcJuice")>2050){A_GiveInventory("HDCellPacks",1);}  
			else if(countinv("VulcJuice")<150){A_GiveInventory("HDCellPackEmpty",1);}
			else{A_GiveInventory("HDCellAmmo",countinv("VulcJuice")/105);}
			A_TakeInventory("VulcJuice");
		}
		VULG AA 6 offset(9,40) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-5,-6),random(-5,-6))
		goto cellout
	dropcell:
		VULG A 4 offset(11,42) A_SpawnItemEx("HDCelXV",8,0,height-14,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_SETTARGET)
		goto cellout

	cellout:
		VULG A 0 A_TakeInventory("VulcEmptyCell")
		VULG A 0 offset(10,40) A_JumpIfInventory("JustUnloading",1,"reloadend")
	loadcell:
		VULG A 8 offset(11,42) A_PlayWeaponSound("weapons/pocket")
		VULG A 5 offset(10,41) A_PlayWeaponSound("weapons/grenopen")
		VULG A 8 offset(12,43) A_PlayWeaponSound("weapons/huntreload")
		VULG A 0{
			if(countinv("HDCellPacks")>0){          
				A_GiveInventory("VulcJuice",2100);
				A_TakeInventory("HDCellPacks",1,TIF_NOTAKEINFINITE);
			}else{
				A_TakeInventory("Counter");
				A_GiveInventory("Counter",random(1,20));
				if(countinv("Counter")>countinv("HDCellAmmo")){          
					A_TakeInventory("Counter",countinv("Counter")-countinv("HDCellAmmo"));
				}
				A_GiveInventory("VulcJuice",countinv("Counter")*150);
				A_TakeInventory("HDCellAmmo",countinv("Counter"),TIF_NOTAKEINFINITE);
			}
			A_TakeInventory("VulcEmptyCell");
		}
	reloadend:
		VULG A 3 offset(9,41)
		VULG A 2 offset(6,38)
		VULG A 3 offset(2,34)
		goto nope


	reload:
		VULG A 0{
			if(
				(countinv("ZM66RifleMags")+countinv("FourMilAmmo")<1)
				||(countinv("VulcMag1")+countinv("VulcMag2")+countinv("VulcMag3")+countinv("VulcMag4")+countinv("VulcMag5")==5)
			){return state("nope");}
			return state("unmag");
		}

	user4:
	unload:
		VULG A 0{
			A_GiveInventory("JustUnloading",1);
			if(countinv("VulcLoaded1")+countinv("VulcLoaded2")+countinv("VulcLoaded3")+countinv("VulcLoaded4")+countinv("VulcLoaded5")+countinv("VulcJuice")+countinv("VulcEmptyCell")<1){return state("unchamber");}
			if(countinv("VulcLoaded1")+countinv("VulcLoaded2")+countinv("VulcLoaded3")+countinv("VulcLoaded4")+countinv("VulcLoaded5")<1){return state("cellunload");}
			return state("unmag");
		}
	unchamber:
		VULG B 4 A_PlaySound("derp/crawl",CHAN_AUTO,0.3)
		VULG A 4 A_GiveInventory("VulcTurnRound")
		VULG A 0 A_JumpIfInventory("PressingUnload",1,"unchamber")
		goto nope
	unmag:
		//first, check if there's a mag2-5.
		//if there's no mag2 but stuff after that, shunt everything over until there is.
		//if there's nothing but mag1, unload mag1.
		VULG A 2 offset(0,36)
		VULG A 2 offset(4,38){
			A_TakeInventory("ChaingunOn");
			A_PlayWeaponSound("weapons/rifleclick2");
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(18,24),random(12,18),0);
		}
		VULG AA 0 A_GiveInventory("ChaingunSmoker",1)
		VULG A 6 offset(10,40){
			if(countinv("JustUnloading")<1){return state("loadmag");}
			A_PlayWeaponSound("weapons/rifleload");
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(18,24),random(12,18),0);
			return state("");
		}
	unmag0:
		VULG A 0{
			if(countinv("VulcLoaded2")+countinv("VulcMag2")>0){return state("unmag2");}  
			else if(
				countinv("VulcLoaded3")+countinv("VulcMag3")
				+countinv("VulcLoaded4")+countinv("VulcMag4")
				+countinv("VulcLoaded5")+countinv("VulcMag5")
				>0    
			){return state("unmagshunt");}
			else if(countinv("VulcLoaded1")+countinv("VulcMag1")>0){return state("unmag1");}
			return state("nope");
		}

	unmagshunt:
		VULG A 0{
			A_GiveInventory("VulcTurnMagUnload");
			A_GiveInventory("JuiceVulc");
			A_PlaySound("weapons/grenopen",CHAN_BODY);
		}
		VULG AB 2 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,-6),random(4,6))
		goto nope

	unmag2:
		VULC A 0{
			if(
				(countinv("PressingUnload")+countinv("PressingReload")<1)
				||(countinv("FourMilAmmo")>CallACS("AmmoCap",4)-countinv("VulcLoaded2"))      
				||(
					(countinv("VulcLoaded2")==50)  
					&&(A_JumpIfInventory("ZM66RifleMags",0,"null"))
				)
				||(countinv("VulcLoaded2")<1)
			){
				A_SpawnItemEx("HD4mCMag2",cos(pitch)*8,0,height-10-8*sin(pitch),velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				return state("mag2out");
			}
			if(countinv("VulcLoaded2")==50){A_GiveInventory("ZM66RifleMags",1);}      
			else{A_GiveInventory("FourMilAmmo",countinv("VulcLoaded2"));}
			A_TakeInventory("VulcLoaded2");
			A_TakeInventory("VulcMag2");
			return state("pocketmag");
		}goto mag2out
	unmag1:
		VULC A 0{
			A_TakeInventory("VulcMag1");
			if(
				(countinv("PressingUnload")+countinv("PressingReload")<1)
				||(countinv("FourMilAmmo")>CallACS("AmmoCap",4)-countinv("VulcLoaded1"))      
				||(
					(countinv("VulcLoaded1")==50)  
					&&(A_JumpIfInventory("ZM66RifleMags",0,"null"))
				)
				||(countinv("VulcLoaded1")<1)
			){
				A_SpawnItemEx("HD4mCMag1",cos(pitch)*8,0,height-10-8*sin(pitch),velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				return state("mag1out");
			}
			if(countinv("VulcLoaded1")==50){A_GiveInventory("ZM66RifleMags",1);}      
			else{A_GiveInventory("FourMilAmmo",countinv("VulcLoaded1"));}
			A_TakeInventory("VulcLoaded1");
			return state("pocketmag");
		}goto mag1out

	pocketmag:
		VULG A 0 A_PlaySound("weapons/pocket")
		VULG AA 6 ACS_NamedExecuteAlways("MuzzleClimb",0,random(4,6),random(-4,-6))
		VULG A 0 A_JumpIf(countinv("VulcLoaded1")+countinv("VulcMag1")<1,"mag1out")
		goto mag2out

	mag2out:
		VULG A 1
		VULG A 0{
			A_GiveInventory("VulcTurnMagUnload");
			A_PlaySound("weapons/grenopen",CHAN_BODY);
		}
		VULG AB 2 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,-6),random(4,6))
	mag1out:
		VULG A 0{
			if(
				(countinv("PressingReload")+countinv("PressingUnload")+countinv("PressingFire")>0)||  
				(countinv("VulcLoaded2")+countinv("VulcLoaded3")+countinv("VulcLoaded4")+countinv("VulcLoaded5")<1)
			)
			{return state("reloadend");}
			return state("");
		}
		VULG A 6
		goto unmag0
		VULG A 0{	//unused - it doesn't make any sense for the vulc
			if(countinv("JustUnloading")>0){return state("reloadend");}  
			return state("loadmag");
		}

	loadmag:
		//pick the first empty slot and fill that
		VULG A 0 A_PlaySound("weapons/pocket")
		VULG AA 6 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,4),random(-4,-6))
		VULG A 6 offset(10,41){
			A_TakeInventory("Counter");
			if(countinv("ZM66RifleMags")>0){  
				A_GiveInventory("Counter",50);
				A_TakeInventory("ZM66RifleMags",1,TIF_NOTAKEINFINITE);
			}
			else{
				A_GiveInventory("Counter",random(1,50));
				if(countinv("Counter")>countinv("FourMilAmmo")){          
					A_TakeInventory("Counter",countinv("Counter")-countinv("FourMilAmmo"));
				}
				A_TakeInventory("FourMilAmmo",countinv("Counter"),TIF_NOTAKEINFINITE);
			}
			A_GiveInventory("VulcMags");
			if(countinv("VulcLoaded1")+countinv("VulcMag1")<1){
				A_GiveInventory("VulcLoaded1",countinv("Counter"));
				if(countinv("Counter")<50){A_GiveInventory("VulcJB1");A_TakeInventory("VulcLoaded1",1);ACS_NamedExecuteAlways("MuzzleClimb",0,random(5,7),random(10,12));}
			}
			else if(countinv("VulcLoaded2")+countinv("VulcMag2")<1){
				A_GiveInventory("VulcLoaded2",countinv("Counter"));
				if(countinv("Counter")<50){A_GiveInventory("VulcJB2");A_TakeInventory("VulcLoaded2",1);ACS_NamedExecuteAlways("MuzzleClimb",0,random(5,7),random(10,12));}
			}
			else if(countinv("VulcLoaded3")+countinv("VulcMag3")<1){
				A_GiveInventory("VulcLoaded3",countinv("Counter"));
				if(countinv("Counter")<50){A_GiveInventory("VulcJB3");A_TakeInventory("VulcLoaded3",1);ACS_NamedExecuteAlways("MuzzleClimb",0,random(5,7),random(10,12));}
			}
			else if(countinv("VulcLoaded4")+countinv("VulcMag4")<1){
				A_GiveInventory("VulcLoaded4",countinv("Counter")-1);
				if(countinv("Counter")<50){A_GiveInventory("VulcJB4");A_TakeInventory("VulcLoaded4",1);ACS_NamedExecuteAlways("MuzzleClimb",0,random(5,7),random(10,12));}
			}
			else if(countinv("VulcLoaded5")+countinv("VulcMag5")<1){
				A_GiveInventory("VulcLoaded5",countinv("Counter"));
				if(countinv("Counter")<50){A_GiveInventory("VulcJB5");A_TakeInventory("VulcLoaded5",1);ACS_NamedExecuteAlways("MuzzleClimb",0,random(5,7),random(10,12));}
			}
			A_GiveInventory("VulcMags");
		}
		VULG A 8 offset(9,38){
			A_PlaySound("weapons/rifleclick");
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(5,7),random(10,12));
		}
		VULG A 0{
			if(
				(countinv("PressingReload")+countinv("PressingUnload")+countinv("PressingFire")>0)  
				||(countinv("ZM66RifleMags")+countinv("FourMilAmmo")<1)
				||(countinv("VulcMag1")+countinv("VulcMag2")+countinv("VulcMag3")+countinv("VulcMag4")+countinv("VulcMag5")==5)
			)
			{return state("reloadend");}
			return state("");
		}
		goto loadmag



	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("VulcPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("Vulcanette",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("VulcPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	}
}
actor ChaingunSmoker:ActionItem{
	states{
	pickup:
		VULG A 0{
			A_TakeInventory("ChaingunHeat",1);
			if(countinv("ChaingunHeat")>37){  
				A_FireCustomMissile("HDGunSmoke",frandom(-1,1),0,0,0,0,frandom(-1,1));
				A_CustomMissile("HDGunSmoke",6,0,random(-1,1),CMF_AIMDIRECTION);
			}
		}fail
	}
}
actor JuiceVulc:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			if((countinv("VulcJuice")>0)&&(countinv("VulcJuice")<60))
				{A_GiveInventory("VulcEmptyCell");}
			A_TakeInventory("VulcJuice",1);
		}
	}
}
actor VulcShoot:ActionItem{
	states{
	pickup:
		VULF A 0{
			//battery checks
			if(countinv("VulcJuice")<350){A_TakeInventory("ChaingunFast");}
			if(A_JumpIfInventory("VulcJuicer",0,"null")){
				A_TakeInventory("VulcJuicer");
				A_GiveInventory("JuiceVulc");
			}else{A_GiveInventory("VulcJuicer",1);}

			//shoot
			if(countinv("ChaingunHeat")<7){A_SpawnItemEx("HDFourMil",0,0,height-6,velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
			else if(countinv("ChaingunHeat")<13){A_SpawnItemEx("HDFourMil",0,0,height-6,velx,vely,velz+frandom(-0.1,0.1),frandom(-0.2,0.2),SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
			else if(countinv("ChaingunHeat")<19){A_SpawnItemEx("HDFourMil",0,0,height-6,velx+frandom(-0.8,0.8),vely+frandom(-0.8,0.8),velz+frandom(-0.8,0.8),frandom(-0.2,0.2),SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
			else{A_SpawnItemEx("HDFourMil",0,0,height-6,velx+frandom(-0.12,0.12),vely+frandom(-0.12,0.12),velz+frandom(-0.12,0.12),frandom(-0.3,0.3),SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}

			//shoot sound
			if(countinv("VulcChannel")<3){A_GiveInventory("VulcChannel");}
			else{A_TakeInventory("VulcChannel",3);}
			if(countinv("VulcChannel")<1){A_PlaySound("weapons/vulcanette",CHAN_WEAPON);}
			else {A_PlaySound("weapons/vulcanette",4+countinv("VulcChannel"));}

			//turn round into heat
			A_GiveInventory("ChaingunHeat",1);
			A_TakeInventory("VulcChamber3",1);

			//gas operated alternator
			if(random(1,180)<countinv("ChaingunHeat")){A_GiveInventory("VulcJuice",1);}

			//recoil
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(6,16),random(4,8),0);
		}fail
	}
}


actor ChaingunOn:InventoryFlag{}
actor ChaingunZoom:InventoryFlag{}
actor ChaingunFast:InventoryFlag{}
actor ChaingunOddBullet:InventoryFlag{}
actor VulcChannel:InventoryFlag{inventory.maxamount 3}
actor ChaingunHeat:InventoryFlag{inventory.maxamount 60}
actor VulcEmptyCell:InventoryFlag{}
actor VulcJuicer:InventoryFlag{inventory.maxamount 30000}
actor VulcJuice:Ammo{
	inventory.maxamount 2100
	ammo.backpackmaxamount 2100
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}



actor VulcLoaded1:Ammo{
	inventory.maxamount 50
	ammo.backpackmaxamount 50
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor VulcLoaded2:Ammo{
	inventory.maxamount 50
	ammo.backpackmaxamount 50
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor VulcLoaded3:Ammo{
	inventory.maxamount 50
	ammo.backpackmaxamount 50
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor VulcLoaded4:Ammo{
	inventory.maxamount 50
	ammo.backpackmaxamount 50
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor VulcLoaded5:Ammo{
	inventory.maxamount 50
	ammo.backpackmaxamount 50
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor VulcJB1:InventoryFlag{}
actor VulcJB2:InventoryFlag{}
actor VulcJB3:InventoryFlag{}
actor VulcJB4:InventoryFlag{}
actor VulcJB5:InventoryFlag{}

actor VulcChamber1:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcChamber2:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcChamber3:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcChamber4:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcChamber5:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcMag1:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcMag2:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcMag3:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcMag4:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcMag5:Ammo{
	inventory.maxamount 1 ammo.backpackmaxamount 1
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}}
actor VulcBR1:InventoryFlag{}
actor VulcBR2:InventoryFlag{}
actor VulcBR3:InventoryFlag{}
actor VulcBR4:InventoryFlag{}
actor VulcBR5:InventoryFlag{}

actor VulcTurnMag:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			if(countinv("VulcLoaded1")+countinv("VulcMag1")>0){    
				A_SpawnItemEx("ZM66RifleEmptyMag",cos(pitch)*12,0,height-12-12*sin(pitch),velx+cos(pitch)*cos(angle+random(55,65)),vely+cos(pitch)*sin(angle+random(55,65)),velz+sin(pitch),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
			A_TakeInventory("VulcLoaded1",50);
			if(countinv("VulcLoaded2")>0){A_GiveInventory("VulcLoaded1",countinv("VulcLoaded2"));}  
			A_TakeInventory("VulcLoaded2",50);
			if(countinv("VulcLoaded3")>0){A_GiveInventory("VulcLoaded2",countinv("VulcLoaded3"));}  
			A_TakeInventory("VulcLoaded3",50);
			if(countinv("VulcLoaded4")>0){A_GiveInventory("VulcLoaded3",countinv("VulcLoaded4"));}  
			A_TakeInventory("VulcLoaded4",50);
			if(countinv("VulcLoaded5")>0){A_GiveInventory("VulcLoaded4",countinv("VulcLoaded5"));}  
			A_TakeInventory("VulcLoaded5",50);

			A_TakeInventory("VulcJB1");
			if(countinv("VulcJB2")>0){A_GiveInventory("VulcJB1");}  
			A_TakeInventory("VulcJB2");
			if(countinv("VulcJB3")>0){A_GiveInventory("VulcJB2");}  
			A_TakeInventory("VulcJB3");
			if(countinv("VulcJB4")>0){A_GiveInventory("VulcJB3");}  
			A_TakeInventory("VulcJB4");
			if(countinv("VulcJB5")>0){A_GiveInventory("VulcJB4");}  
			A_TakeInventory("VulcJB5");

			A_TakeInventory("VulcMag1");
			if(countinv("VulcMag2")>0){A_GiveInventory("VulcMag1");}  
			A_TakeInventory("VulcMag2");
			if(countinv("VulcMag3")>0){A_GiveInventory("VulcMag2");}  
			A_TakeInventory("VulcMag3");
			if(countinv("VulcMag4")>0){A_GiveInventory("VulcMag3");}  
			A_TakeInventory("VulcMag4");
			if(countinv("VulcMag5")>0){A_GiveInventory("VulcMag4");}  
			A_TakeInventory("VulcMag5");

			A_GiveInventory("VulcMags");
		}fail
	}
}
actor VulcMags:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			//ensure all loadeds are represented by mags
			A_TakeInventory("VulcMag1");
			A_TakeInventory("VulcMag2");
			A_TakeInventory("VulcMag3");
			A_TakeInventory("VulcMag4");
			A_TakeInventory("VulcMag5");
			if(countinv("VulcLoaded1")>0){A_GiveInventory("VulcMag1");}
			if(countinv("VulcLoaded2")>0){A_GiveInventory("VulcMag2");}
			if(countinv("VulcLoaded3")>0){A_GiveInventory("VulcMag3");}
			if(countinv("VulcLoaded4")>0){A_GiveInventory("VulcMag4");}
			if(countinv("VulcLoaded5")>0){A_GiveInventory("VulcMag5");}  
		}fail
	}
}
actor VulcTurnMagUnload:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			A_TakeInventory("VulcLoaded2",50);
			if(countinv("VulcLoaded3")>0){A_GiveInventory("VulcLoaded2",countinv("VulcLoaded3"));}  
			A_TakeInventory("VulcLoaded3",50);
			if(countinv("VulcLoaded4")>0){A_GiveInventory("VulcLoaded3",countinv("VulcLoaded4"));}  
			A_TakeInventory("VulcLoaded4",50);
			if(countinv("VulcLoaded5")>0){A_GiveInventory("VulcLoaded4",countinv("VulcLoaded5"));}  
			A_TakeInventory("VulcLoaded5",50);

			A_TakeInventory("VulcJB2");
			if(countinv("VulcJB3")>0){A_GiveInventory("VulcJB2",countinv("VulcJB3"));}  
			A_TakeInventory("VulcJB3");
			if(countinv("VulcJB4")>0){A_GiveInventory("VulcJB3",countinv("VulcJB4"));}  
			A_TakeInventory("VulcJB4");
			if(countinv("VulcJB5")>0){A_GiveInventory("VulcJB4",countinv("VulcJB5"));}  
			A_TakeInventory("VulcJB5");

			A_TakeInventory("VulcMag2");
			if(countinv("VulcMag3")>0){A_GiveInventory("VulcMag2",countinv("VulcMag3"));}  
			A_TakeInventory("VulcMag3");
			if(countinv("VulcMag4")>0){A_GiveInventory("VulcMag3",countinv("VulcMag4"));}  
			A_TakeInventory("VulcMag4");
			if(countinv("VulcMag5")>0){A_GiveInventory("VulcMag4",countinv("VulcMag5"));}  
			A_TakeInventory("VulcMag5");

			A_GiveInventory("VulcMags");
		}fail
	}
}
actor VulcTurnRound:ActionItem{
	states{
	pickup:
		TNT1 A 0{
			if(countinv("VulcChamber2")>0){A_GiveInventory("VulcChamber1",1);}
			if(countinv("VulcBR2")>0){A_GiveInventory("VulcBR1",1);}  
			A_TakeInventory("VulcChamber2");A_TakeInventory("VulcBR2");

			if(countinv("VulcChamber3")>0){A_GiveInventory("VulcChamber2",1);}
			if(countinv("VulcBR3")>0){A_GiveInventory("VulcBR2",1);}  
			A_TakeInventory("VulcChamber3");A_TakeInventory("VulcBR3");

			if(countinv("VulcChamber4")>0){A_GiveInventory("VulcChamber3",1);}
			if(countinv("VulcBR4")>0){A_GiveInventory("VulcBR3",1);}  
			A_TakeInventory("VulcChamber4");A_TakeInventory("VulcBR4");

			if(countinv("VulcChamber5")>0){A_GiveInventory("VulcChamber4",1);}
			if(countinv("VulcBR5")>0){A_GiveInventory("VulcBR4",1);}  
			A_TakeInventory("VulcChamber5");A_TakeInventory("VulcBR5");

			//spit out a misfired, wasted or broken round
			if(countinv("VulcBR1")>0){  
				A_SpawnItemEx("TinyWallChunk",0,0,20,random(4,7),random(-2,2),random(-2,1),-30,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("TinyWallChunk",0,0,20,random(4,7),random(-2,2),random(-2,1),-30,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("TinyWallChunk",0,0,20,random(4,7),random(-2,2),random(-2,1),-30,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("TinyWallChunk",0,0,20,random(4,7),random(-2,2),random(-2,1),-30,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("TinyWallChunk",0,0,20,random(4,7),random(-2,2),random(-2,1),-30,SXF_NOCHECKPOSITION);
				ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,-8)*3,random(-2,-8)*3);
			}else if(countinv("VulcChamber1")>0){
				A_SpawnItemEx("ZM66DroppedRound",0,0,20,random(4,7),random(-2,2),random(-2,1),-30,SXF_NOCHECKPOSITION);
			}
			A_TakeInventory("VulcBR1");A_TakeInventory("VulcChamber1");
			A_GiveInventory("JuiceVulc");

			//cycle new round from current mag
			if(countinv("VulcLoaded1")>0){  
				A_PlaySound("weapons/rifleclick2",CHAN_BODY);
				A_TakeInventory("VulcLoaded1",1);
				A_GiveInventory("VulcChamber5");
				if(random(1,1000)<=1+countinv("ChaingunFast")+10*countinv("VulcJB1"))
					{A_GiveInventory("VulcBR5");}
			}

			//ensure loaded mag is mag
			if(countinv("VulcLoaded1")>0){A_GiveInventory("VulcMag1");}  
		}fail
	}
}
actor ZM66DroppedRound:FourMilAmmo{
	projectile damage(0) +cannotpush +forcexybillboard -nogravity +doombounce +bounceonactors bouncefactor 0.2 seesound "misc/casing3"
	states{
	spawn:
		RBRS A 2 A_SetAngle(angle+45)
		loop
	death:
		"----" A -1 A_ChangeFlag("noblockmap",0)
		stop
	}
}







actor VulcPickup:HDUPK replaces Chaingun
{
	scale 0.8
	states
	{
	spawn:
		VULC A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0{
			A_GiveInventory("VulcLoaded1",50);A_GiveInventory("VulcMag1",50);
			A_GiveInventory("VulcLoaded2",50);A_GiveInventory("VulcMag2",50);
			A_GiveInventory("VulcLoaded3",50);A_GiveInventory("VulcMag3",50);
			A_GiveInventory("VulcLoaded4",50);A_GiveInventory("VulcMag4",50);
			A_GiveInventory("VulcLoaded5",50);A_GiveInventory("VulcMag5",50);
			A_GiveInventory("VulcJuice",2100);
			return state("spawn2");
		}
	spawn2:
		"----" A -1 A_JumpIfInventory("ChaingunSmoker",1,1)
		"----" A 2 A_GiveInventory("ChaingunSmoker",1)
		loop
	takeloop:
		"----" A 0{
			if(countinv("ChaingunOn",AAPTR_TARGET)>0){  
				A_TakeFromTarget("ChaingunOn",1);
				A_PlaySound("weapons/rifleclick2");
			}

			if(countinv("VulcLoaded1",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcLoaded1",countinv("VulcLoaded1",AAPTR_TARGET));
				A_TakeFromTarget("VulcLoaded1");
			}
			if(countinv("VulcLoaded2",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcLoaded2",countinv("VulcLoaded2",AAPTR_TARGET));
				A_TakeFromTarget("VulcLoaded2");
			}
			if(countinv("VulcLoaded3",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcLoaded3",countinv("VulcLoaded3",AAPTR_TARGET));
				A_TakeFromTarget("VulcLoaded3");
			}
			if(countinv("VulcLoaded4",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcLoaded4",countinv("VulcLoaded4",AAPTR_TARGET));
				A_TakeFromTarget("VulcLoaded4");
			}
			if(countinv("VulcLoaded5",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcLoaded5",countinv("VulcLoaded5",AAPTR_TARGET));
				A_TakeFromTarget("VulcLoaded5");
			}

			if(countinv("VulcMag1",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcMag1",1);A_TakeFromTarget("VulcMag1");}
			if(countinv("VulcMag2",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcMag2",1);A_TakeFromTarget("VulcMag2");}
			if(countinv("VulcMag3",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcMag3",1);A_TakeFromTarget("VulcMag3");}
			if(countinv("VulcMag4",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcMag4",1);A_TakeFromTarget("VulcMag4");}
			if(countinv("VulcMag5",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcMag5",1);A_TakeFromTarget("VulcMag5");}

			if(countinv("VulcJB1",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcJB1",1);A_TakeFromTarget("VulcJB1");}
			if(countinv("VulcJB2",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcJB2",1);A_TakeFromTarget("VulcJB2");}
			if(countinv("VulcJB3",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcJB3",1);A_TakeFromTarget("VulcJB3");}
			if(countinv("VulcJB4",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcJB4",1);A_TakeFromTarget("VulcJB4");}
			if(countinv("VulcJB5",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcJB5",1);A_TakeFromTarget("VulcJB5");}

			if(countinv("VulcChamber1",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcChamber1",1);A_TakeFromTarget("VulcChamber1");}
			if(countinv("VulcChamber2",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcChamber2",1);A_TakeFromTarget("VulcChamber2");}
			if(countinv("VulcChamber3",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcChamber3",1);A_TakeFromTarget("VulcChamber3");}
			if(countinv("VulcChamber4",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcChamber4",1);A_TakeFromTarget("VulcChamber4");}
			if(countinv("VulcChamber5",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcChamber5",1);A_TakeFromTarget("VulcChamber5");}

			if(countinv("VulcBR1",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcBR1",1);A_TakeFromTarget("VulcBR1");}
			if(countinv("VulcBR2",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcBR2",1);A_TakeFromTarget("VulcBR2");}
			if(countinv("VulcBR3",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcBR3",1);A_TakeFromTarget("VulcBR3");}
			if(countinv("VulcBR4",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcBR4",1);A_TakeFromTarget("VulcBR4");}
			if(countinv("VulcBR5",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcBR5",1);A_TakeFromTarget("VulcBR5");}

			if(countinv("VulcJuicer",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcJuicer",countinv("VulcJuicer",AAPTR_TARGET));
				A_TakeFromTarget("VulcJuicer");
			}
			if(countinv("VulcJuice",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcJuice",countinv("VulcJuice",AAPTR_TARGET));
				A_TakeFromTarget("VulcJuice");
			}
			if(countinv("ChaingunHeat",AAPTR_TARGET)>0){  
				A_GiveInventory("ChaingunHeat",countinv("ChaingunHeat",AAPTR_TARGET));
				A_TakeFromTarget("ChaingunHeat");
			}

			if(countinv("ChaingunFast",AAPTR_TARGET)>0){  
				A_GiveInventory("ChaingunFast",1);A_TakeFromTarget("ChaingunFast");}
			if(countinv("VulcEmptyCell",AAPTR_TARGET)>0){  
				A_GiveInventory("VulcEmptyCell",1);A_TakeFromTarget("VulcEmptyCell");}

			return state("spawn2");
		}
	give:
		"----" A 0 A_JumpIfInTargetInventory("Vulcanette",1,"spawn")
	givegun:
		"----" A 0 A_PlaySound("misc/w_pkup")
		"----" A 0 A_GiveToTarget("Vulcanette",1)
	givegunloop:
		"----" A 0{
			if(countinv("VulcLoaded1")>0){  
				A_GiveToTarget("VulcLoaded1",countinv("VulcLoaded1"));
				A_TakeInventory("VulcLoaded1");
			}
			if(countinv("VulcLoaded2")>0){  
				A_GiveToTarget("VulcLoaded2",countinv("VulcLoaded2"));
				A_TakeInventory("VulcLoaded2");
			}
			if(countinv("VulcLoaded3")>0){  
				A_GiveToTarget("VulcLoaded3",countinv("VulcLoaded3"));
				A_TakeInventory("VulcLoaded3");
			}
			if(countinv("VulcLoaded4")>0){  
				A_GiveToTarget("VulcLoaded4",countinv("VulcLoaded4"));
				A_TakeInventory("VulcLoaded4");
			}
			if(countinv("VulcLoaded5")>0){  
				A_GiveToTarget("VulcLoaded5",countinv("VulcLoaded5"));
				A_TakeInventory("VulcLoaded5");
			}

			if(countinv("VulcMag1")>0){  
				A_GiveToTarget("VulcMag1",1);A_TakeInventory("VulcMag1");}
			if(countinv("VulcMag2")>0){  
				A_GiveToTarget("VulcMag2",1);A_TakeInventory("VulcMag2");}
			if(countinv("VulcMag3")>0){  
				A_GiveToTarget("VulcMag3",1);A_TakeInventory("VulcMag3");}
			if(countinv("VulcMag4")>0){  
				A_GiveToTarget("VulcMag4",1);A_TakeInventory("VulcMag4");}
			if(countinv("VulcMag5")>0){  
				A_GiveToTarget("VulcMag5",1);A_TakeInventory("VulcMag5");}

			if(countinv("VulcJB1")>0){  
				A_GiveToTarget("VulcJB1",1);A_TakeInventory("VulcJB1");}
			if(countinv("VulcJB2")>0){  
				A_GiveToTarget("VulcJB2",1);A_TakeInventory("VulcJB2");}
			if(countinv("VulcJB3")>0){  
				A_GiveToTarget("VulcJB3",1);A_TakeInventory("VulcJB3");}
			if(countinv("VulcJB4")>0){  
				A_GiveToTarget("VulcJB4",1);A_TakeInventory("VulcJB4");}
			if(countinv("VulcJB5")>0){  
				A_GiveToTarget("VulcJB5",1);A_TakeInventory("VulcJB5");}

			if(countinv("VulcChamber1")>0){  
				A_GiveToTarget("VulcChamber1",1);A_TakeInventory("VulcChamber1");}
			if(countinv("VulcChamber2")>0){  
				A_GiveToTarget("VulcChamber2",1);A_TakeInventory("VulcChamber2");}
			if(countinv("VulcChamber3")>0){  
				A_GiveToTarget("VulcChamber3",1);A_TakeInventory("VulcChamber3");}
			if(countinv("VulcChamber4")>0){  
				A_GiveToTarget("VulcChamber4",1);A_TakeInventory("VulcChamber4");}
			if(countinv("VulcChamber5")>0){  
				A_GiveToTarget("VulcChamber5",1);A_TakeInventory("VulcChamber5");}

			if(countinv("VulcBR1")>0){  
				A_GiveToTarget("VulcBR1",1);A_TakeInventory("VulcBR1");}
			if(countinv("VulcBR2")>0){  
				A_GiveToTarget("VulcBR2",1);A_TakeInventory("VulcBR2");}
			if(countinv("VulcBR3")>0){  
				A_GiveToTarget("VulcBR3",1);A_TakeInventory("VulcBR3");}
			if(countinv("VulcBR4")>0){  
				A_GiveToTarget("VulcBR4",1);A_TakeInventory("VulcBR4");}
			if(countinv("VulcBR5")>0){  
				A_GiveToTarget("VulcBR5",1);A_TakeInventory("VulcBR5");}

			if(countinv("VulcJuicer")>0){  
				A_GiveToTarget("VulcJuicer",countinv("VulcJuicer"));
				A_TakeInventory("VulcJuicer");
			}
			if(countinv("VulcJuice")>0){  
				A_GiveToTarget("VulcJuice",countinv("VulcJuice"));
				A_TakeInventory("VulcJuice");
			}
			if(countinv("ChaingunHeat")>0){  
				A_GiveToTarget("ChaingunHeat",countinv("ChaingunHeat"));
				A_TakeInventory("ChaingunHeat");
			}

			if(countinv("ChaingunFast")>0){  
				A_GiveToTarget("ChaingunFast",1);A_TakeInventory("ChaingunFast");}
			if(countinv("VulcEmptyCell")>0){  
				A_GiveToTarget("VulcEmptyCell",1);A_TakeInventory("VulcEmptyCell");}

			return state("givegunloopend");
		}
	}
}
actor VulcPickupDropped:VulcPickup
{
	states
	{
	spawn:
		VULC A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0{
			A_GiveInventory("Counter",random(1,5));
			A_GiveInventory("VulcLoaded1",random(1,50));A_GiveInventory("VulcMag1",50);

			if(countinv("Counter")>1){A_TakeInventory("Counter",1);A_GiveInventory("VulcLoaded2",50);A_GiveInventory("VulcMag2",50);}
			if(countinv("Counter")>1){A_TakeInventory("Counter",1);A_GiveInventory("VulcLoaded3",50);A_GiveInventory("VulcMag3",50);}
			if(countinv("Counter")>1){A_TakeInventory("Counter",1);A_GiveInventory("VulcLoaded4",50);A_GiveInventory("VulcMag4",50);}
			if(countinv("Counter")>1){A_TakeInventory("Counter",1);A_GiveInventory("VulcLoaded5",50);A_GiveInventory("VulcMag5",50);}

			A_TakeInventory("Counter");A_GiveInventory("Counter",random(1,4));
			if(countinv("Counter")>1){A_TakeInventory("Counter",1);A_GiveInventory("VulcChamber5",1);}
			if(countinv("Counter")>1){A_TakeInventory("Counter",1);A_GiveInventory("VulcChamber4",1);}
			if(countinv("Counter")>1){A_TakeInventory("Counter",1);A_GiveInventory("VulcChamber3",1);}  

			A_GiveInventory("VulcChamber1");
			A_GiveInventory("VulcChamber2");
			A_GiveInventory("VulcChamber3");

			A_GiveInventory("VulcJuicer",random(1,30000));
			if(random(0,20)>0){A_GiveInventory("VulcJuice",random(1,2100));}  
			return state("spawn2");
		}
		goto spawn2
	}
}
