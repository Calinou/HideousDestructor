// ------------------------------------------------------------
//   Liberator Battle Rifle
// ------------------------------------------------------------
actor LiberatorChamber : Ammo
{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor LiberatorGrenadeChamber : Ammo
{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor LiberatorLoaded : Ammo
{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 30
	ammo.backpackmaxamount 30
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor LiberatorMag : Ammo
{
	+inventory.ignoreskill
	inventory.maxamount 5
	ammo.backpackmaxamount 12
	ammo.backpackamount 0
	scale 0.7
	inventory.pickupmessage "Picked up a 7.76mm magazine."
	states
	{
	spawn:
		TNT1 A 1
		TNT1 A 0 A_SpawnItemEx("LiberatorMagP",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_SETTARGET)
		stop
	}
}
actor SevenMilAmmo : Ammo
{
	+inventory.ignoreskill
	inventory.maxamount 40
	ammo.backpackmaxamount 80
	ammo.backpackamount 0
	height 16
	radius 8
	scale 0.7
	inventory.pickupmessage "Picked up a 7.76mm round."
	+forcexybillboard
	+cannotpush
	states
	{
	spawn:
		RBRS A -1
		stop
	}
}
actor LiberatorHeat:InventoryFlag{inventory.maxamount 50}
actor LiberatorFullAuto:InventoryFlag{}
actor LiberatorGrenadeMode:InventoryFlag{}
actor LiberatorZoom:InventoryFlag{}
actor LiberatorZoomDegree:InventoryFlag{inventory.maxamount 3}
actor LiberatorNoMag:InventoryFlag{}
actor LiberatorSpentChamber:InventoryFlag{}
actor LiberatorVentHeat:ActionItem{
	states{
	pickup:
		BRFG A 0 A_TakeInventory("LiberatorHeat",1)
		TNT1 A 0 A_JumpIfInventory("LiberatorHeat",12,1)
		stop
		TNT1 A 0 A_SpawnItemEx("HDGunSmoke",0,0,height-6,random(1,2)*cos(pitch),frandom(-0.4,0.4),random(1,2)*sin(-pitch))
		TNT1 A 0 A_JumpIfInventory("LiberatorHeat",8,1)
		stop
		TNT1 A 0 A_FireCustomMissile("HDGunSmoke",frandom(-1,1),0,0,0,0,frandom(-1,1))
		TNT1 A 0 A_CustomMissile("HDGunSmoke",6,0,random(-1,1),CMF_AIMDIRECTION)
		stop
	}
}
actor LiberatorEmptyMag:HD4mmMagEmpty
{
	scale 0.7
	states
	{
	spawn:
		RMAG B -1
		stop
	death:
		"----" A -1 A_ChangeFlag("missile",1)
		stop
	}
}
actor HDSpent7mm_ : HDSpent9mm
{
	scale 0.7
	speed 6
	var int user_dmg;
	damage(0)
	seesound "misc/casing"
	+usebouncestate
	+cannotpush
	+forcexybillboard
	+hittracer
	states
	{
	spawn:
		TNT1 A 0 nodelay A_PlaySound("misc/casing")
		TNT1 A 0 A_ChangeVelocity(random(-3,3),frandom(-0.4,0.4),-1,CVF_RELATIVE)
		TNT1 A 0 A_SetUserVar(user_dmg,0)
		TNT1 A 0 A_JumpIfInTargetInventory("LiberatorHeat",7,1)
		goto spawn2
		TNT1 A 0 A_SetUserVar(user_dmg,random(1,4))
		goto spawn2
	spawn2:
		RBRS A 2 A_SetAngle(angle+45)
		TNT1 A 0 A_JumpIf(user_dmg<1,"spawn2")
		TNT1 A 0 A_SetUserVar(user_dmg,user_dmg-1)
		loop
	bounce:
		RBRS A 0{
			A_SetAngle(random(1,360));
			A_DamageTracer(user_dmg,"thermal",0,"none","none",AAPTR_TARGET,AAPTR_DEFAULT);
		}
		goto spawn2
	death:
		TNT1 A 0 A_SpawnItemEx("HDSpent7mmPickup",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	}
}
actor HDSpent7mmPickup : Ammo
{
	height 16
	radius 8
	scale 0.7
	inventory.pickupmessage "Picked up some brass."
	inventory.maxamount 60
	ammo.backpackmaxamount 120
	ammo.backpackamount 0
	+inventory.ignoreskill
	+forcexybillboard
	+cannotpush
	states
	{
	spawn:
		RBRS A -1 nodelay A_ChangeVelocity(0,frandom(-1,1),0,CVF_RELATIVE)
		stop
	}
}


actor LiberatorRifle : HDWeapon
{
	+weapon.cheatnotweapon
	weapon.slotnumber 6
	weapon.ammotype1 "LiberatorLoaded"
	weapon.ammotype2 "LiberatorMag"
	weapon.kickback 20
	weapon.SelectionOrder 199
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You got the battle rifle!"
	weapon.bobrangex 0.22
	weapon.bobrangey 0.9
	scale 0.7
	Obituary "%o was liberated by %k."
	states
	{
	select0:
		BRFG A 0{
			A_TakeInventory("LiberatorGrenadeMode");
			return state("select0big");
		}
	deselect0:
		BRFG A 0
		goto deselect0big
	ready:
		BRFG A 1 A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD)
		TNT1 A 0 A_TakeInventory("WeaponBusy")
		TNT1 A 0 A_TakeInventory("PressingZoom")
		BRFG A 0 A_JumpIfInventory("pressingfiremode",1,"firemode")
		BRFG A 0 A_JumpIfInventory("PressingUnload",1,"unload")
		TNT1 A 0 A_GiveInventory("IsWeaponReady",1)
		TNT1 A 0 A_GiveInventory("IsWeaponShort",1)
		TNT1 A 0 A_GiveInventory("LiberatorVentHeat",1)
		TNT1 A 0 A_GiveInventory("NotShot",1)
		TNT1 A 0 A_JumpIfInventory("NotShot",350,"fillmag")
		TNT1 A 0 A_JumpIfInventory("pressingaltreload",1,"altreload")
		goto ReadyEnd
	fillmag:
		BRFG A 0 A_TakeInventory("NotShot")
		BRFG A 0 A_JumpIfInventory("LiberatorMag",0,"ready")
		BRFG A 0 A_JumpIfInventory("SevenMilAmmo",30,"fillmag2")
	cannibalizeclip:
		BRFG A 0 A_JumpIfInventory("SevenMilAmmo",30,"ready")
		BRFG A 0 A_JumpIfInventory("BossClip",1,1)
		goto ready
		BRFG A 0 A_TakeInventory("BossClip",1,1)
		BRFG A 0 A_GiveInventory("SevenMilAmmo",10)
		loop
	fillmag2:
		BRFG A 0 A_GiveInventory("LiberatorMag",1)
		BRFG A 0 A_TakeInventory("SevenMilAmmo",30)
		goto ready
	altreload:
		BRFG A 1 A_WeaponReady(WRF_NOFIRE)
		goto ready
	fire:
	firegun:
		BRFG A 1{if(countinv("LiberatorFullAuto")>0){A_SetTics(2);}}
	shoot:
		BRFG A 0 A_JumpIfInventory("LiberatorChamber",1,1)
		goto chamber_manual
		BRFG A 1 A_Gunflash
		goto chamber
	hold:
		BRFG A 2{
			if(countinv("LiberatorFullAuto")&&countinv("LiberatorChamber"))
			{return state("");}
			return state("nope");
		}
		goto shoot
	gunrecoil:
		TNT1 A 1 A_ZoomFactor(0.97,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		TNT1 A 1 ACS_NamedExecuteAlways("MuzzleClimb",0,4,2,0)
		TNT1 A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		TNT1 AA 1 ACS_NamedExecuteAlways("MuzzleClimb",0,random(17,21),random(5,9),0)
		stop
	flash:
		BRFF A 1 bright{
			A_Light1();
			HDFlashAlpha(32);
			A_TakeInventory("LiberatorChamber",1);
			A_GiveInventory("LiberatorSpentChamber",1);
			A_Overlay(random(10,19),"gunrecoil");
			A_GiveInventory("LiberatorHeat",2);
			A_PlaySound("weapons/bigrifle",1);
			A_AlertMonsters;
			A_GiveInventory("DecoBulleter776");
		}goto LightDone
	chamber:
		BRFG B 0{
			A_PlaySound("weapons/rifleclick",6);
			if(countinv("LiberatorChamber")>0){A_SpawnItemEx("HDLoose7mm",cos(pitch)*12,0,height-8-sin(pitch)*12,cos(pitch)*cos(angle-4)*4+velx,cos(pitch)*sin(angle-4)*4+vely,-sin(pitch)*4+velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
			if(countinv("LiberatorSpentChamber")>0){A_SpawnItemEx("HDSpent7mm",cos(pitch)*12,0,height-8-sin(pitch)*12,cos(pitch)*cos(angle-4)*6+velx,cos(pitch)*sin(angle-4)*6+vely,-sin(pitch)*6+velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}  
			A_TakeInventory("LiberatorChamber",1);
			A_TakeInventory("LiberatorSpentChamber",1);
			if(countinv("LiberatorLoaded")>0){
				A_GiveInventory("LiberatorChamber",1);
				A_TakeInventory("LiberatorLoaded",1);
			}
		}
		BRFG B 0 A_Refire
		goto nope
	chamber_manual:
		BRFG B 1{
			if((countinv("LiberatorLoaded")<1)||(countinv("LiberatorChamber")>0))
			{return state("nope");}
			return state("");
		}
		BRFG B 1 offset(-1,34)
		BRFG B 1 offset(-2,36) A_PlaySound("weapons/rifleclick")
		BRFG B 3 offset(-2,40){
			if(countinv("LiberatorSpentChamber")>0){A_SpawnItemEx("HDSpent7mm",cos(pitch)*12,0,height-8-sin(pitch)*12,cos(pitch)*cos(angle-4)*6+velx,cos(pitch)*sin(angle-4)*6+vely,-sin(pitch)*6+velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}  
			A_TakeInventory("LiberatorSpentChamber",1);
			A_GiveInventory("LiberatorChamber",1);
			A_TakeInventory("LiberatorLoaded",1);
		}
		BRFG B 1 offset(-2,38)
		BRFG B 1 offset(-1,34)
		BRFG B 0 A_WeaponReady
		goto nope


	firemode:
		"----" A 0{
			if(countinv("LiberatorFullAuto")>0){A_TakeInventory("LiberatorFullAuto");}  
			else{A_GiveInventory("LiberatorFullAuto");}
		}goto nope

	zoom:
		BRFG A 1 offset(0,34){
			A_SetCrosshair(21);
			A_TakeInventory("IsWeaponReady",999);
			if(countinv("LiberatorZoom")>0){A_TakeInventory("LiberatorZoom");}  
			else{A_GiveInventory("LiberatorZoom");}
		}
/*
		BRFG A 1 offset(0,38)
		BRFG A 1 offset(0,42)
		BRFG A 1 offset(0,38)
		BRFG A 1 offset(0,34)
*/
		BRFG A 0 A_JumpIfInventory("PressingZoom",1,"zoomadjust")
		BRFG A 0 A_WeaponReady
		goto nope
	zoomadjust:
		BRFG A 1 A_WeaponReady(WRF_NOFIRE)
		BRFG A 0{
			A_GiveInventory("WeaponBusy",1);
			if (countinv("PressingFire")+countinv("PressingAltfire")>0){
				A_GiveInventory("LiberatorZoom");return state("zoomclick");
			} else if(countinv("PressingFireMode")>0){return state("zoomadjust");}
			if(countinv("PressingZoom")>0){return state("zoomadjust");}
			return state("nope");
		}
	zoomclick:
		BRFG A 0{
			if (countinv("PressingFire")>0){A_GiveInventory("LiberatorZoomDegree",1);}
			else if (countinv("PressingAltFire")>0){A_TakeInventory("LiberatorZoomDegree",1);}
		}
	zoomclicked:
		BRFG A 1{
			A_WeaponReady(WRF_NOFIRE);
			if(countinv("PressingFire")+countinv("PressingAltfire")>0){return state("");}
			return state("zoomadjust");
		}
		goto zoomclicked


	unloadchamber:
		BRFG B 1{
			if(countinv("LiberatorSpentChamber")+countinv("LiberatorChamber")<1)
			{return state("nope");}
			return state("");
		}
		BRFG B 1 offset(-1,34)
		BRFG B 1 offset(-2,36) A_PlaySound("weapons/rifleclick")
		BRFG B 3 offset(-2,40){
			if(countinv("LiberatorChamber")>0){A_SpawnItemEx("HDLoose7mm",cos(pitch)*12,0,height-8-sin(pitch)*12,cos(pitch)*cos(angle-4)*4+velx,cos(pitch)*sin(angle-4)*4+vely,-sin(pitch)*4+velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
			if(countinv("LiberatorSpentChamber")>0){A_SpawnItemEx("HDSpent7mm",cos(pitch)*12,0,height-8-sin(pitch)*12,cos(pitch)*cos(angle-4)*6+velx,cos(pitch)*sin(angle-4)*6+vely,-sin(pitch)*6+velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}  
			A_TakeInventory("LiberatorChamber",1);
			A_TakeInventory("LiberatorSpentChamber",1);
		}
		BRFG B 1 offset(-2,38)
		BRFG B 1 offset(-1,34)
		BRFG B 0 A_WeaponReady
		goto nope

	user4:
	unload:
		BRFG A 0{
			A_GiveInventory("JustUnloading");
			if(
				(countinv("LiberatorNoMag")<1)
			){
				return state("unmag");
			}
			else if(
				(countinv("LiberatorChamber")>0)  
			){
				return state("unloadchamber");
			}
			A_TakeInventory("JustUnloading");
			return state("nope");
		}
	reload:
		BRFG A 0{
				//check if you have any ammo to load to begin with
			if(countinv("LiberatorMag")+countinv("SevenMilAmmo")<1){return state("nope");}
			else if(countinv("LiberatorLoaded")+countinv("LiberatorChamber")==31){return state("nope");}
			else if(
				countinv("LiberatorLoaded")>0  
			){
				A_TakeInventory("LiberatorNoMag");	//hopefully redundant
					//if full mag and unchambered, chamber; if full mag and chamber, abort
				if(A_JumpIfInventory("LiberatorLoaded",0,"null"))
				{
					if(countinv("LiberatorChamber")<1){return state("chamber_manual");}
					return state("nope");
				}				
			}
			return state("unmag");
		}

	unmag:
		BRFG A 1 offset(0,34) A_TakeInventory("IsWeaponReady")
		BRFG A 1 offset(2,36)
		BRFG B 1 offset(4,40)
		BRFG B 2 offset(8,42){
			A_TakeInventory("IsWeaponLong",999);
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,-14),random(4,8),0);
			A_PlayWeaponSound ("weapons/rifleclick2");
		}
		BRFG B 4 offset(14,46){
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,-14),random(4,8),0);
			A_PlayWeaponSound ("weapons/rifleload");
		}
		BRFG B 0{
			if(
				//no mag loaded, skip straight to magout
				(countinv("LiberatorNoMag")>0)
				&&(countinv("LiberatorLoaded")<1)
			){return state("magout");}
			A_GiveInventory("LiberatorNoMag",1);
			if(
					//not trying to pocket to begin with
				(countinv("PressingReload")+countinv("PressingUnload")<1)
				||(
					//full mag and you are maxed on full mags
					(A_JumpIfInventory("LiberatorLoaded",0,"null"))
					&&(A_JumpIfInventory("LiberatorMag",0,"null"))
				)||(
					//partial mag and you have more spares than you can fit
					(!A_JumpIfInventory("LiberatorLoaded",0,"null"))
					&&(countinv("SevenMilAmmo")>AmmoCap("SevenMilAmmo")-countinv("LiberatorLoaded"))
				)||(
					//nothing worth keeping in this mag
					(countinv("LiberatorLoaded")<1)
				)
			){
				A_SpawnItemEx("LiberatorMagP",cos(pitch)*10,0,height-10-10*sin(pitch),velx,vely,velz,0,SXF_SETTARGET|SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				return state("magout");
			}
			return state("pocketmag");
		}
		goto pocketmag
	pocketmag:
		BRFG B 7 offset (12,52) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		BRFG B 0 A_PlayWeaponSound ("weapons/pocket")
		BRFG BB 7 offset (14,54) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		BRFG B 0{
			if(A_JumpIfInventory("LiberatorLoaded",0,"null")){A_GiveInventory("LiberatorMag",1);}
			else{A_GiveInventory("SevenMilAmmo",countinv("LiberatorLoaded"));}
			A_TakeInventory("LiberatorLoaded",countinv("LiberatorLoaded"));
		}
		goto magout
	magout:
		BRFG B 4{
			A_GiveInventory("LiberatorNoMag",1);
			if(countinv("JustUnloading")>0){return state("reloaddone");}  
			return state("");
		}
		goto loadmag


	loadmag:
		BRFG B 0 A_PlayWeaponSound ("weapons/pocket")
		BRFG BB 7 offset(14,54) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		BRFG B 0{
			if(countinv("LiberatorMag")>0){  
				A_TakeInventory("LiberatorMag",1,TIF_NOTAKEINFINITE);
				A_GiveInventory("LiberatorLoaded",30);
			}else{
				A_TakeInventory("Counter",countinv("Counter"));
				A_GiveInventory("Counter",random(1,30));
				if(countinv("Counter")>countinv("SevenMilAmmo")){    
					A_TakeInventory("Counter",countinv("Counter")-countinv("SevenMilAmmo"));
				}
				A_GiveInventory("LiberatorLoaded",countinv("Counter"));
				A_TakeInventory("SevenMilAmmo",countinv("Counter"),TIF_NOTAKEINFINITE);
			}
			A_TakeInventory("LiberatorNoMag");
		}
		BRFG B 6 offset(12,52) A_PlaySound("weapons/rifleload")
		BRFG B 2 offset(8,46) A_PlaySound("weapons/rifleclick2")
		goto reloaddone

	reloaddone:
		BRFG B 1 offset (4,40)
		BRFG A 1 offset (2,36)
		BRFG A 1 offset (0,34)
		BRFG A 0{
			if((countinv("LiberatorLoaded")>0)&&(countinv("LiberatorChamber")<1))  
			{return state("chamber_manual");}
			A_WeaponReady;
			return state("nope");
		}goto nope

	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("LiberatorRiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("LiberatorRifle",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("LiberatorRiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	}
}

actor LiberatorGrenadeRifle : LiberatorRifle
{
	game Doom
	weapon.slotnumber 6
	weapon.selectionorder 198
	inventory.pickupmessage "You got the GL-mounted battle rifle!"
	-weapon.cheatnotweapon
	states
	{
	altfire:
		BRFG A 1 offset (0,34)
		BRFG A 1 offset (2,36)
		BRFG A 0 A_TakeInventory("AirburstCount")
		BRFG A 0 A_TakeInventory("IsWeaponReady")
		BRFG B 1 offset (4,40)
		BRFG B 1 offset (2,36)
		BRFG A 1 offset (0,34)
		BRFG A 0 A_JumpIfInventory("LiberatorGrenadeMode",1,3)
		BRFG A 0 A_GiveInventory("LiberatorGrenadeMode",1)
		BRFG A 0 A_Refire
		goto ready
		BRFG A 0 A_TakeInventory("LiberatorGrenadeMode")
		BRFG A 0 A_Refire
		goto ready
	firemode:
		BRFG A 0 A_JumpIfInventory("LiberatorGrenadeMode",1,"abadjust")
		goto super::firemode
	abadjust:
		BRFG A 2 A_WeaponReady(WRF_NOFIRE)
		BRFG A 0{
			A_GiveInventory("WeaponBusy",1);
			if (countinv("PressingFire")+countinv("PressingAltfire")>0){
				return state("abclick");
			}else if(countinv("PressingZoom")>0){
				A_TakeInventory("AirburstCount");
				return state("nope");
			}else if(countinv("PressingFireMode")>0){return state("abadjust");}
			return state("nope");
		}
	abclick:
		BRFG A 0{
			if (countinv("PressingFire")>0){A_GiveInventory("AirburstCount",1);}
			else if (countinv("PressingAltFire")>0){A_TakeInventory("AirburstCount",1);}
			return state("abadjust");
		}
	CycleEnd:
		BRFG "#" 1 A_WeaponReady(WRF_NOFIRE)
		goto ready
	fire:
		BRFG A 0 A_JumpIfInventory("LiberatorGrenadeMode",1,1)
		goto firegun
		BRFG A 0 A_JumpIfInventory("LiberatorGrenadeChamber",1,1)
		goto nope
		BRFG A 0 A_PlayWeaponSound ("weapons/grenadeshot")
		BRFG A 0 A_SpawnItemEx("GyroGrenade",0,0,height-6,velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH)
		BRFG A 0 A_TakeInventory("LiberatorGrenadeChamber",1)
		BRFG B 2 A_ZoomFactor(0.99,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		BRFG B 2 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		BRFG A 0 A_Refire
		goto ready
	althold:
		BRFG A 0
		goto nope
	hold:
		BRFG A 0 A_JumpIfInventory("LiberatorGrenadeMode",1,"nope")
		goto super::hold
	altreload:
	reloadgrenade:
		BRFG A 0 A_JumpIfInventory("LiberatorGrenadeChamber",1,"nope")
		BRFG A 0 A_JumpIfInventory("HDRocketAmmo",1,1)
		goto nope
		BRFG A 1 offset(0,34){
			A_SetCrosshair(21);
			A_TakeInventory("IsWeaponReady",999);
		}
		BRFG A 1 offset(-5,40)
		BRFG A 1 offset(-10,50) A_TakeInventory("IsWeaponLong",999)
		BRFG A 1 offset(-15,56)
		BRFG A 4 offset(-14,54){
			A_PlaySound("weapons/pocket",6);
			A_PlaySound("weapons/grenopen",CHAN_WEAPON);
		}
		BRFG AA 8 offset(-16,56) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		BRFG A 18 offset(-14,54) A_PlayWeaponSound ("weapons/rockreload")
		BRFG B 4 offset(-12,50){
			A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
			A_PlayWeaponSound ("weapons/grenopen");
			A_GiveInventory("LiberatorGrenadeChamber",1);
		}
	altreloaddone:
		BRFG A 1 offset(-15,56)
		BRFG A 1 offset(-10,50)
		BRFG A 1 offset(-5,40)
		BRFG A 1 offset(0,34)
		BRFG B 0 A_WeaponReady
		goto nope

	user4:
	unload:
		BRFG A 0 A_JumpIfInventory("LiberatorGrenadeMode",1,"altunload")
		goto super::unload
	altunload:
		BRFG A 0 A_JumpIfInventory("LiberatorGrenadeChamber",1,1)
		goto nope
		BRFG A 1 offset(0,34){
			A_SetCrosshair(21);
			A_TakeInventory("IsWeaponReady");
		}
		BRFG A 1 offset(-5,40)
		BRFG A 1 offset(-10,50) A_TakeInventory("IsWeaponLong",999)
		BRFG A 1 offset(-15,56) A_PlaySound("weapons/grenopen",5)
		BRFG A 8{
			A_PlaySound("weapons/rockreload");
			A_TakeInventory("LiberatorGrenadeChamber",1);
			if(
				(A_JumpIfInventory("HDRocketAmmo",0,"null"))
				||(countinv("PressingUnload")+countinv("PressingReload")<1)
			){
				A_SpawnItemEx("HDRocketAmmo",cos(pitch)*10,0,height-10-10*sin(pitch),velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				return state("altreloaddone");
			}
			A_GiveInventory("HDRocketAmmo",1);
			return state("");
		}
		BRFG AA 10 offset(-15,56) A_PlaySound("weapons/pocket")
		goto altreloaddone


	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("LiberatorGrenadeRiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("LiberatorGrenadeRifle",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("LiberatorGrenadeRiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	}
}



// ------------------------------------------------------------
//   Mags and pickups
// ------------------------------------------------------------

actor LiberatorGrenadeRiflePickup : HDUPK
{
	scale 0.65
	states
	{
	spawn:
		BRFL B 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("LiberatorLoaded",30)
		"----" A 0 A_GiveInventory("LiberatorChamber")
		"----" A 0 A_GiveInventory("LiberatorGrenadeChamber")
		"----" A 0 A_Jump(256,"spawn2")
	spawn2:
		"####" D 0 A_JumpIfInventory("LiberatorNoMag",1,2)
		"####" B 0
		"----" A 1 A_GiveInventory("LiberatorVentHeat",1)
		loop
	takeloop:
		"----" A 0{
			if(countinv("LiberatorLoaded",AAPTR_TARGET)>0){
				A_GiveInventory("LiberatorLoaded",countinv("LiberatorLoaded",AAPTR_TARGET));
				A_TakeFromTarget("LiberatorLoaded");
			}
			if(countinv("LiberatorHeat",AAPTR_TARGET)>0){
				A_GiveInventory("LiberatorHeat",countinv("LiberatorHeat",AAPTR_TARGET));
				A_TakeFromTarget("LiberatorHeat");
			}
			if(countinv("LiberatorChamber",AAPTR_TARGET)>0){
				A_GiveInventory("LiberatorChamber");
				A_TakeFromTarget("LiberatorChamber");
			}
			if(countinv("LiberatorNoMag",AAPTR_TARGET)>0){
				A_GiveInventory("LiberatorNoMag");
				A_TakeFromTarget("LiberatorNoMag");
			}
			if(countinv("LiberatorSpentChamber",AAPTR_TARGET)>0){
				A_GiveInventory("LiberatorSpentChamber");
				A_TakeFromTarget("LiberatorSpentChamber");
			}
			if(countinv("LiberatorZoomDegree",AAPTR_TARGET)>0){
				A_GiveInventory("LiberatorZoomDegree",countinv("LiberatorZoomDegree",AAPTR_TARGET));
				A_TakeFromTarget("LiberatorZoomDegree");
			}
			if(countinv("LiberatorFullAuto",AAPTR_TARGET)>0){
				A_GiveInventory("LiberatorFullAuto");
				A_TakeFromTarget("LiberatorFullAuto");
			}
			return state("takeGL");
		}
	takeGL:
		"----" A 0{
			if(countinv("LiberatorGrenadeChamber",AAPTR_TARGET)>0){
				A_GiveInventory("LiberatorGrenadeChamber");
				A_TakeFromTarget("LiberatorGrenadeChamber");
			}
			return state("spawn2");
		}
	give:
		"----" A 0 A_JumpIfInTargetInventory("LiberatorRifle",1,"spawn")
		"----" A 0 A_JumpIfInTargetInventory("LiberatorGrenadeRifle",1,"spawn")
		"----" A 0 A_PlaySound("misc/w_pkup")
		"----" A 0 A_Jump(256,"give2")
	give2:
		"----" A 0 A_GiveToTarget("LiberatorGrenadeRifle",1)
	givegunloop:
		"----" A 0{
			if(countinv("LiberatorLoaded")>0){
				A_GiveToTarget("LiberatorLoaded",countinv("LiberatorLoaded"));
				A_TakeInventory("LiberatorLoaded");
			}
			if(countinv("LiberatorHeat")>0){
				A_GiveToTarget("LiberatorHeat",countinv("LiberatorHeat"));
				A_TakeInventory("LiberatorHeat");
			}
			if(countinv("LiberatorNoMag")>0){
				A_GiveToTarget("LiberatorNoMag");
				A_TakeInventory("LiberatorNoMag");
			}
			if(countinv("LiberatorChamber")>0){
				A_GiveToTarget("LiberatorChamber");
				A_TakeInventory("LiberatorChamber");
			}
			if(countinv("LiberatorSpentChamber")>0){
				A_GiveToTarget("LiberatorChamber");
				A_TakeInventory("LiberatorChamber");
			}
			if(countinv("LiberatorFullAuto")>0){
				A_GiveToTarget("LiberatorFullAuto");
				A_TakeInventory("LiberatorFullAuto");
			}
			if(countinv("LiberatorZoomDegree")>0){
				A_GiveToTarget("LiberatorZoomDegree",countinv("LiberatorZoomDegree"));
				A_TakeInventory("LiberatorZoomDegree");
			}
			return state("giveGL");
		}
	giveGL:
		"----" A 0{
			if(countinv("LiberatorGrenadeChamber")>0){
				A_GiveToTarget("LiberatorGrenadeChamber");
				A_TakeInventory("LiberatorGrenadeChamber");
			}
			return state("givegunloopend");
		}
	}
}
actor LiberatorRiflePickup : LiberatorGrenadeRiflePickup
{
	states
	{
	spawn:
		BRFL A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("LiberatorLoaded",30)
		"----" A 0 A_GiveInventory("LiberatorChamber")
		"----" A 0 A_Jump(256,"spawn2")
	spawn2:
		"####" C 0 A_JumpIfInventory("LiberatorNoMag",1,2)
		"####" A 0
		"----" A 1 A_GiveInventory("LiberatorVentHeat",1)
		loop
	takeGL:
		"----" A 0 A_Jump(256,"spawn2")
	give2:
		"----" A 0 A_GiveToTarget("LiberatorRifle",1)
		goto givegunloop
	givegunGL:
		"----" A 0 A_Jump(256,"givegunloopend")
	}
}

actor LiberatorMagP : HDUPK replaces LiberatorMag
{
	scale 0.7
	states
	{
	spawn2:
		RMAG A -1{
			if(countinv("SevenMilAmmo")<1){
				A_SpawnItemEx("LiberatorEmptyMag",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
				return state("null");
			}
			return state("");
		}
	spawn:
		RMAG A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("SevenMilAmmo",30)
		"----" A 0 A_Jump(256,"spawn2")
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("LiberatorLoaded",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("LiberatorLoaded",1)
		"----" A 0 A_GiveInventory("SevenMilAmmo",1)
		loop
	give:
		"----" A 0 A_JumpIfInventory("SevenMilAmmo",30,"givemag")
		"----" A 0 A_JumpIfInTargetInventory("SevenMilAmmo",0,"spawn")
		"----" A 0 A_Jump(256,"giveloop")
	giveloop:
		"----" A 0 A_JumpIfInTargetInventory("SevenMilAmmo",0,"spawn")
		"----" A 0 A_GiveToTarget("SevenMilAmmo",1)
		"----" A 0 A_TakeInventory("SevenMilAmmo",1)
		"----" A 0 A_JumpIfInventory("SevenMilAmmo",1,"giveloop")
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	givemag:
		"----" A 0 A_JumpIfInTargetInventory("LiberatorMag",0,"spawn")
		"----" A 0 A_GiveToTarget("LiberatorMag",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
