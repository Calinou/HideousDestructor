actor EnemyDERP:IdleDummy{
	+ismonster translation 1
	states{
	spawn:
		TNT1 A 0 nodelay{
			A_GiveInventory("DERPAmmo",15);
			A_GiveInventory("DERPMode",2);
			A_SpawnItemEx("DERPBot",0,0,0,0,0,0,random(1,360),SXF_SETMASTER|SXF_TRANSFERTRANSLATION);
			if(!A_CheckFlag("friendly","null")){A_GiveToChildren("Unfriendlier",1);}
		}
	spawn2:
		TNT1 A 10
		TNT1 A 0 A_JumpIfInventory("DERPAmmo",1,"spawn2")
		stop
	}
}
actor Unfriendlier:ActionItem{
	states{
	pickup:
		TNT1 A 0 A_ChangeFlag("friendly",0)
		fail
	}
}


actor HDAI9m:fastprojectile{
	damage(0) decal none seesound "none" missiletype "none"
	+seekermissile -hittracer +hitmaster
	obituary "%o looked at a DERP wrong." //why did I do this
	mass 420
	states{
	spawn:
		TNT1 A 0
		TNT1 A 2{
			A_ChangeVelocity(cos(-pitch)*mass,0,sin(-pitch)*mass,CVF_RELATIVE);
		}stop
	xdeath:
		TNT1 A 0{
			if(IsPointerEqual(AAPTR_MASTER,AAPTR_TRACER)){
				A_GiveToTarget("IsWeaponReady");
			}
		}
		stop
	death:
		TNT1 A 0
		stop
	}
}



// ------------------------------------------------------------
//   D.E.R.P. Robot
// ------------------------------------------------------------
actor DERPBot:ZEDDERP{
	states
	{
	spawn:
		DERP A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_MASTER,true),"takeloop")
		"----" A 0 A_GiveInventory("DERPAmmo",15)
		"----" A 0 A_Jump(256,"spawn2")
	takeloop:
		"----" A 0{A_JumpIfInTargetInventory("DERPAmmo",1,2);
			if(countinv("DERPAmmo",AAPTR_TARGET)>0){
				A_GiveInventory("DERPAmmo",countinv("DERPAmmo",AAPTR_TARGET));
				A_TakeFromTarget("DERPAmmo");
				return state("spawn2");
			}
			return state("spawn2");
		}
	give:
		"----" A 0 A_JumpIfHealthLower(1,2)
		"----" A 0 A_JumpIfInTargetInventory("DERPUsable",1,"giveunload")
		goto givegun
		"----" A 0 A_JumpIfInTargetInventory("DERPDEAD",1,"giveunload")
		goto givegun
	giveunload:
		"----" A 2{
			if(countinv("DERPAmmo")<1){return state("spawn");}
			A_PlaySound("derp/crawl",CHAN_AUTO);
			A_SpawnItemEx("HD9mDmag",0,0,0,1,random(-1,1),2,0,SXF_SETTARGET);
			return state("");
		}
		"----" A 0 A_PlaySound("weapons/rifleclick",CHAN_AUTO)
		goto spawn
	givegun:
		"----" A 0{
			A_PlaySound("derp/crawl",CHAN_AUTO);
			A_PlaySound("weapons/rifleclick2",CHAN_AUTO);
			if(health<1){A_GiveToTarget("DERPDEAD");}
			else{A_GiveToTarget("DERPUsable");}
			if(countinv("DERPAmmo")>=15){
				if(A_JumpIfInTargetInventory("HDPistolMag",0,"null")){
					A_SpawnItemEx("HDPistolMag",3,random(-3,3),0);
				}else{A_GiveToTarget("HDPistolMag");}
			}else{
				A_GiveToTarget("HDPistolAmmo",countinv("DERPAmmo"));
			}
		}stop
	spawn2:
		DERP A 10 A_ClearTarget
		goto patrol
	patrol:
		DERP A 3{
			A_ClearTarget;
			A_LookEx(LOF_NOSOUNDCHECK, 0,512, 0,200, "see");
			if(countinv("DERPmode",AAPTR_MASTER)==0){ //turret
				A_SetAngle(angle+20);
			}else if(countinv("DERPmode",AAPTR_MASTER)>1){ //follow or patrol
				A_Wander;
				A_Recoil(-0.3);
			}
			//ambush(1) does nothing, not even make noise
			if(countinv("DERPmode",AAPTR_MASTER)!=1){
				A_PlaySound("derp/crawl",CHAN_BODY);
			}
		}loop
	see:
		DERP A 0{
			if(getzat(0)<z){A_ChangeFlag("nodropoff",0);}
			else{A_ChangeFlag("nodropoff",1);}
		}
		DERP A 0{
			if(countinv("HDKillCount")){
				DerpAlert("\cf  Hostile eliminated.");
				A_TakeInventory("HDKillCount");
				return state("patrol");
			}
			if(countinv("DERPAmmo")<1){return state("noammo");}
			return state("");
		}
		DERP AAAAAAAA 3{
			if(countinv("DERPmode",AAPTR_MASTER)==0){ //turret
				A_Chase("missile","missile",CHF_DONTMOVE|CHF_DONTTURN);
			}else if(countinv("DERPmode",AAPTR_MASTER)==2){ //patrol
				A_Chase;
				A_Recoil(-0.3);
			}else if(countinv("DERPmode",AAPTR_MASTER)==3){ //follow
				A_Wander;
				A_Recoil(-0.3);
			}
			//ambush(1) does nothing, not even make noise
			if(countinv("DERPmode",AAPTR_MASTER)!=1){
				A_PlaySound("derp/crawl",CHAN_BODY);
			}
		}
		goto patrol
	noshot:
		DERP AAAAAAA 4{
			if(countinv("DERPmode",AAPTR_MASTER)>1){
				A_Wander;
				A_Recoil(-0.4);
				A_PlaySound("derp/crawl",CHAN_BODY,0.6);
			}
		}goto see
	pain:
		DERP A 20{
			A_SetPitch(pitch+random(10,20));
			A_PlaySound("derp/crawl",CHAN_BODY);
			A_SetAngle(angle+randompick(1,-1)*random(2,8)*10);
			A_ChangeVelocity(0,0,2);
		}
	missile:
		DERP A 0{
			//abort shot if ambush or follow
			if(countinv("DERPmode",AAPTR_MASTER)==1){return state("patrol");}
			if(countinv("DERPmode",AAPTR_MASTER)==3){return state("patrol");}
			return state("");
		}
		DERP A 0 A_CheckLOF("noshot",CLOFF_SKIPTARGET|CLOFF_JUMPFRIEND|CLOFF_JUMPNONHOSTILE|CLOFF_JUMPOBJECT|CLOFF_NOAIM, 0,0, 0,0, 7,0)
	missile1:
		DERP A 0 A_PlaySound("derp/crawl",CHAN_BODY,0.6)
		DERP AAA 1 A_FaceTarget(30,30,0,0,FAF_TOP,-4)
		DERP A 0 A_JumpIfTargetInLOS(1,1)
		loop
		DERP A 2{
			if(DerpTargetCheck(false)){A_GiveInventory("IsWeaponReady");}
			else{A_TakeInventory("IsWeaponReady");}
		}
		DERP A 0{
			if(!countinv("IsWeaponReady")){return state("noshot");}
			return state("");
		}
		DERP A 0 DerpAlert("\cj  Engaging hostile.")
	missile2:
		DERP A 0 A_JumpIfHealthLower(1,"dead")
		DERP A 0 A_JumpIfInventory("DERPAmmo",1,1)
		goto noammo
		DERP A 0 A_FaceTarget(0.5,0.5,0,0,FAF_TOP,-4)
		DERP C 1 bright light("SHOT"){DerpShot();}
		DERP D 1 A_SpawnItemEx("HDSpent9mm", -3,1,-1, random(-1,-3),random(-1,1),random(-3,-4), 0,SXF_NOCHECKPOSITION|SXF_SETTARGET)
		DERP A 2{
			if(getzat(0)<z){A_ChangeVelocity(cos(pitch)*-2,0,sin(pitch)*2,CVF_RELATIVE);}
			else{A_ChangeVelocity(cos(pitch)*-0.4,0,sin(pitch)*0.4,CVF_RELATIVE);}
			A_TakeInventory("DERPAmmo",1);
		}
		DERP A 1{
			A_FaceTarget(10,10,0,0,FAF_TOP,-4);
			if(countinv("HDKillCount")){
				DerpAlert("\cf  Hostile eliminated.");
				A_TakeInventory("HDKillCount");
			}
		}
	missile3:
		DERP A 0 A_JumpIfHealthLower(1,"patrol",AAPTR_TARGET)
		DERP A 0 A_JumpIfTargetInLOS("missile2",2,JLOSF_DEADNOJUMP,256.0,0)
		DERP A 0 A_JumpIfTargetInLOS("missile1",360,JLOSF_DEADNOJUMP,512.0,0)
		goto noshot
		DERP A 0 A_CheckLOF("noshot",CLOFF_SKIPTARGET|CLOFF_JUMPNONHOSTILE|CLOFF_JUMPOBJECT, 0,0, 0,0, 7,0)
		goto missile2
	death:
		DERP A 0{
			if(checkclass("EnemyDERP",AAPTR_MASTER)){A_Remove(AAPTR_MASTER,RMVF_MISC);}
			else{DerpAlert("\cg  Operational fault.\cj Standby for repairs.");}
			A_PlaySound("weapons/bigcrack",CHAN_AUTO);
			A_SpawnItemEx("HDSmoke",0,0,1, velx,vely,velz+1, 0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
			A_SetSolid;
		}
		DERP AAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("BigWallChunk",random(-6,6),random(-6,6),random(0,6), velx+random(-3,3),vely+random(-3,3),velz+random(1,4),0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
	dead:
		DERP A -1
		TNT1 A 0 A_SpawnItemEx("DERPDEADPickup",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
		stop
	noammo:
		DERP A 10{
			A_ClearTarget;
			DerpAlert("\cj  Out of ammo. Await retrieval.");
			A_ChangeFlag("nodropoff",1);
		}
	chasemaster:
		DERP A 10 A_JumpIfMasterCloser(128,1)
		loop
		DERP A 0 A_JumpIfMasterCloser(32,2)
		DERP A 4{
			A_FaceMaster(30,0);
			A_PlaySound("derp/crawl",CHAN_BODY);
			A_Recoil(-0.4);
		}loop
		DERP A 10
		loop
	}
}
actor HD9mDmag:HD9mPmag{
	states{
	spawn:
		CLP2 A 0 A_Stop
		"----" A 0 A_SetUserVar(user_cap,15)
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
	takeloop:
		"----" A 0{
			A_GiveInventory("HDPistolAmmo",countinv("DERPAmmo",AAPTR_TARGET));
			A_TakeFromTarget("DERPAmmo");
		}goto spawn2
	}
}
actor DERPUsable:ActionItem{
	+inventory.invbar
	-inventory.untossable
	+inventory.persistentpower
	inventory.amount 1
	inventory.maxamount 1
	inventory.interhubamount 1
	inventory.icon DERPEX
	inventory.pickupmessage "Picked up a Defence, Engagement, Reconnaissance and Patrol robot."
	translation 0
	states
	{
	pickup:
		TNT1 A 0{
			A_GiveInventory("DERPterm");
			A_GiveInventory("DERPATTog");
			A_GiveInventory("DERPtermTURRET");
			A_GiveInventory("DERPtermAMBUSH");
			A_GiveInventory("DERPtermPATROL");
			A_GiveInventory("DERPtermFOLLOW");
		}stop
	use:
		TNT1 A 0 A_JumpIfInventory("HDPistolMag",1,"load")
		TNT1 A 0 A_JumpIfInventory("HDSMGMag",1,"loadsmg")
		TNT1 A 0 A_Print("\cd[DERP]\cj  Please insert a loaded 9mm magazine before deploying.")
		fail
	loadsmg:
		TNT1 A 0{
			A_PlaySound("weapons/rifleclick",CHAN_AUTO);
			A_TakeInventory("HDSMGMag",1,TIF_NOTAKEINFINITE);
			A_GiveInventory("DERPAmmo",15);
			A_DropItem("HDPistolMag");
		}goto useend
	load:
		TNT1 A 0{
			A_TakeInventory("HDPistolMag",1,TIF_NOTAKEINFINITE);
			A_GiveInventory("DERPAmmo",15);
		}goto useend
	useend:
		TNT1 A 0{
			ACS_NamedExecuteAlways("CarryLimit",0,0,0);
			A_SpawnItemEx("DERPBot",12,0,height-12, velx+cos(angle)*cos(pitch)*6,vely+sin(angle)*cos(pitch)*6,velz-sin(pitch)*6, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_ABSOLUTEMOMENTUM|SXF_SETMASTER|SXF_TRANSFERTRANSLATION|SXF_SETTARGET);
		}stop
	spawn:
		TNT1 A 1
		TNT1 A 0 A_SpawnItemEx("DERPPickupEmpty",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
		stop
	}
}
actor DERPPickup:DERPBot{
	-ismonster -shootable
	translation 3 scale 0.6
	states
	{
	spawn:
	spawn2:
		DERP A 0 A_Stop
		DERP A 0 A_GiveInventory("Clip",1)
		DERP A -1 A_GiveInventory("DERPAmmo",15)
		stop
	}
}
actor DERPPickupEmpty:DERPPickup replaces DERPUsable{
	states{
	spawn:
	spawn2:
		DERP A 0 A_Stop
		DERP A -1 A_GiveInventory("Clip")
		stop
	}
}
actor DERPAmmo:Ammo{
	inventory.maxamount 15
	ammo.backpackmaxamount 15
	ammo.backpackamount 0 +inventory.ignoreskill +inventory.untossable
}
actor DERPDEAD:Inventory{
	+nointeraction
	states{
	spawn:
		TNT1 A 0 nodelay A_SpawnItemEx("DERPDEADPickup",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
		stop
	}
}
actor DERPDEADPickup:HDUPK{
	scale 0.6
	states{
	spawn:
		DERP A -1 A_Stop
	give:
		"----" A 0 A_JumpIfInventory("DERPDEAD",0,"spawn",AAPTR_TARGET)
		"----" A 0 A_GiveInventory("DERPDEAD",1,AAPTR_TARGET)
		"----" A 0 A_PlaySound("weapons/grenopen")
		stop
	}
}

actor DERPmode:InventoryFlag{
	inventory.maxamount 999
}
actor DERPterm:ActionItem{
	states{
	use:
		TNT1 A 0 A_Print("\cd[DERP]\cj List of available commands:\n             derpt   \cjengage turret mode\n             derpp   \cjengage patrol mode\n             derptz   \cjpassive turret mode\n             derppz   \cjpassive patrol mode")
		fail
	}
}
actor DERPATTog:ActionItem{
	states{
	use:
		TNT1 A 0{
			if(countinv("DERPmode")==1){
				A_TakeInventory("DERPmode");
				A_Print("\cd[DERP]\ca  TURRET \cjmode");
			}else{
				A_TakeInventory("DERPmode");
				A_GiveInventory("DERPmode",1);
				A_Print("\cd[DERP]\cc  AMBUSH \cjmode");
			}
		}
	}
}
actor DERPtermTURRET:ActionItem{
	states{
	use:
		TNT1 A 0{
			A_TakeInventory("DERPmode");
			return state("use2");
		}
	use2:
		TNT1 A 0{
			A_Print("\cd[DERP]\ca  TURRET \cjmode");
		}fail
	}
}
actor DERPtermAMBUSH:DERPtermTURRET{
	states{
	use2:
		TNT1 A 0{
			A_GiveInventory("DERPmode",1);
			A_Print("\cd[DERP]\cc  AMBUSH \cjmode");
		}fail
	}
}
actor DERPtermPATROL:DERPtermTURRET{
	states{
	use2:
		TNT1 A 0{
			A_GiveInventory("DERPmode",2);
			A_Print("\cd[DERP]\cg  PATROL \cjmode");
		}fail
	}
}
actor DERPtermFOLLOW:DERPtermTURRET{
	states{
	use2:
		TNT1 A 0{
			A_GiveInventory("DERPmode",3);
			A_Print("\cd[DERP]\cj  FOLLOW \cjmode");
		}fail
	}
}
