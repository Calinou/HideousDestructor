// ------------------------------------------------------------
//   Chainsaw
// ------------------------------------------------------------

actor Lumberjack : HDWeapon //replaces Chainsaw
{
	game Doom
	weapon.selectionorder 801
	weapon.slotnumber 1
	weapon.upsound ""
	weapon.readysound ""
	+weapon.noalert
	weapon.bobstyle Alpha
	weapon.bobrangex 0.2
	weapon.bobrangey 1.2
	weapon.bobspeed 1.8
	weapon.ammotype1 "LumberCell"
	weapon.ammotype2 "HDCellPacks"
	weapon.kickback 2
	scale 0.6
	inventory.pickupmessage "You got the chainsaw! Go find some meat!"
	states
	{
	Ready:
		BEVG C 0 A_TakeInventory("WasChoppingFlesh")
		BEVG C 0 A_JumpIfInventory("SawOn",1,"Ready2")
		BEVG C 1{
			A_GiveInventory("IsWeaponBFG",1);
			A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWUSER4);
		}goto ReadyEnd
	Ready2:
		BEVG CD 3{
			A_GiveInventory("IsWeaponBFG",1);
			A_TakeInventory("SawOn",1);
			if((countinv("SawOn")>4)&&(countinv("LumberCell")>400)){  
				A_SetTics(2);
				A_PlayWeaponSound("weapons/sawfull");
			}else if((countinv("SawOn")>1)&&(countinv("LumberCell")>100)){
				A_PlayWeaponSound("weapons/sawidle");
			}else{
				A_SetTics(random(2,4));
				A_PlayWeaponSound("weapons/sawidle");
			}
			A_WeaponReady;
		}
		goto ReadyEnd
	select0:
		BEVG A 0 A_TakeInventory("SawOn")
		goto select0bfg
	deselect0:
		BEVG A 0 A_TakeInventory("SawOn")
		goto deselect0bfg
		TNT1 A 0 A_JumpIfInventory("NulledWeapon",1,"Deselect1")
	hold:
		BEVG A 0 A_JumpIfInventory("LumberCell",1,"Saw")
		goto nope
	Fire:
		BEVG C 2
		BEVG C 4 A_JumpIfInventory("LumberCell",1,"Saw")
		goto beatdown
	Saw:
		BEVG AB 1{
			A_GiveInventory("SawOn",1);
			if(!random(0,3)){A_TakeInventory("LumberCell",1);}
			if(countinv("LumberCell")<61){A_GiveInventory("LumberEmptyCell",1);}
			if((countinv("LumberCell")>450)&&(countinv("SawOn")>11)){  
				ACS_NamedExecuteAlways("MuzzleClimb",0,(random(0,1)*2-1)*random(3,8),(random(0,1)*2-1)*random(3,12));
				A_Saw("weapons/sawfull","weapons/sawhit",5,"HDSawPuff");
				A_FireCustomMissile("HDSawGibber");
				A_AlertMonsters;
			}else if((countinv("LumberCell")>150)&&(countinv("SawOn")>6)){
				ACS_NamedExecuteAlways("MuzzleClimb",0,(random(0,1)*2-1)*random(1,4),(random(0,1)*2-1)*random(2,6));
				A_Saw("weapons/sawfull","weapons/sawhit",3,"HDSawPuff");
				A_FireCustomMissile("HDSawGibber");
				A_SetTics(2);
				A_AlertMonsters;
			}else if((countinv("LumberCell")>40)&&(countinv("SawOn")>1)){
				ACS_NamedExecuteAlways("MuzzleClimb",0,(random(0,1)*2-1)*random(1,4),(random(0,1)*2-1)*random(2,6));
				A_Saw("weapons/sawfull","weapons/sawhit",1,"HDSawPuff");
				if(random(1,2)==1){A_FireCustomMissile("HDSawGibber");}
				A_SetTics(random(2,4));
				A_AlertMonsters;
			}else{
				ACS_NamedExecuteAlways("MuzzleClimb",0,random(-2,2),random(-2,2));
				A_PlaySound("weapons/sawidle",CHAN_WEAPON);
				A_FireCustomMissile("HDSawPuffShitty");
				A_SetTics(random(3,6));
				if(random(1,3)==1){A_GiveInventory("LumberCell",1);} //slow drain
			}
		}
		BEVG B 0 A_Refire
		goto ready
	Hold:
		BEVG C 0 A_JumpIfInventory("LumberCell",1,"Saw")
		goto beatdown
		BEVG A 0 A_JumpIfInventory("LumberCell",1,"Saw")
		goto nope

	altfire:
	beatdown:
		BEVG C 0 A_TakeInventory("IsWeaponBFG")
		BEVG C 0 A_JumpIfInventory("PowerStrength",1,"beatdownstrong")
		BEVG C 1 offset(0,33)
		BEVG C 1 offset(0,32)
		BEVG DC 1 A_SetPitch(pitch-1,SPF_INTERPOLATE)
		BEVG DC 2 A_SetPitch(pitch-1,SPF_INTERPOLATE)
		BEVG CC 2 A_SetPitch(pitch-2,SPF_INTERPOLATE)
		BEVG C 0 A_Refire("beatdown2")
		goto whack
	beatdownstrong:
		BEVG D 1 A_SetPitch(pitch-4,SPF_INTERPOLATE)
		BEVG C 1 A_SetPitch(pitch-6,SPF_INTERPOLATE)
		BEVG C 1 A_SetPitch(pitch-8,SPF_INTERPOLATE)
		BEVG C 0 A_Refire("beatdown2")
		goto whack
	althold:
	beatdown2:
		BEVG C 1{
			A_SetAngle(angle+frandom(-0.1,0.08),SPF_INTERPOLATE);
			A_SetPitch(pitch+frandom(-0.05,0.1),SPF_INTERPOLATE);
		}
		BEVG C 0 A_Refire("beatdown2")
	whack:
		BEVG D 1 A_JumpIf(pitch>25,"nowhack")
		BEVG AB 1 offset(0,36) A_SetPitch(pitch+10,SPF_INTERPOLATE)
		BEVG AAAAA 0 A_CustomPunch(random(1,5),0,0,"HDNullPuff",46)
		BEVG A 1 offset(0,35){
			if(countinv("PowerStrength")>0){A_CustomPunch(random(10,20),0,0,"HDNullPuff",46);}  
			A_SetPitch(pitch+10,SPF_INTERPOLATE);
		}
		BEVG B 2 offset(0,34)
		BEVG C 2 offset(0,33)
	nowhack:
		BEVG C 2 offset(0,32)
		BEVG CCCCC 1 A_WeaponReady(WRF_NOFIRE)
		BEVG C 0 A_JumpIfInventory("PowerStrength",1,6)
		BEVG CCCCC 1 A_WeaponReady(WRF_NOFIRE)
		BEVG C 0 A_Refire("beatdown2")
		goto ready

	reload:
		BEVG C 0{
			if(
				(countinv("LumberCell")>1140)  
				||(countinv("HDCellPacks")+countinv("HDCellAmmo")<1)
			){return state("nope");}
			return state("unmag");
		}

	user4:
	unload:
		BEVG C 0{
			if(countinv("LumberCell")+countinv("LumberEmptyCell")<1){
				return state("nope");
			}A_GiveInventory("JustUnloading");return state("");
		}
	unmag:
		BEVG A 1 offset(0,33)
		BEVG A 1 offset(0,35)
		BEVG A 1 offset(0,37)
		BEVG A 1 offset(0,39)
		BEVG A 2 offset(0,44)
		BEVG A 2 offset(0,52)
		BEVG A 3 offset(2,62)
		BEVG A 4 offset(4,74)
		BEVG A 7 offset(6,78) A_PlayWeaponSound("weapons/rifleload")
		BEVG A 0{
			A_PlayWeaponSound("weapons/grenopen");
			if(
				(countinv("PressingUnload")+countinv("PressingReload")<1)
				||(countinv("HDCellAmmo")>AmmoCap("HDCellAmmo")-countinv("LumberCell")/60)      
				||(
					(countinv("LumberCell")>=1200)  
					&&(A_JumpIfInventory("HDCellPacks",0,"null"))
				)
				||((countinv("LumberCell")<1)&&(A_JumpIfInventory("HDCellPackEmpty",0,"null")))
			){
				return state("dropmag");
			}
			return state("pocketmag");
		}
	dropmag:
		BEVG A 0{
			if(countinv("LumberEmptyCell")+countinv("LumberCell")>0){A_SpawnItemEx("HDCelXS",cos(pitch)*10,0,height-10-10*sin(pitch),velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
		}goto magout
	pocketmag:
		BEVG A 6 offset(7,80){
			A_PlaySound("weapons/pocket");
			ACS_NamedExecuteAlways("MuzzleClimb",0,(random(0,1)*2-1)*random(3,8),(random(0,1)*2-1)*random(3,12));
			if(countinv("LumberCell")>1140){A_GiveInventory("HDCellPacks");}
			else if(countinv("LumberCell")>60){A_GiveInventory("HDCellAmmo",countinv("LumberCell")/60);}          
			else{A_GiveInventory("HDCellPackEmpty");}
			A_TakeInventory("LumberCell");
		}
		BEVG A 7 offset(6,81) A_PlaySound("weapons/pocket")
		goto magout

	magout:
		BEVG A 0 A_TakeInventory("LumberEmptyCell")
		BEVG A 0 A_JumpIfInventory("JustUnloading",1,"reloadend")
	loadmag:
		BEVG A 4 offset(7,79) ACS_NamedExecuteAlways("MuzzleClimb",0,(random(0,1)*2-1)*random(3,8),(random(0,1)*2-1)*random(3,12))
		BEVG A 2 offset(6,78) A_PlaySound("weapons/pocket")
		BEVG AA 5 offset(5,76) ACS_NamedExecuteAlways("MuzzleClimb",0,(random(0,1)*2-1)*random(3,8),(random(0,1)*2-1)*random(3,12))
		BEVG A 0{
			if(countinv("HDCellPacks")>0){          
				A_GiveInventory("LumberCell",1200);
				A_TakeInventory("HDCellPacks",1,TIF_NOTAKEINFINITE);
			}else{
				A_TakeInventory("Counter");
				A_GiveInventory("Counter",random(1,20));
				if(countinv("Counter")>countinv("HDCellAmmo")){          
					A_TakeInventory("Counter",countinv("Counter")-countinv("HDCellAmmo"));
				}
				A_GiveInventory("LumberCell",countinv("Counter")*60);
				A_TakeInventory("HDCellAmmo",countinv("Counter"),TIF_NOTAKEINFINITE);
			}
			A_TakeInventory("LumberEmptyCell");
		}
	reloadend:
		BEVG A 6 offset(5,72)
		BEVG A 5 offset(4,74) A_PlayWeaponSound("weapons/huntopen")
		BEVG A 4 offset(2,62)
		BEVG A 3 offset(0,52)
		BEVG A 4 offset(0,44)
		BEVG A 1 offset(0,37)
		BEVG A 1 offset(0,35)
		BEVG C 1 offset(0,33)
		goto ready



	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("LumberjackPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("Lumberjack",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("LumberjackPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	}
}
actor LumberjackPickup : HDUPK replaces Chainsaw
{
	scale 0.4
	states
	{
	spawn:
		CSAW A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("LumberCell",1200)
		"----" A 0 A_Jump(256,"spawn2")
	takeloop:
		"----" A 0{
			if(countinv("LumberCell",AAPTR_TARGET)>0){            
				A_GiveInventory("LumberCell",countinv("LumberCell",AAPTR_TARGET));
				A_TakeFromTarget("LumberCell",countinv("LumberCell",AAPTR_TARGET));
			}
		}goto spawn2
	give:
		"----" A 0 A_JumpIfInTargetInventory("Lumberjack",1,"spawn")
	givegun:
		"----" A 0 A_PlaySound("misc/w_pkup")
		"----" A 0 A_GiveToTarget("Lumberjack",1)
	givegunloop:
		"----" A 0{
			if(countinv("LumberCell")>0){  
				A_GiveToTarget("LumberCell",countinv("LumberCell"));
				A_TakeInventory("LumberCell",countinv("LumberCell"));
			}
		}goto givegunloopend
	}
}
actor HDSawPuff
{
	damagetype "Chainsaw"
	decal "BulletChipSmall"
	+puffonactors
	+bloodsplatter
	+puffgetsowner
	+nointeraction
	height 1
	radius 1
	states
	{
	spawn:
		TNT1 A 0 nodelay
		TNT1 A 0 A_TakeInventory("LumberCell",1,AAPTR_TARGET)
		TNT1 A 1 A_ChangeVelocity(1,0,-1,CVF_RELATIVE)
		TNT1 A 0 A_GiveInventory("WasChoppingFlesh",1,AAPTR_TARGET)
		stop
	crash:
		TNT1 A 0 A_GiveInventory("SawJerk",1,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("LumberCell",1,AAPTR_TARGET)
		TNT1 A 0 A_SpawnItemEx("BulletPuffMedium",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
		stop
	}
}
actor HDSawPuffShitty:FastProjectile
{
	projectile damage (0) speed 1 height 1 radius 2
	states
	{
	spawn:
		TNT1 A 0
		TNT1 A 1 A_ScaleVelocity(42)
		stop
	death:
		TNT1 A 10 A_PlaySound("weapons/rifleclick",0,0.4)
		stop
	xdeath:
		TNT1 A 10 A_PlaySound("weapons/pocket",0,0.4)
		stop
	}
}
actor SawJerk : ActionItem
{
	states
	{
	pickup:
		TNT1 A 0 A_JumpIfInventory("WasChoppingFlesh",1,1)
		goto lite
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-6,10)*10,random(-10,30)*10)
		TNT1 A 0 A_Jump(196,2)
		TNT1 A 0 A_Recoil(random(-1,2))
		TNT1 A 0 A_Jump(240,2)
		TNT1 A 0 A_DamageSelf(1,"smallarms0")
		TNT1 A 0
		fail
	lite:
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-6,10),random(-10,30))
		fail
	}
}
actor WasChoppingFlesh : InventoryFlag {}
actor SawOn:InventoryFlag{inventory.maxamount 12}
actor LumberEmptyCell : InventoryFlag{}
actor LumberCell : Ammo
{
	inventory.maxamount 1200
	ammo.backpackmaxamount 1200
	+inventory.ignoreskill +inventory.untossable ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor HDSawGibber : fastprojectile
{
	projectile speed 1 height 2 radius 2 +hittarget +bloodsplatter
	states
	{
	spawn:
		TNT1 A 0 nodelay
		TNT1 A 0 A_ScaleVelocity(64)
		TNT1 A 1
		stop
	xdeath:
		TNT1 A 1 A_GiveInventory("SawGib",random(2,3),AAPTR_TARGET)
		stop
	}
}
actor BlastGib : ActionItem
{
	states
	{
	pickup:
		TNT1 A 0 A_CheckFlag("shootable","check")
		goto nogo
	check:
		TNT1 A 0 A_JumpIfHealthLower(1,2)
	nogo:
		TNT1 A 0 A_TakeInventory("SawGib")
		fail
		TNT1 A 0 A_GiveInventory("SawGib",random(20,90))
		TNT1 A 0 A_ChangeVelocity(frandom(-0.1,0.1),frandom(-0.1,0.1),frandom(0.6,2.4)*(1+3*random(0,random(0,random(0,1)))))
		stop
	}
}
actor ZerkGib : ActionItem
{
	states
	{
	pickup:
		TNT1 A 0 A_CheckFlag("shootable","check")
		goto nogo
	check:
		TNT1 A 0 A_JumpIfHealthLower(1,2)
	nogo:
		TNT1 A 0 A_TakeInventory("SawGib")
		fail
		TNT1 A 0 A_GiveInventory("SawGib",random(30,40))
		TNT1 A 0 A_ChangeVelocity(frandom(-0.1,0.1),frandom(-0.1,0.1),frandom(0.2,1.4)*(1+3*random(0,random(0,random(0,1)))))
		stop
	}
}




