// ------------------------------------------------------------
// Rifle
// ------------------------------------------------------------
actor ZM66GrenadeRifle:HDWeapon{
+weapon.cheatnotweapon
	game Doom
	Weapon.SelectionOrder 20
	weapon.ammotype1 ZM66Loaded
	weapon.ammotype2 ZM66RifleMags
	weapon.kickback 20
	weapon.slotnumber 4
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You got the GL-mounted rifle!"
	radius 20
	height 16
	scale 0.65
	weapon.bobrangex 0.22
	weapon.bobrangey 0.9
	Obituary "%o was shot up by %k."
	States 
	{
	Ready:
		RIFG A 0{
		}
		RIFG A 1{
			A_GiveInventory("IsWeaponShort",1);
			if(
				(countinv("ZM66Heat")>21)
				&&(countinv("ZM66BrokenRound")<1)
				&&(countinv("ZM66Chamber")>0)    
			){return state("cookoff");}
			A_GiveInventory("IsWeaponReady",1);
			A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD|WRF_ALLOWUSER1|WRF_ALLOWUSER2|WRF_ALLOWUSER4);
			A_TakeInventory("ZM66Ratchet");
			A_GiveInventory("NotShot",1);
			return state("");
		}
	readyend:
		RIFG A 0{
			A_TakeInventory("ZM66RoundCounter");
			if(countinv("ZM66JailbrokenMag")>0)    
				{A_GiveInventory("ZM66RoundCounter",random(1,99));}
			else if(countinv("ZM66Loaded")+countinv("ZM66Chamber")>0)
				{A_GiveInventory("ZM66RoundCounter",countinv("ZM66Loaded")+countinv("ZM66Chamber"));}
		}goto super::readyend
	User2:
	FireMode:
		RIFG A 0 A_JumpIfInventory("ZM66GLMode",1,"abadjust")
		RIFG A 1{
			if(countinv("ZM66FullAuto")==2){A_TakeInventory("ZM66FullAuto",2);}
			else{A_GiveInventory("ZM66FullAuto",1);}
			A_WeaponReady(WRF_NOFIRE);
		}
		goto nope
	abadjust:
		RIFG A 2 A_WeaponReady(WRF_NOFIRE)
		RIFG A 0{
			A_GiveInventory("WeaponBusy",1);
			if (countinv("PressingFire")+countinv("PressingAltfire")>0){
				return state("abclick");
			}else if(countinv("PressingZoom")>0){
				A_TakeInventory("AirburstCount");
				return state("nope");
			}else if(countinv("PressingFireMode")>0){return state("abadjust");}
			return state("nope");
		}
	abclick:
		RIFG A 0{
			if (countinv("PressingFire")>0){A_GiveInventory("AirburstCount",1);}
			else if (countinv("PressingAltFire")>0){A_TakeInventory("AirburstCount",1);}
			return state("abadjust");
		}

	select0:
		RIFG A 0{
			A_TakeInventory("ZM66RoundCounter");
			A_TakeInventory("ZM66GLMode");
		}
		RIFG A 0 A_JumpIfInventory("ZM66GrenadeRifle",1,"select0big")
		goto select0small
	deselect0:
		RIFG A 0{
			if(
				countinv("ZM66Heat")>27
				&&!countinv("ZM66BrokenRound")
				&&(countinv("ZM66Loaded")+countinv("ZM66Chamber"))
			){
				if(countinv("ZM66GrenadeRifle")){A_DropInventory("ZM66GrenadeRifle");}
				if(countinv("ZM66SemiRifle")){A_DropInventory("ZM66SemiRifle");}
				if(countinv("ZM66Rifle")){A_DropInventory("ZM66Rifle");}
			}
		}
		RIFG A 0 A_JumpIfInventory("ZM66GrenadeRifle",1,"deselect0big")
		goto deselect0small
	gunrecoil:
		TNT1 A 1 A_ZoomFactor(0.99-0.01*countinv("ZM66Ratchet"),ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		TNT1 A 1 ACS_NamedExecuteAlways("MuzzleClimb",0,3,2,0)
		TNT1 A 1{
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(13,26),random(4,14),0);
			A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		}stop
	Flash:
		RIFF A 1 bright{
			A_Light1();
			HDFlashAlpha(-16);
			A_PlaySound("weapons/rifle",1);
			A_Overlay(random(11,19),"gunrecoil");
			A_GiveInventory("ZM66Shoot");
			A_TakeInventory("ZM66Chamber",1);
			A_AlertMonsters;
		}goto LightDone
	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("ZM66GrenadeRiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
//		TNT1 A 0 A_JumpIfInTargetInventory("ZM66GrenadeRifle",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("ZM66GrenadeRiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop


	Fire:
		RIFG A 0 A_JumpIfInventory("ZM66GLMode",1,"FireFrag")
		RIFG A 2{if(countinv("ZM66FullAuto")>0){A_SetTics(3);}}
		goto shootgun
	Hold:
		RIFG A 0 A_JumpIfInventory("ZM66GLMode",1,"FireFrag")
		RIFG A 0 A_JumpIfInventory("ZM66Ratchet",0,"HoldEmpty")
		RIFG A 0 A_JumpIfInventory("ZM66FullAuto",1,"shootgun")
	HoldEmpty:
	AltHold:
		"----" A 1{
			A_GiveInventory("IsWeaponShort",1);
			if(
				(countinv("ZM66Heat")>random(27,35))    
				&&(countinv("ZM66BrokenRound")<1)
				&&(countinv("ZM66Chamber")>0)    
			){return state("cookoff");}
			A_WeaponReady(WRF_NOFIRE);
			return state("");
		}
		"----" A 0 A_Refire
		goto ready
	jam:
		RIFG B 1 offset(-1,36){
			A_PlayWeaponSound("weapons/rifleclick");
			A_GiveInventory("ZM66BrokenRound",1);
			A_TakeInventory("ZM66Chamber",1);
		}
		RIFG B 1 offset(1,30) A_PlaySound("weapons/rifleclick",7)
		goto nope

	shootgun:
		RIFG A 1{
			if(	//can neither shoot nor chamber
				(countinv("ZM66BrokenRound")>0)    
				||(countinv("ZM66Chamber")+countinv("ZM66Loaded")<1)
			){
					return state("nope");
			}	//no shot but can chamber
			else if(countinv("ZM66Chamber")<1){
				return state("chamber_premanual");
			}
			else{
				A_GunFlash;
				if(countinv("ZM66FullAuto")==2){A_GiveInventory("ZM66Ratchet");}
			}
			return state("");
		}
	chamber:
		RIFG B 2 offset(0,32){
			if(countinv("ZM66Loaded")<1){return state("nope");}
			if(random(1,2000)<1
				+countinv("ZM66FullAuto")*countinv("ZM66FullAuto")*countinv("ZM66FullAuto")
				+countinv("ZM66JailbrokenMag")*5)
				{return state("jam");}
			if(countinv("ZM66Loaded")>0){      
				A_TakeInventory("ZM66Loaded",1);
				A_GiveInventory("ZM66Chamber",1);
			}else{A_PlaySound("weapons/rifleclick",5);}
			if(countinv("ZM66FullAuto")==2){A_SetTics(0);}
			if(countinv("ZM66FullAuto")==0){A_SetTics(1);}
			A_TakeInventory("ZM66RoundCounter",99);
			if(countinv("ZM66JailbrokenMag")>0)    
				{A_GiveInventory("ZM66RoundCounter",random(1,99));return state("");}
			else if(countinv("ZM66Loaded")+countinv("ZM66Chamber")>0)
				{A_GiveInventory("ZM66RoundCounter",countinv("ZM66Loaded")+countinv("ZM66Chamber"));return state("");}
			return state("");
		}
		RIFG B 0 A_Refire
		goto ready


	cookoff:
		RIFG A 0{
			A_TakeInventory("IsWeaponReady");
			A_TakeInventory("IsSupported");
			A_GiveInventory("IsMoving",5);
			if(
				(countinv("PressingReload")+countinv("PressingUnload")>0)	//trying to detach    
				&&((countinv("ZM66NoMag")<1)||(countinv("ZM66Loaded")>0))	//something to detach
			){
//				A_SpawnItemEx("HD4mMag",cos(pitch)*8,0,height-10-8*sin(pitch),velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				A_GiveInventory("ZM66NoMag",1);
			}
			else if(countinv("PressingAltfire")>0){
				A_Gunflash("nadeflash");
				return state("shootgun");
			}
			return state("shootgun");
		}


	chamber_premanual:
		RIFG A 1 offset(0,33)
		RIFG A 1 offset(-3,34)
		RIFG A 1 offset(-8,37)
		goto chamber_manual

	user4:
	unload:
		RIFG A 0{
			A_GiveInventory("JustUnloading");
			if(
				(countinv("ZM66GLMode")>0)  
			){
				return state("unloadgrenade");
			}
			else if(
				(countinv("ZM66NoMag")<1)
			){
				return state("unloadmag");
			}
			else if(
				(countinv("ZM66Chamber")>0)  
			){
				return state("unloadchamber");
			}
			return state("reload");
		}
	reload:
		RIFG A 0{
			if(	//full mag, no jam, not unload-only - why hit reload at all?
				(countinv("ZM66BrokenRound")<1)
				&&(countinv("ZM66Loaded")>=50)  
				&&(countinv("JustUnloading")<1)
			){
				return state("nope");
			}else if(	//if jammed, treat as unloading
				(countinv("ZM66NoMag")+countinv("ZM66BrokenRound")==2)
			){
				A_GiveInventory("JustUnloading",1);
				return state("unloadchamber");
			}
			return state("unloadmag");
		}
	unloadmag:
		RIFG A 1 offset(0,33)
		RIFG A 1 offset(-3,34)
		RIFG A 1 offset(-8,37)
		RIFG B 2 offset(-11,39){
			if(	//no mag, skip unload
				(countinv("ZM66NoMag")>0)      
				&&(countinv("ZM66Loaded")<1)
			){
				return state("magout");
			}
			if(countinv("ZM66BrokenRound")>0){A_GiveInventory("JustUnloading",1);}
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
			A_TakeInventory("IsWeaponLong");
			A_PlayWeaponSound ("weapons/rifleclick2");
			return state("");
		}
		RIFG B 4 offset(-12,40){
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
			A_PlayWeaponSound("weapons/rifleload");
		}
		RIFG B 20 offset(-14,44){
			if(
				(countinv("PressingUnload")+countinv("PressingReload")<1)
				||(
					(countinv("ZM66Loaded")<50)
					&&(countinv("FourMilAmmo")>AmmoCap("FourMilAmmo")-countinv("ZM66Loaded"))    
				)
				||(
					(countinv("ZM66Loaded")>49)    
					&&(A_JumpIfInventory("ZM66RifleMags",0,"null"))
				)
				||(countinv("ZM66Loaded")<1)
			){
//				A_SpawnItemEx("HD4mMag",12,0,height-12,1,0,-1,0,SXF_SETTARGET);
				A_SetTics(1);
			}else{
				A_PlaySound("weapons/pocket");
				if(countinv("ZM66Loaded")>=50){A_GiveInventory("ZM66RifleMags",1);}        
				else{
					A_GiveInventory("FourMilAmmo",countinv("ZM66Loaded"));
					A_Log("Reloading a 4.26 UAC Standard magazine into another firearm without authorization is a breach of the Volt End User License Agreement.",true);
				}
				A_TakeInventory("ZM66Loaded");
			}
			A_GiveInventory("ZM66NoMag");
		}
	magout:
		RIFG B 0{
			A_TakeInventory("ZM66JailbrokenMag",1);	//just in case
			if(countinv("JustUnloading")>0){return state("reloadend");}  
			else if(countinv("ZM66RifleMags")+countinv("FourMilAmmo")<1){return state("reloadend");}
			return state("loadmag");
		}
	loadmag:
		"----" A 20{
			if(countinv("ZM66RifleMags")>0){A_SetTics(14);}      
			A_PlayWeaponSound("weapons/pocket");
		}
		"----" A 2{
			if(countinv("ZM66RifleMags")>0){      
				A_GiveInventory("ZM66Loaded",50);
				A_TakeInventory("ZM66RifleMags",1,TIF_NOTAKEINFINITE);
			}else{
				A_TakeInventory("Counter",countinv("Counter"));
				A_GiveInventory("Counter",random(1,50));
				if(countinv("Counter")>countinv("FourMilAmmo")){      
					A_TakeInventory("Counter",countinv("Counter")-countinv("FourMilAmmo"));
				}
				A_GiveInventory("ZM66Loaded",countinv("Counter"));
				A_TakeInventory("FourMilAmmo",countinv("Counter")+1);
				A_GiveInventory("ZM66JailbrokenMag");
			}
			A_TakeInventory("ZM66NoMag",1);
		}
		RIFG B 8 offset(-15,45) A_PlayWeaponSound ("weapons/rifleload")
		RIFG B 1 offset(-14,44) A_PlayWeaponSound ("weapons/rifleclick2")
		RIFG B 0{
			if(countinv("ZM66JailbrokenMag")>0){return state("");}      
			return state("chamber_manual");
		}
		RIFG A 8 offset(-18,50){
			ACS_NamedExecuteAlways("MuzzleClimb",0,random(-24,-38),random(-23,-36),0);
			A_PlaySound("weapons/rifleclick2",6);
			A_PlaySound("weapons/smack",7);
		}
		RIFG A 4 offset(-17,49) A_Log("Reloading a 4.26 UAC Standard magazine into another firearm without auth--\cgFUCK YOURSELF.\c- Sincerely, management.",true)
	chamber_manual:
		RIFG A 4 offset(-15,43){
			if(countinv("ZM66Chamber")<1){
				A_PlayWeaponSound("weapons/rifleclick");
				A_TakeInventory("ZM66Loaded",1);
				A_GiveInventory("ZM66Chamber",1);
				return state("");
			}else{return state("reloadend");}
		}
		RIFG B 4 offset(-14,45)
		goto reloadend

	reloadend:
		RIFG B 2 offset(-11,39)
		RIFG A 1 offset(-8,37) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-2,14),random(-2,24),0)
		RIFG A 1 offset(-3,34)
		RIFG A 1 offset(0,33)
		RIFG A 0 A_WeaponReady
		goto nope


	unloadchamber:
		RIFG A 1 offset(0,33)
		RIFG A 1 offset(-3,34)
		RIFG A 1 offset(-8,37)
		RIFG B 2 offset(-11,39)
		RIFG B 3 offset(-19,44) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,4),random(-4,4),0)
		RIFG A 2 offset(-16,42) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,4),random(-4,4),0)
		RIFG A 0{
			if((countinv("ZM66Chamber")>0)&&(countinv("ZM66BrokenRound")<1)){  
				A_SpawnItemEx("ZM66DroppedRound",0,0,20,random(4,7),random(-2,2),random(-2,1),0,SXF_NOCHECKPOSITION);
				A_TakeInventory("ZM66Chamber");
				A_PlaySound("weapons/rifleclick2");
				return state("reloadend");
			}
			if(random(1,33)<25){return state("reloadend");}
			return state("");
		}
		RIFG A 0{
			A_TakeInventory("ZM66BrokenRound");
			A_TakeInventory("ZM66Chamber");
			A_PlayWeaponSound("weapons/rifleclick");
		}
		RIFG AAAA 0 A_SpawnItemEx("TinyWallChunk",0,0,20,random(4,7),random(-2,2),random(-2,1),0,SXF_NOCHECKPOSITION)
		goto reloadend

	nadeflash:
		TNT1 A 0 A_JumpIfInventory("ZM66GLoaded",1,1)
		stop
		TNT1 A 2{
			A_SpawnItemEx("GyroGrenade",0,0,height-6,velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_TakeInventory("ZM66GLoaded",1);
			A_PlayWeaponSound("weapons/grenadeshot");
			A_ZoomFactor(0.99,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		}
		TNT1 A 2 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,48,16,0)
		stop
	firefrag:
		RIFG B 2
		RIFG B 3 A_Gunflash("nadeflash")
		goto nope


	altfire:
		RIFG A 0{
			A_TakeInventory("AirburstCount");
			if(countinv("ZM66GLMode")>0){A_TakeInventory("ZM66GLMode",1);}    
			else{A_GiveInventory("ZM66GLMode");}
		}
		goto toggleend
	zoom:
		RIFG A 0{
			if(countinv("ZM66Zoom")>0){A_TakeInventory("ZM66Zoom",1);}    
			else{A_GiveInventory("ZM66Zoom");}
		}
	toggleend:
		RIFG A 1 offset(0,34){
			A_SetCrosshair(21);
		}
/*
		RIFG A 1 offset(0,38)
		RIFG A 1 offset(0,42)
		RIFG A 1 offset(0,38)
		RIFG A 1 offset(0,34)
*/
		RIFG A 0 A_JumpIfInventory("PressingZoom",1,"zoomadjust")
		goto nope
	zoomadjust:
		RIFG A 1 A_WeaponReady(WRF_NOFIRE)
		RIFG A 0{
			if(countinv("PressingFire")||countinv("PressingAltfire")){
				A_GiveInventory("ZM66Zoom");return state("zoomclick");
			}else if(countinv("PressingFireMode")){return state("zoomadjust");}
			if(countinv("PressingZoom")){return state("zoomadjust");}  
			return state("nope");
		}
	zoomclick:
		RIFG A 0{
			if(countinv("PressingFire")){A_GiveInventory("ZM66ZoomDegree",1);}
			else{A_TakeInventory("ZM66ZoomDegree",1);}
		}goto zoomadjust
	zoomclicked:
		RIFG A 1{
			A_WeaponReady(WRF_NOFIRE);
			if(countinv("PressingFire")||countinv("PressingAltfire")){return state("");}
			return state("zoomadjust");
		}
		goto zoomclicked

	user1:
	altreload:
		RIFG A 0{
			if(
				(countinv("ZM66GLoaded")>0)    
				||(countinv("HDRocketAmmo")<1)
			){return state("nope");}
			return state("unloadgrenade");
		}
		goto nope
	unloadgrenade:
		RIFG B 0{
			A_SetCrosshair(21);
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
		}
		RIFG B 2 offset(0,34)
		RIFG B 1 offset(4,38){
			A_TakeInventory("IsWeaponLong");
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
		}
		RIFG B 2 offset(8,48){
			A_PlayWeaponSound ("weapons/grenopen");
			A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
			A_SetAngle(angle-0.3,SPF_INTERPOLATE);
		}
		RIFG B 0 A_JumpIf(countinv("ZM66GLoaded")<1,2)
		RIFG B 3 offset(10,49){
			A_TakeInventory("ZM66GLoaded",1);
			if(
				(countinv("PressingUnload")<1)
				||(A_JumpIfInventory("HDRocketAmmo",0,"null"))
			){
				A_SpawnItemEx("HDRocketAmmo",cos(pitch)*10,0,height-10-10*sin(pitch),velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
			else{
				A_SetTics(10);
				A_PlaySound("weapons/pocket");
				A_GiveInventory("HDRocketAmmo",1);
				ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0);
			}
		}
		RIFG B 0 A_JumpIfInventory("JustUnloading",1,"greloadend")
	loadgrenade:
		RIFG B 4 offset(10,50) A_PlayWeaponSound("weapons/pocket")
		RIFG BBB 8 offset(10,50) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-4,2),random(-8,2),0)
		RIFG B 18 offset(8,50){
			A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
			A_GiveInventory("ZM66GLoaded",1);
			A_PlayWeaponSound("weapons/rockreload");
		}
	greloadend:
		RIFG B 4 offset(4,44) A_PlayWeaponSound("weapons/grenopen")
		RIFG B 1 offset(0,40)
		RIFG A 1 offset(0,34) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-2,14),random(-2,24),0)
		RIFG A 0 A_WeaponReady
		goto nope
	}
}

actor ZM66GLMode:InventoryFlag{}
actor ZM66Zoom:InventoryFlag{}
actor ZM66BrokenRound:InventoryFlag{}
actor ZM66JailbrokenMag:InventoryFlag{}
actor ZM66NoMag:InventoryFlag{}
actor ZM66ZoomDegree:InventoryFlag{inventory.maxamount 27}
actor ZM66Ratchet:InventoryFlag{Inventory.MaxAmount 3}
actor ZM66Heat:InventoryFlag{Inventory.MaxAmount 80}
actor ZM66FullAuto:InventoryFlag{Inventory.MaxAmount 2}
actor ZM66RoundCounter:InventoryFlag{inventory.maxamount 99}

actor ZM66Chamber:Ammo{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor ZM66Loaded:Ammo{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 50
	ammo.backpackmaxamount 50
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor ZM66GLoaded:Ammo{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 1
	ammo.backpackmaxamount 1
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor ZM66Shoot:ActionItem{
	states{
	pickup:
		RIFF A 0 A_GiveInventory("ZM66Heat",random(2,4))
		RIFG A 0 A_JumpIfInventory("ZM66Heat",14,"shoot3")
		RIFG A 0 A_JumpIfInventory("ZM66Heat",10,"shoot2")
		TNT1 A 0 A_GiveInventory("DecoBulleter426")
		fail
	shoot2:
		TNT1 A 0{
			A_SpawnItemEx("HDGunSmoke",0,0,height-6,cos(pitch)*cos(angle)*4+velx+frandom(-1,1),cos(pitch)*sin(angle)*4+vely+frandom(-1,1),-sin(pitch)*4+velz+frandom(-1,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH,64);
			A_GiveInventory("DecoBulleter426");
		}fail
	shoot3:
		TNT1 A 0{
			A_SpawnItemEx("HDGunSmoke",0,0,height-6,cos(pitch)*cos(angle)*4+velx+frandom(-1,1),cos(pitch)*sin(angle)*4+vely+frandom(-1,1),-sin(pitch)*4+velz+frandom(-1,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_GiveInventory("DecoBulleter426s");
		}fail
	}
}
actor ZM66HeatVent:CustomInventory{
	states{
	pickup:
		RIFG A 0 A_TakeInventory("ZM66Heat",1)
		RIFG A 0 A_JumpIfInventory("ZM66Heat",random(12,36),1)
		fail
		TNT1 A 0 A_FireCustomMissile("HDGunSmoke",frandom(-1,1),0,0,0,0,frandom(-1,1))
		TNT1 A 0 A_CustomMissile("HDGunSmoke",6,0,random(-1,1),CMF_AIMDIRECTION)
		fail
	}
}

actor ZM66Rifle : ZM66GrenadeRifle
{
	game Doom
	Weapon.SelectionOrder 21
	weapon.slotnumber 4
	+weapon.cheatnotweapon
	Inventory.PickupMessage "You got the rifle!"
	weapon.bobrangex 0.2
	weapon.bobrangey 0.8
	states
	{
	Ready:
		RIFG A 0{
		}
		RIFG A 1{
			A_GiveInventory("IsWeaponShort",1);
			if(
				(countinv("ZM66Heat")>21)
				&&(countinv("ZM66BrokenRound")<1)
				&&(countinv("ZM66Chamber")>0)    
			){return state("cookoff");}
			A_GiveInventory("IsWeaponReady",1);
			A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD|WRF_ALLOWUSER1|WRF_ALLOWUSER2|WRF_ALLOWUSER4);
			A_TakeInventory("ZM66Ratchet");
			A_TakeInventory("ZM66GLMode");
			A_GiveInventory("NotShot",1);
			return state("");
		}goto ReadyEnd
	Altfire:
//		goto Zoom
	AltHold:
	AltReload:
		stop
	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("ZM66RiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("ZM66Rifle",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("ZM66RiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	}
}

actor ZM66SemiRifle : ZM66Rifle
{
	game Doom
	Weapon.SelectionOrder 22
	weapon.slotnumber 4
	+weapon.cheatnotweapon
	Inventory.PickupMessage "You got the semi-automatic assault weapon! Time for some carnage!"
	obituary "%o was planked by %k's gopher plinker."
	weapon.bobrangex 0.2
	weapon.bobrangey 0.8
	states
	{
	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("ZM66SemiRiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("ZM66SemiRifle",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("ZM66SemiRiflePickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	user2:
	firemode:
		"----" A 0
		goto nope
	}
}



actor ZM66RifleSpawner
{
	health 1
	+invisible
	states
	{
	spawn:
		TNT1 A 0
		TNT1 A 0 A_Jump (256, 1, 3, 5, 2, 4, 6, 2, 4, 7)
		TNT1 A 0 A_SpawnItemEx ("ZM66RifleMags", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		TNT1 A 0 A_SpawnItemEx ("ZM66RiflePickup", random(-4,4), random(-4,4), 0, 0,0,0, 0,32)
		stop
		TNT1 A 0 A_SpawnItemEx ("RocketAmmo", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		TNT1 A 0 A_SpawnItemEx ("ZM66GrenadeRiflePickup", random(-4,4), random(-4,4), 0, 0,0,0, 0,32)
		stop
		TNT1 A 0 A_SpawnItemEx ("RocketAmmo", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		TNT1 A 0 A_SpawnItemEx ("RocketAmmo", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		stop
		TNT1 A 0 A_SpawnItemEx ("ZM66RifleMags", random(-8,8), random(-8,8), 0, 0,0,0, 0,32)
		TNT1 A 0 A_SpawnItemEx ("ZM66SemiRiflePickup", random(-4,4), random(-4,4), 0, 0,0,0, 0,32)
		stop
	}
}



// ------------------------------------------------------------
//   Mags and pickups
// ------------------------------------------------------------

actor ZM66GrenadeRiflePickup : HDUPK
{
	//*** NOTE TO SELF: COPY THAT A_WARP BELOW BEFORE DELETING THE TAKELOOP WHILE SCRIPTIFYING ***

	scale 0.65 height 10
	obituary "People don't kill %o! Guns kill %o!"
	states
	{
	spawn:
		RIGL A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("ZM66Loaded",50)
		"----" A 0 A_GiveInventory("ZM66GLoaded",12)
//		"----" A 0 A_GiveInventory("ZM66Chamber")
		"----" A 0 A_Jump(256,"spawn2")
	spawn2:
		"----" A 0 A_JumpIfInventory("ZM66BrokenRound",1,3)
		"----" A 0 A_JumpIfInventory("ZM66Loaded",1,3)
		"----" A 0 A_JumpIfInventory("ZM66Chamber",1,2)
		"----" A 0 A_Jump(256,2)
		"----" A 0 A_JumpIfInventory("ZM66Heat",27,"spawnshoot")
		"####" D 0 A_JumpIfInventory("ZM66NoMag",1,2)
		"####" A 0
		"----" A 1 A_GiveInventory("ZM66HeatVent")
		loop
	spawnshoot:
		"####" B 0 A_GiveInventory("ZM66Chamber")
		"####" B 0 A_PlaySound("weapons/rifle",1)
		"----" A 0 A_ChangeVelocity(frandom(-0.4,0.1),frandom(-0.1,0.08),1,CVF_RELATIVE)
		"----" A 0 A_SetPitch(random(-4,14))
		"----" A 0 A_SetAngle(angle+random(-8,8))
		"----" A 0 A_GiveInventory("ZM66Heat",1)
		"####" C 1 light("SHOT") A_GiveInventory("DecoBulleter426s")
		"####" B 2{
			A_SpawnItemEx("HDGunSmoke",0,0,4,cos(pitch)*cos(angle)*4+velx+frandom(-1,1),cos(pitch)*sin(angle)*4+vely+frandom(-1,1),-sin(pitch)*4+velz+frandom(-1,1),0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			if(countinv("ZM66FullAuto")==2){A_SetTics(0);}
		}
		"####" B 0{
			if(countinv("ZM66Loaded")<1){A_TakeInventory("ZM66Chamber",1);}
			else{A_TakeInventory("ZM66Loaded",1);}
		}
		"----" A 0 A_Jump(256,"spawn2")
	grab:
		"####" "A" 0 A_JumpIfInventory("ZM66BrokenRound",1,2)
		"----" A 0 A_JumpIfInventory("ZM66Loaded",1,2)
		"----" A 0 A_Jump(256,2)
		"----" A 0 A_JumpIfInventory("ZM66Heat",27,"spawn2")
		"----" A 0
		goto super::grab
	takeloop:
		"----" A 0{
			if(countinv("ZM66Loaded",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66Loaded",countinv("ZM66Loaded",AAPTR_TARGET));
				A_TakeFromTarget("ZM66Loaded");
			}
			if(countinv("ZM66Heat",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66Heat",countinv("ZM66Heat",AAPTR_TARGET));
				A_TakeFromTarget("ZM66Heat");
			}
			if(countinv("ZM66NoMag",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66NoMag");
				A_TakeFromTarget("ZM66NoMag");
			}
			if(countinv("ZM66JailBrokenMag",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66JailBrokenMag");
				A_TakeFromTarget("ZM66JailBrokenMag");
			}
			if(countinv("ZM66BrokenRound",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66BrokenRound");
				A_TakeFromTarget("ZM66BrokenRound");
			}
			if(countinv("ZM66Chamber",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66Chamber");
				A_TakeFromTarget("ZM66Chamber");
			}
			if(countinv("ZM66ZoomDegree",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66ZoomDegree",countinv("ZM66ZoomDegree",AAPTR_TARGET));
				A_TakeFromTarget("ZM66ZoomDegree");
			}

			//warp the gun ahead when it cooks off so it doesn't shoot you
			if(countinv("ZM66Heat")>=27){
				A_Warp(AAPTR_TARGET,20,0,32,0,WARPF_INTERPOLATE);
			}
			return state("takeFA");
		}
	takeFA:
		"----" A 0{
			if(countinv("ZM66FullAuto",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66FullAuto",countinv("ZM66FullAuto",AAPTR_TARGET));
				A_TakeFromTarget("ZM66FullAuto");
			}
			return state("takeGL");
		}
	takeGL:
		"----" A 0{
			if(countinv("ZM66GLoaded",AAPTR_TARGET)>0){  
				A_GiveInventory("ZM66GLoaded");
				A_TakeFromTarget("ZM66GLoaded");
			}
			return state("spawn2");
		}
	give:
		"----" A 0 A_JumpIfInTargetInventory("ZM66SemiRifle",1,"spawn")
		"----" A 0 A_JumpIfInTargetInventory("ZM66Rifle",1,"spawn")
		"----" A 0 A_JumpIfInTargetInventory("ZM66GrenadeRifle",1,"spawn")
		"----" A 0 A_PlaySound("misc/w_pkup")
		"----" A 0 A_Jump(256,"give2")
	give2:
		"----" A 0 A_GiveToTarget("ZM66GrenadeRifle",1)
	givegunloop:
		"----" A 0{
			if(countinv("ZM66Loaded")>0){  
				A_GiveToTarget("ZM66Loaded",countinv("ZM66Loaded"));
				A_TakeInventory("ZM66Loaded");
			}
			if(countinv("ZM66Heat")>0){  
				A_GiveToTarget("ZM66Heat",countinv("ZM66Heat"));
				A_TakeInventory("ZM66Heat");
			}
			if(countinv("ZM66NoMag")>0){  
				A_GiveToTarget("ZM66NoMag");
				A_TakeInventory("ZM66NoMag");
			}
			if(countinv("ZM66JailBrokenMag")>0){  
				A_GiveToTarget("ZM66JailBrokenMag");
				A_TakeInventory("ZM66JailBrokenMag");
			}
			if(countinv("ZM66BrokenRound")>0){  
				A_GiveToTarget("ZM66BrokenRound");
				A_TakeInventory("ZM66BrokenRound");
			}
			if(countinv("ZM66Chamber")>0){  
				A_GiveToTarget("ZM66Chamber");
				A_TakeInventory("ZM66Chamber");
			}
			if(countinv("ZM66ZoomDegree")>0){  
				A_GiveToTarget("ZM66ZoomDegree",countinv("ZM66ZoomDegree"));
				A_TakeInventory("ZM66ZoomDegree");
			}
			return state("giveFA");
		}
	giveFA:
		"----" A 0{
			if(countinv("ZM66FullAuto")>0){  
				A_GiveToTarget("ZM66FullAuto",countinv("ZM66FullAuto"));
				A_TakeInventory("ZM66FullAuto");
			}
			return state("giveGL");
		}
	giveGL:
		"----" A 0{
			if(countinv("ZM66GLoaded")>0){  
				A_GiveToTarget("ZM66GLoaded");
				A_TakeInventory("ZM66GLoaded");
			}
			return state("givegunloopend");
		}
	}
}
actor ZM66RiflePickup : ZM66GrenadeRiflePickup
{
	states
	{
	spawn:
		RIFL A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("ZM66Loaded",50)
//		"----" A 0 A_GiveInventory("ZM66Chamber",1)
		"----" A 0 A_Jump(256,"spawn2")
	takeGL:
		"----" A 0 A_Jump(256,"spawn2")
	give2:
		"----" A 0 A_GiveToTarget("ZM66Rifle",1)
		goto givegunloop
	giveGL:
		"----" A 0 A_Jump(256,"givegunloopend")
	}
}
actor ZM66SemiRiflePickup : ZM66RiflePickup
{
	states
	{
	spawn2:
		"----" A 0 A_JumpIfInventory("ZM66BrokenRound",1,3)
		"----" A 0 A_JumpIfInventory("ZM66Loaded",1,3)
		"----" A 0 A_JumpIfInventory("ZM66Chamber",1,2)
		"----" A 0 A_Jump(256,2)
		RIFL A 0 A_JumpIfInventory("ZM66Heat",27,"spawnshoot")
		RIFS D 0 A_JumpIfInventory("ZM66NoMag",1,2)
		RIFS A 0
		"----" A 1 A_GiveInventory("ZM66HeatVent")
		loop
	takeFA:
		"----" A 0 A_Jump(256,"spawn2")
	give2:
		"----" A 0 A_GiveToTarget("ZM66SemiRifle",1)
		goto givegunloop
	giveFA:
		"----" A 0 A_Jump(256,"givegunloopend")
	}
}
actor ZM66RiflePickupDropped : ZM66RiflePickup
{
	states
	{
	spawn:
		RIFL A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(random(0,51)==0,"spawn2")
		"----" A 0 A_GiveInventory("ZM66Loaded",random(1,50))
		"----" A 0 A_GiveInventory("ZM66Chamber",1)
		"----" A 0 A_Jump(256,"spawn2")
	give2:
		"----" A 0 A_GiveToTarget("ZM66Rifle",1)
		goto givegunloop
	}
}
actor ZM66SemiRiflePickupDropped : ZM66RiflePickup
{
	states
	{
	spawn2:
		"----" A 0 A_JumpIfInventory("ZM66BrokenRound",1,3)
		"----" A 0 A_JumpIfInventory("ZM66Loaded",1,3)
		"----" A 0 A_JumpIfInventory("ZM66Chamber",1,2)
		"----" A 0 A_Jump(256,2)
		RIFL A 0 A_JumpIfInventory("ZM66Heat",27,"spawnshoot")
		RIFS D 0 A_JumpIfInventory("ZM66NoMag",1,2)
		RIFS A 0
		"----" A 1 A_GiveInventory("ZM66HeatVent")
		loop
	spawn:
		RIFL A 0 A_Stop
		RIFL D 0 A_JumpIfInventory("ZM66NoMag",1,2)
		RIFL A 0
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(random(0,51)==0,"spawn2")
		"----" A 0 A_GiveInventory("ZM66Loaded",random(1,50))
		"----" A 0 A_GiveInventory("ZM66Chamber",1)
		"----" A 0 A_Jump(256,"spawn2")
	give2:
		"----" A 0 A_GiveToTarget("ZM66SemiRifle",1)
		goto givegunloop
	}
}
actor ZM66GrenadeRiflePickupDropped : ZM66RiflePickup
{
	states
	{
	spawn:
		RIGL A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(random(0,51)==0,3)
		"----" A 0 A_GiveInventory("ZM66Loaded",random(1,50))
		"----" A 0 A_GiveInventory("ZM66Chamber",1)
		"----" A 0 A_Jump(200,2)
		"----" A 0 A_GiveInventory("ZM66GLoaded",1)
		"----" A 0 A_Jump(256,"spawn2")
	give2:
		"----" A 0 A_GiveToTarget("ZM66GrenadeRifle",1)
		goto givegunloop
	}
}
