// ------------------------------------------------------------
//   Plasma Rifle
// ------------------------------------------------------------

ACTOR ThunderBuster : HDWeapon
{
	game Doom
	weapon.selectionorder 600
	weapon.slotnumber 6
	weapon.ammotype "PlasmaBattery"
	weapon.ammotype2 "HDCellPacks"
	weapon.ammouse 1
	scale 0.6
	inventory.pickupmessage "You got the particle beam gun!"
	States
	{
	Ready:
		TNT1 A 0 A_SetCrosshair(21)
		TNT1 A 0 A_GiveInventory("IsWeaponReady",1)
		TNT1 A 0 A_GiveInventory("IsWeaponBFG",1)
		PLSG A 1 A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD)

		PLSG A 0 A_JumpIfInventory("PressingUnload",1,"unload")
		PLSG A 0 A_TakeInventory("PressingZoom")
		PLSG A 0 A_TakeInventory("PlasmaZoomGood",1)
		PLSG A 0 A_JumpIfInventory("PlasmaZoom",1,1)
		goto ReadyEnd
		PLSG A 0 A_FireBullets(0,0,1,0,"BeamTest",FBF_NORANDOM|FBF_NOFLASH,16384)
		PLSG A 0 A_GiveInventory("PlasmaZoomBatteryDrainage",1)
		PLSG A 1 A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD)
		TNT1 A 0 A_TakeInventory("WeaponBusy")
		PLSG A 0 A_JumpIfInventory("PlasmaZoomBatteryDrainage",0,1)
		goto ReadyEnd
		PLSG A 0 A_TakeInventory("PlasmaBattery",1)
		PLSG A 0 A_TakeInventory("PlasmaZoomBatteryDrainage",126000)
		goto ReadyEnd
	Fire:
		PLSG A 0 A_TakeInventory("PlasmaZoomGood",1)
		PLSG A 3 offset(0,35)
	Hold:
		PLSG A 0 A_JumpIfInventory("PlasmaBattery",1,"Shoot")
		PLSG A 0 A_TakeInventory("IsWeaponReady")
		PLSG A 1 A_WeaponReady(WRF_NOFIRE)
		PLSG A 0 A_Refire
		goto Ready
	Shoot:
		PLSG A 0 A_ZoomFactor(0.99,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		TNT1 A 0 A_PlayWeaponSound("weapons/plasidle")
		PLSG A 0 A_JumpIfInventory("IsMoving",10,2)
		PLSG A 0 A_Jump(256,2)
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-8,-8),random(-8,8),0)
		PLSG A 0 A_JumpIfInventory("PlasmaAlt",1,"ShootClaw")
		goto ShootStraight
	ShootClaw:
		PLSG A 0{
			A_GunFlash;
			A_SpawnItemEx("DistantPlasma",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
			A_ZoomFactor(1.01,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			if (countinv("PlasmaBattery")>random(-2,10)){
				A_FireBullets(1,1,countinv("PlasmaBattery")/18,(random(1,2)),"BeamSpotFlash",FBF_NORANDOM,1024);
				A_TakeInventory("PlasmaBattery",random(1,3));
			}
		}
		PLSG A 1 offset(1,32) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-6,6),random(-6,6),0)
		PLSG A 1 offset(-1,34) ACS_NamedExecuteAlways("MuzzleClimb",0,random(-6,6),random(-6,6),0)
		TNT1 A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		goto shootend
	ShootStraight:
		PLSG A 0{
			if (countinv("PlasmaBattery")>random(-2,3)){
				A_FireBullets(0,0,clamp(countinv("PlasmaBattery")*0.08,1,3),(random(0,1)),"BeamSpot",FBF_NORANDOM,16384);
				A_TakeInventory("PlasmaBattery",1);
			}
		}
		goto shootend
	shootend:
		PLSG A 1 offset(1,33)
		PLSG A 1 offset(0,34)
		PLSG A 1 offset(-1,33)
		TNT1 A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		TNT1 A 0 A_JumpIfInventory("PlasmaBattery",1,4)
		PLSG A 0 A_PlayWeaponSound("weapons/plasmas")
		PLSG A 0 A_GiveInventory("PlasmaEmptyCell",1)
		PLSG A 9 A_GunFlash
		PLSG A 1 A_ReFire
		Goto Ready
	Flash:
		PLSF A 1 bright A_Light2
		PLSF BA 1 bright
		PLSF B 1 bright A_Light1
		PLSF AB 1 bright
		PLSF B 0 bright A_Light0
		Stop
	AltFire:
		PLSG A 0 A_TakeInventory("PlasmaZoomGood",1)
		TNT1 A 0 A_TakeInventory("IsWeaponReady")
		PLSG C 1 offset(1,32)
		PLSG C 2 offset(2,32)
		PLSG C 1 offset(1,33)
		PLSG C 2 offset(0,34)
		PLSG C 3 offset(-1,35)
		PLSG C 4 offset(-1,36)
		PLSG C 3 offset(-1,35)
		PLSG C 2 offset(0,34)
		PLSG A 0 A_JumpIfInventory("PlasmaAlt",1,2)
		PLSG A 0 A_GiveInventory("PlasmaAlt",1)
		goto zoom2
		PLSG A 0 A_TakeInventory("PlasmaAlt")
		goto zoom2
	Zoom:
		TNT1 A 0 A_JumpIfInventory("PressingZoom",1,"AltHold")
		TNT1 A 0 A_GiveInventory("PressingZoom",1)
		TNT1 A 0 A_TakeInventory("IsWeaponReady")
		PLSG A 1 offset(1,33)
		PLSG A 1 offset(0,34)
		PLSG A 2 offset(-1,36)
		PLSG A 0 A_JumpIfInventory("PlasmaZoom",1,2)
		PLSG A 0 A_GiveInventory("PlasmaZoom",1)
		goto zoom2
		PLSG A 0 A_TakeInventory("PlasmaZoom")
		goto zoom2
	Zoom2:
		PLSG A 1
		PLSG A 1 offset(0,34)
		PLSG A 1 offset(1,33)
		TNT1 A 0 A_GiveInventory("IsWeaponReady",1)
		PLSG A 0 A_Refire
		goto Ready
	Althold:
		PLSG A 1 A_WeaponReady(WRF_NOFIRE)
		PLSG A 0 A_Refire
		goto ready

	select0:
		PLSG A 0
		goto select0big
	deselect0:
		PLSG A 0{
			A_TakeInventory("PlasmaZoomGood");
			A_Light0;
			return state("deselect0big");
		}

	unload:
		PLSG A 0{
			A_GiveInventory("JustUnloading");
			if(countinv("PlasmaEmptyCell")+countinv("PlasmaBattery")>0){return state("unmag");}
			return state("nope");
		}
	unmag:
		PLSG A 0 A_SetCrosshair(21)
		TNT1 A 0 A_TakeInventory("IsWeaponReady")

		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-12,-24),random(12,24),0)
		PLSG A 2 offset(0,33)
		TNT1 A 0 A_TakeInventory("IsWeaponBFG")
		PLSG A 3 offset(0,35)
		PLSG A 2 offset(0,40) A_PlayWeaponSound("weapons/huntopen")
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(-12,-24),random(12,24),0)
		"----" A 0{
			if(
				(countinv("PressingUnload")+countinv("PressingReload")<1)
				||(countinv("HDCellAmmo")>CallACS("AmmoCap",2)-countinv("PlasmaBattery")/3)    
				||(
					(countinv("PlasmaBattery")>=60)    
					&&(A_JumpIfInventory("HDCellPacks",0,"null"))
				)
				||(countinv("PlasmaBattery")+countinv("PlasmaEmptyCell")<1)
				||(
					(countinv("PlasmaBattery")<1)    
					&&(A_JumpIfInventory("HDCellPackEmpty",0,"null"))
				)
			){
				return state("dropmag");
			}
			return state("pocketmag");
		}

	dropmag:
		TNT1 A 0{
			if(countinv("PlasmaBattery")+countinv("PlasmaEmptyCell")>0)
			{A_SpawnItemEx("HDCelXP",cos(pitch)*10,0,height-10-10*sin(pitch),velx,vely,velz,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);}
			A_TakeInventory("PlasmaEmptyCell",1);
		}goto magout

	pocketmag:
		"----" A 0{
			if(
				(countinv("PlasmaBattery")<1)
				&&(countinv("PlasmaEmptyCell")>0)
			){A_GiveInventory("HDCellpackEmpty",1);}  
			else if(countinv("PlasmaBattery")>57){A_GiveInventory("HDCellPacks",1);}          
			else{A_GiveInventory("HDCellAmmo",countinv("PlasmaBattery")/3);}

			A_TakeInventory("PlasmaBattery");
			A_TakeInventory("PlasmaEmptyCell");
		}
		PLSG A 8 offset(0,43) A_PlayWeaponSound("weapons/pocket")
		PLSG A 8 offset(0,42) A_PlayWeaponSound("weapons/pocket")
		goto magout

	magout:
		TNT1 A 0 A_JumpIfInventory("JustUnloading",1,"Reload3")
		goto loadmag

	reload:
		PLSG A 0 A_JumpIfInventory("PlasmaBattery",0,"nope")
		PLSG A 0 A_JumpIfInventory("HDCellPacks",1,"unmag")
		PLSG A 0 A_JumpIfInventory("HDCellAmmo",1,"unmag")
		goto nope

	loadmag:
		PLSG A 12 offset(0,42)
		TNT1 A 0 A_JumpIfHealthLower(40,2)
		TNT1 A 0 A_Jump(256,4)
		PLSG A 2 offset(0,43)
		PLSG AA 2 offset(0,42)
		PLSG A 2 offset(0,44) A_PlayWeaponSound("weapons/pocket")
		PLSG A 4 offset(0,43) A_PlayWeaponSound("weapons/pocket")
		PLSG A 6 offset(0,42)
		PLSG A 8 offset(0,38) A_PlayWeaponSound("weapons/rifleload")
		TNT1 A 0 A_JumpIfHealthLower(40,2)
		TNT1 A 0 A_JumpIf(256,2)
		PLSG A 4 offset(0,37)
		PLSG A 4 offset(0,36) A_PlayWeaponSound("weapons/grenopen")

		TNT1 A 0 A_JumpIfInventory("HDCellPacks",1,"Reload2a")
		goto Reload2Shitty
	Reload2a:
		TNT1 A 0 A_TakeInventory("ShittyReloadDummy")
		TNT1 A 0 A_JumpIfInventory("PlasmaBattery",3,"Reload2EmptyFirst")
		goto Reload2EmptyFirstEnd
			Reload2EmptyFirst:
			TNT1 A 0 A_JumpIfInventory("PlasmaBattery",1,1)
			goto Reload2EmptyFirstEnd
			TNT1 A 0 A_TakeInventory("PlasmaBattery",3)
			TNT1 A 0 A_GiveInventory("ShittyReloadDummy",1)
			TNT1 A 0 A_JumpIfInventory("PlasmaBattery",1,"Reload2EmptyFirst")
			Reload2EmptyFirstEnd:
		TNT1 A 0 A_TakeInventory("HDCellPacks",1,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("PlasmaBattery",60)
		goto Reload2ReturnToPool
	Reload2Shitty:
		TNT1 A 0 A_TakeInventory("ShittyReloadDummy")
		TNT1 A 0 A_JumpIfInventory("PlasmaBattery",1,"Reload2EmptyFirst2")
		goto Reload2EmptyFirstEnd2
			Reload2EmptyFirst2:
			TNT1 A 0 A_JumpIfInventory("PlasmaBattery",1,1)
			goto Reload2EmptyFirstEnd2
			TNT1 A 0 A_TakeInventory("PlasmaBattery",1)
			TNT1 A 0 A_GiveInventory("ShittyReloadDummy",1)
			TNT1 A 0 A_JumpIfInventory("PlasmaBattery",1,"Reload2EmptyFirst2")
			Reload2EmptyFirstEnd2:
		PLSG A 1 offset(0,35) ACS_NamedExecuteAlways("Reload",0,4,random(1,random(1,14)))
			Reload2ReturnToPool:
			TNT1 A 0 A_JumpIfInventory("ShittyReloadDummy",1,1)
			goto Reload3
			TNT1 A 0 A_TakeInventory("ShittyReloadDummy",1)
			TNT1 A 0 A_GiveInventory("HDCellAmmo",1)
			loop

	Reload3:
		PLSG A 6 offset(0,40) A_PlayWeaponSound("weapons/rifleclick2")
		PLSG A 2 offset(0,36)
		PLSG A 4 offset(0,33)
		goto nope

	spawn:
		TNT1 A 1
		TNT1 A 0 A_CheckProximity("spawndropped","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)
	spawnfresh:
		TNT1 A 0 A_SpawnItemEx("PlasmaPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_NOPOINTERS)
		stop
	spawndropped:
		TNT1 A 0 A_JumpIfInTargetInventory("ThunderBuster",1,"spawnfresh")
		TNT1 A 0 A_SpawnItemEx("PlasmaPickup",0,0,0,velx,vely,velz,0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPOINTERS)
		stop
	} 
}
actor PlasmaBattery : Ammo
{
	+inventory.ignoreskill
	+inventory.untossable
	inventory.maxamount 60
	ammo.backpackmaxamount 60
	ammo.backpackamount 0
	states{spawn:TNT1 A 0 nodelay{return state("null");}stop}
}
actor PlasmaZoomBatteryDrainage : InventoryFlag
{
	inventory.maxamount 126000
}
actor PlasmaZoom : InventoryFlag{}
actor PlasmaAlt : InventoryFlag{}
actor PlasmaEmptyCell : InventoryFlag{}
actor HDCellpackEmpty : Ammo
{
	+inventory.ignoreskill
	inventory.maxamount 6
	ammo.backpackmaxamount 20
	ammo.backpackamount 0
	inventory.pickupmessage "Picked up a depleted cell." translation 0
	scale 0.4
	states
	{
	spawn:
		CELL A 0 nodelay A_SpawnItemEx("CelE",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	}
}

actor HDThunderTrail : IdleDummy
{
	states
	{
	spawn:
		TNT1 A 0
		TNT1 A 0 A_RadiusGive("EvadeNow",96,RGF_MONSTERS,1)
		TNT1 A 1
		TNT1 A 10 A_PlaySound("weapons/bigcrack",0,1)
		TNT1 A 0 A_AlertMonsters
		stop
	}
}
actor PlasmaZoomGood : InventoryFlag{}
actor BeamTest : IdleDummy
{
	+puffgetsowner +puffonactors +bloodlessimpact
	states
	{
	spawn:
		TNT1 A 1 nodelay A_GiveInventory("PlasmaZoomGood",1,AAPTR_TARGET)
		stop
	}
}

actor BeamBoltThrower : ActionItem
{
	states
	{
	pickup:
		TNT1 AA 0 A_FireProjectile("HDGunSmoker",0,0,0,-4)
		TNT1 A 0 A_TakeInventory("IsWeaponReady",999)
		TNT1 A 0 A_CustomRailgun(random(120,240),0,"none","azure",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,40.0,"HDExplosionBeam",0,0,65536,12,0.4,2.0,"none",-4)
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("HDThunderTrail",12,0,40,0,0,0,0,SXF_NOCHECKPOSITION)
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("DistantShotgun",12,0,40,0,0,0,0,SXF_NOCHECKPOSITION)
		TNT1 A 0 ACS_NamedExecuteAlways("MuzzleClimb",0,random(24,34),random(12,24),0)
		TNT1 A 0 A_GunFlash
		TNT1 A 0 A_ChangeVelocity(Cos(Pitch) * -frandom(0.5,1),0,Sin(Pitch) * frandom(0.5,1),1)
		fail
	}
}
actor HDExplosionBeam : HDExplosion
{
	+alwayspuff
	+noblood
	obituary "%o was awed by %k's particle beam."
	states
	{
	spawn:
		TNT1 A 0
		TNT1 AA 0 A_GiveInventory("CacoZapper",1)
		goto super::spawn
	}
}



Actor PlasmaBalle : FastProjectile
{
	damagetype "Thermal"
	obituary "%o was fried by %k's plasma rifle."
	renderstyle add
	scale 0.8
	alpha 0.9
	+skyexplode
	+forcexybillboard
	radius 2
	height 3
	damage 6
	+forceradiusdmg
	-noteleport
	speed 160
	decal "PlasmaShock"
	seesound "weapons/plasmaf"
	deathsound "weapons/plasmax"
	+grenadetrail
	+extremedeath
	States
	{
	Spawn:
		TNT1 A 0
		PLSE B 1 BRIGHT A_SpawnItemEx("PlasmaBallTailHarmless",0,0,0,(velx*0.12),(vely*0.12),(velz*0.12),0,40,0)
	See:
		TNT1 A 0 A_TakeInventory("HDCellAmmo",1)
		PLSS AB 1 BRIGHT A_SpawnItemEx("PlasmaBallTail",0,0,0,(velx*0.12),(vely*0.12),(velz*0.12),0,40,0)
		loop
	Death:
		PLSE AA 1 BRIGHT A_FadeIn(0.2)
		PLSE A 4 BRIGHT A_Explode(random(24,36),56)
		PLSE BCDE 4 BRIGHT A_FadeOut(0.1)
		Stop
	}
}
actor PlasmaBalleWeak : PlasmaBalle
{
	speed 120
	damage 4
	+extremedeath
	states
	{
	Spawn:
		PLSE BA 1 BRIGHT
		TNT1 A 0 A_GiveInventory("HDCellAmmo",32)
		goto see
	death:
		PLSE A 4 BRIGHT A_Explode(24,40)
		PLSE BCDE 4 BRIGHT A_FadeOut(0.1)
		Stop
	}
}
actor PlasmaBallTail
{
	damagetype "Thermal"
	obituary "%o was baked by %k's plasma rifle."
	+nointeraction
	+forcexybillboard
	+extremedeath
	renderstyle add
	radius 2
	height 3
	scale 0.4
	states
	{
	spawn:
		TNT1 A 0
		TNT1 A 0 A_Explode(random(8,16),36)
		PLSE A 1 A_FadeOut(0.1)
		TNT1 A 0 A_Explode(random(4,12),24)
		PLSE A 1 A_FadeOut(0.1)
		TNT1 A 0 A_Explode(random(3,8),18)
		PLSE A 1 A_FadeOut(0.1)
		TNT1 A 0 A_Explode(random(1,4),12)
	see:
		PLSE A 1 A_FadeOut(0.1)
		loop
	}
}
actor PlasmaBallTailHarmless : PlasmaBallTail
{
	states
	{
	spawn:
		PLSE A 1 A_FadeOut(0.1)
		loop
	}
}


ACTOR HDCellAmmo:Ammo{
	+inventory.ignoreskill
	inventory.maxamount 30
	ammo.backpackmaxamount 60
	ammo.backpackamount 0
	states{
	spawn:
		TNT1 A 1 nodelay{
			if(!A_CheckProximity("null","PlayerPawn",20,1, CPXF_COUNTDEAD|CPXF_SETTARGET|CPXF_ANCESTOR|CPXF_CLOSEST|CPXF_NOZ)){
				A_SpawnItemEx("CelP",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM);
			}
			else{
				A_SpawnItemEx("HDCelXDrNoMake",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_ISMASTER|SXF_ABSOLUTEMOMENTUM);
				A_GiveInventory("HDCellAmmo",1,AAPTR_TARGET);
			}
		}
		stop
	}
}
ACTOR HDCellpacks : Ammo replaces Cell
{
	+inventory.ignoreskill
	inventory.maxamount 6
	ammo.backpackmaxamount 20
	ammo.backpackamount 0
	inventory.pickupmessage "Picked up a cell."
	scale 0.4
	states
	{
	spawn:
		CELL A 0 nodelay A_SpawnItemEx("CelP",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
	}
}
actor CelP : HDUPK replaces HDCellpacks
{
	scale 0.4
	states
	{
	spawn:
		CELL A -1 A_Stop
	give:
		"----" A 0 A_JumpIfInTargetInventory("HDCellpacks",0,"spawn")
		"----" A 0 A_PlaySound("weapons/pocket")
		"----" A 0 A_GiveToTarget("HDCellpacks",1)
		stop
	}
}
actor CelE : CelP replaces HDCellpackEmpty
{
	translation 0
	states
	{
	give:
		"----" A 0 A_JumpIfInTargetInventory("HDCellpackEmpty",0,"spawn")
		"----" A 0 A_PlaySound("weapons/pocket")
		"----" A 0 A_GiveToTarget("HDCellpackEmpty",1)
		stop
	}
}

actor HDCelXP : HDUPK
{
	scale 0.4
	states
	{
	spawn2:
		CELL A 0 A_JumpIfInventory("HDCellAmmo",20,2)
		CELL A 0 A_Jump(256,2)
		CELL A 0 A_SpawnItemEx("CelP",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
		CELL A 0 A_JumpIfInventory("HDCellAmmo",1,2)
		CELL A 0 A_SpawnItemEx("CelE",0,0,0,velx,vely,velz,0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM)
		stop
		CELL A 0 A_JumpIfInventory("HDCellAmmo",13,3)
		CELL B 0 A_JumpIfInventory("HDCellAmmo",7,2)
		CELL C 0
		"----" A -1
	spawn:
		CELL C 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("HDCellAmmo",20)
		goto spawn2
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("PlasmaBattery",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("PlasmaBattery",3)
		"----" A 0 A_GiveInventory("HDCellAmmo",1)
		loop
	give:
		"----" A 0 A_JumpIfInventory("HDCellAmmo",0,"givemag")
		"----" A 0 A_JumpIfInTargetInventory("HDCellAmmo",0,"spawn")
	giveloop:
		"----" A 0 A_GiveToTarget("HDCellAmmo",1)
		"----" A 0 A_TakeInventory("HDCellAmmo",1)
		"----" A 0 A_JumpIfInventory("HDCellAmmo",1,"giveloop")
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	givemag:
		"----" A 0 A_JumpIfInTargetInventory("HDCellPacks",0,"spawn")
		"----" A 0 A_GiveToTarget("HDCellPacks",1)
		"----" A 0 A_PlaySound("weapons/pocket")
		stop
	}
}
actor HDCelXB : HDCelXP
{
	states
	{
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("BFGChamber",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("BFGChamber",1)
		"----" A 0 A_GiveInventory("HDCellAmmo",1)
		loop
	}
}
actor HDCelXS : HDCelXP
{
	states
	{
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("LumberCell",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("LumberCell",60)
		"----" A 0 A_GiveInventory("HDCellAmmo",1)
		loop
	}
}
actor HDCelXV : HDCelXP{
	states{
	takeloop:
		"----" A 0{
			if(countinv("VulcJuice",AAPTR_TARGET)>0){  
				A_GiveInventory("HDCellAmmo",countinv("VulcJuice",AAPTR_TARGET)/150);
				A_TakeInventory("VulcJuice",0,0,AAPTR_TARGET);
			}
		}
		goto spawn2
	}
}
actor HDCelXD : HDCelXP
{
	states
	{
	spawn:
		CELL A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("HERPCell",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("HERPCell",750)
		"----" A 0 A_GiveInventory("HDCellAmmo",1)
		loop
	}
}

actor HDCelXDr:HDCelXP{
	states{
	takeloop:
		"----" A 1{
			if(countinv("HDCellAmmo",AAPTR_TARGET)>0){
				A_TakeInventory("Counter");
				A_GiveInventory("Counter",clamp(random(random(1,19),19),1,countinv("HDCellAmmo",AAPTR_TARGET)));
				A_GiveInventory("HDCellAmmo",countinv("Counter"));
				A_TakeFromTarget("HDCellAmmo",countinv("Counter"));
				return state("take2");
			}else{return state("null");}
		}
	take2:
		"----" A 0 A_GiveToTarget("HDCelXDrMaker")
		goto spawn2
	}
}
actor HDCelXDrNoMake:HDCelXDr{
	states{
	take2:
		goto spawn2
	}
}
actor HDCelXDrMaker:ActionItem{
	states{
	pickup:
		TNT1 A 0 A_SpawnItemEx("HDCelXDr",random(8,12),random(0,12),24,5,0,0,random(-6,-12),SXF_SETTARGET)
		stop
	}
}



actor PlasmaPickup : HDUPK
{
	scale 0.6
	states
	{
	spawn:
		PLAS A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TARGET,true),"takeloop")
		"----" A 0 A_GiveInventory("PlasmaBattery",60)
		"----" A 0 A_Jump(256,"spawn2")
	spawn2:
		"----" A -1 A_JumpIfInventory("PlasmaZoom",1,1)
		"----" A 1
		"----" A 0 A_GiveInventory("PlasmaZoomBatteryDrainage",1)
		"----" A 0 A_JumpIfInventory("PlasmaZoomBatteryDrainage",0,1)
		loop
		"----" A 0 A_TakeInventory("PlasmaBattery",1)
		"----" A 0 A_TakeInventory("PlasmaZoomBatteryDrainage",126000)
		"----" A 0 A_JumpIfInventory("PlasmaBattery",1,"spawn2")
		"----" A 0 A_TakeInventory("PlasmaZoom",1)
		loop
	takeloop:
		"----" A 0 A_JumpIfInTargetInventory("PlasmaBattery",1,1)
		goto takeloop2
		"----" A 0 A_TakeFromTarget("PlasmaBattery",1)
		"----" A 0 A_GiveInventory("PlasmaBattery",1)
		loop
	takeloop2:
		"----" A 0{
			if(countinv("PlasmaZoomBatteryDrainage",AAPTR_TARGET)>0){          
				A_GiveInventory("PlasmaZoomBatteryDrainage",countinv("PlasmaZoomBatteryDrainage",AAPTR_TARGET));
				A_TakeFromTarget("PlasmaZoomBatteryDrainage",countinv("PlasmaZoomBatteryDrainage",AAPTR_TARGET));
			}
		}
	take3:
		"----" A 0 A_JumpIfInTargetInventory("PlasmaEmptyCell",1,1)
		goto take4
		"----" A 0 A_TakeFromTarget("PlasmaEmptyCell",1)
		"----" A 0 A_GiveInventory("PlasmaEmptyCell",1)
	take4:
		"----" A 0 A_JumpIfInTargetInventory("PlasmaZoom",1,1)
		goto take5
		"----" A 0 A_TakeFromTarget("PlasmaZoom",1)
		"----" A 0 A_GiveInventory("PlasmaZoom",1)
	take5:
		"----" A 0 A_JumpIfInTargetInventory("PlasmaAlt",1,1)
		goto spawn2
		"----" A 0 A_TakeFromTarget("PlasmaAlt",1)
		"----" A 0 A_GiveInventory("PlasmaAlt",1)
		goto spawn2
	give:
		"----" A 0 A_JumpIfInTargetInventory("ThunderBuster",1,"spawn")
	givegun:
		"----" A 0 A_PlaySound("misc/w_pkup")
		"----" A 0 A_GiveToTarget("ThunderBuster",1)
	givegunloop:
		"----" A 0 A_JumpIfInventory("PlasmaBattery",1,1)
		goto givegunloop2
		"----" A 0 A_GiveToTarget("PlasmaBattery",1)
		"----" A 0 A_TakeInventory("PlasmaBattery",1)
		loop
	givegunloop2:
		"----" A 0{
			if(countinv("PlasmaZoomBatteryDrainage")>0){
				A_GiveToTarget("PlasmaZoomBatteryDrainage",countinv("PlasmaZoomBatteryDrainage"));
				A_TakeInventory("PlasmaZoomBatteryDrainage",countinv("PlasmaZoomBatteryDrainage"));
			}
		}
	givegun3:
		"----" A 0 A_JumpIfInventory("PlasmaEmptyCell",1,1)
		goto givegun4
		"----" A 0 A_GiveToTarget("PlasmaEmptyCell",1)
		"----" A 0 A_TakeInventory("PlasmaEmptyCell",1)
	givegun4:
		"----" A 0 A_JumpIfInventory("PlasmaZoom",1,1)
		goto givegun5
		"----" A 0 A_GiveToTarget("PlasmaZoom",1)
		"----" A 0 A_TakeInventory("PlasmaZoom",1)
	givegun5:
		"----" A 0 A_JumpIfInventory("PlasmaAlt",1,1)
		goto givegunloopend
		"----" A 0 A_GiveToTarget("PlasmaAlt",1)
		"----" A 0 A_TakeInventory("PlasmaAlt",1)
		goto givegunloopend
	}
}
actor PlasmaPickupDropped : PlasmaPickup
{
	states
	{
	spawn:
		PLAS A 0 A_Stop
		"----" A 0 A_JumpIfInventory("Clip",1,"spawn2")
		"----" A 0 A_GiveInventory("Clip",1)
		"----" A 0 A_GiveInventory("PlasmaBattery",random(1,60))
		"----" A 0 A_GiveInventory("PlasmaZoomBatteryDrainage",random(1,126000))
		"----" A 0 A_Jump(200,2)
		"----" A 0 A_GiveInventory("PlasmaAlt",1)
		"----" A 0 A_Jump(200,2)
		"----" A 0 A_GiveInventory("PlasmaZoom",1)
		"----" A 0 A_Jump(256,"spawn2")
	}
}
