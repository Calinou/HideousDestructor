// ------------------------------------------------------------
// Multiplayer scripts.
// ------------------------------------------------------------


//LEVEL RESET SCRIPT
bool ending;
bool wiped;
script "WipedSpecMessage"(void){
	if(ending)terminate;
	setfont("bigfont");
	HudMessage(
		s:"Out of lives. Restart or wait until\n\nsurvivors exit or are wiped out.";
		HUDMSG_FADEINOUT,4,CR_BRICK,1.5,0.5,10.0
	);
	delay(24);
	if(ending)terminate;
	setfont("smallfont");
	HudMessage(
		s:"Hit fire and altfire to cycle through the remaining players (if any).";
		HUDMSG_FADEINOUT,3,CR_GRAY,1.5,0.62,8.0
	);
}


script "CoopFail"(void){
	if(!ending){
		ending=true;
		Log(s:"Respawn limit reached.");
		HudMessageBold(s:" ";0,3,0,0,0,0);
		delay(34);
		setfont("bigfont");
		HudMessageBold (
			s: "W E   A R E    L E A V I N G !";
			HUDMSG_TYPEON,4,CR_GOLD,1.5,0.5,5.6,0.05);
		setfont("smallfont");
		delay(80);
		HudMessageBold(
			s: "Too many casualties. HQ has ordered a retreat!";
			HUDMSG_TYPEON,3,CR_GRAY,1.5,0.62,2.0,0.06);
		delay(200);
		GiveInventory("RestartMap",1);
	}
}
script "CoopWipe"(void){
	ending=true;
	wiped=true;
	Log(s:"Players eliminated.");
	HudMessageBold(s:" ";0,3,0,0,0,0);
	delay(34);
	setfont("bigfont");
	HudMessageBold (
		s: "W I P E D   O U T !";
		HUDMSG_TYPEON,4,CR_GOLD,1.5,0.5,5.6,0.05);
	setfont("smallfont");
	delay(80);
	HudMessageBold(
		s: "T r y   a g a i n .";
		HUDMSG_TYPEON,3,CR_GRAY,1.5,0.62,2.0,0.06);
	delay(200);
	GiveInventory("RestartMap",1);
}


function str byline(void){
	switch(random(0,6)){
	case 1: return "Good game!";
	case 2: return "Everyone else, better luck next time!";
	case 3: return "Shit your pants before their awesome!";
	case 4: return "Congratulations on being sufficiently hideous!";
	case 5: return "And now to survive the sudden death cyber-cyberdemons...";
	}return "Well played, everyone!";
}
script "TDMEndWin"(int survivingteam){
	ending=true;

	str winnerteam;
	switch(survivingteam){
	case 0: winnerteam="Green";break;
	case 1: winnerteam="Brown";break;
	case 2: winnerteam="Black";break;
	case 3: winnerteam="Blue";break;
	case 4: winnerteam="White";break;
	case 5: winnerteam="Pink";break;
	case 6: winnerteam="Golf";break;
	case 7: winnerteam="Hotel";break;
	default: winnerteam="No"; break;}
	Log(s:winnerteam,s:" team alone remains.");

	HudMessageBold(s:"";0,4,0,0,0,0);
	HudMessageBold(s:"";0,3,0,0,0,0);
	delay(34);

	setfont("bigfont");
	HudMessageBold (
		s:winnerteam,s:" Team has won the match!";
		HUDMSG_TYPEON,4,CR_GOLD,1.5,0.5,5.6,0.05);
	setfont("smallfont");
	delay(110);
	HudMessageBold(
		s:byline();
		HUDMSG_TYPEON,3,CR_GRAY,1.5,0.62,2.0,0.06);
	delay(280);
	if(!wiped)Exit_Normal(0);
}
script "FFAWin"(int survivingplayer){
	ending=true;
	Log(n:survivingplayer,s:" alone remains.");

	HudMessageBold(s:"";0,4,0,0,0,0);
	HudMessageBold(s:"";0,3,0,0,0,0);
	delay(34);

	setfont("bigfont");
	HudMessageBold (
		n:survivingplayer,s:" has won the match!";
		HUDMSG_TYPEON,4,CR_GOLD,1.5,0.5,5.6,0.05);
	setfont("smallfont");
	delay(110);
	HudMessageBold(
		s:byline();
		HUDMSG_TYPEON,3,CR_GRAY,1.5,0.62,2.0,0.06);
	delay(280);
	if(!wiped)Exit_Normal(0);
}



//old pure ACS stuff below...

int deaths_common;
int deaths[32];
int wipedout[32];
int survivingteams[32];
int maxlives;
int loseondeathlimit=0;
int endgame=0;
int randomsnark;
int respawninterval=0;

function void CheckConfig(void){
	//Other counters
	if(GetCVar("hd_nomeds")){
		TakeInventory("PortableBerserkPack",999);
		TakeInventory("PortableMedikit",999);
		TakeInventory("PortableStimpack",999);
		TakeInventory("BluePotion",999);
	}
}
function int CurrentLives(void){
	if (GameType () == GAME_NET_DEATHMATCH) return maxlives-deaths[PlayerNumber()];
	return maxlives-deaths_common;
}





