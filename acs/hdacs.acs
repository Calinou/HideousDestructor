#library "HDACS"
#include "zcommon.acs"

function int abs (int x){
	if(x<0) return -x;
	return x;
}
function int sign(int x){
	if(x>0) return 1;
	if(x<0) return -1;
	return 0;
}

function void CheckCVars(void){
	if (GetCVar("hd_forcepistolstart")){
		UseInventory("HDRealDoomGuy");
		SetWeapon("HDPistol");
	}
	else{
		if((GetCVar("hd_nobfg"))&&(CheckInventory("BFG9k"))){
			TakeInventory("BFG9k",999);
			GiveInventory("ThunderBuster",1);
			GiveInventory("PlasmaBattery",60);
			SetWeapon("ThunderBuster");
		}
		//nobronto will replace bronto with rockets, and vice versa.
		//this replaces either with a ZM66-GL if both cvars are true.
		if((GetCVar("hd_nobronto"))&&(GetCVar("hd_norockets"))){
			if((CheckInventory("Brontornis"))||(CheckInventory("RocquetteLauncher"))){
				TakeInventory("RocquetteLauncher",999);
				TakeInventory("RocketMag",999);
				TakeInventory("HDRocketAmmo",999);
				TakeInventory("HDFragGrenadeAmmo",999);
				TakeInventory("Brontornis",999);
				TakeInventory("BrontornisMag",999);
				TakeInventory("BrontornisRound",999);
				GiveInventory("ZM66GrenadeRifle",1);
				GiveInventory("ZM66GLoaded",1);
				GiveInventory("ZM66RifleMags",5);
				GiveInventory("ZM66Loaded",50);
				GiveInventory("ZM66Chamber",1);
				GiveInventory("HDRocketAmmo",8);
				GiveInventory("HDFragGrenadeAmmo",8);
				SetWeapon("ZM66GrenadeRifle");
			}
		}
		else{
			if((GetCVar("hd_nobronto"))&&(CheckInventory("Brontornis"))){
				TakeInventory("Brontornis",999);
				TakeInventory("BrontornisMag",999);
				TakeInventory("BrontornisRound",999);
				GiveInventory("RocquetteLauncher",1);
				GiveInventory("RocketMag",6);
				GiveInventory("HDRocketAmmo",16);
				SetWeapon("RocquetteLauncher");
			}
			if ((GetCVar("hd_norockets"))&&(CheckInventory("RocquetteLauncher"))){
				TakeInventory("RocquetteLauncher",999);
				TakeInventory("RocketMag",999);
				TakeInventory("HDRocketAmmo",999);
				GiveInventory("Brontornis",1);
				GiveInventory("BrontornisRound",12);
				GiveInventory("BrontornisMag",1);
				SetWeapon("Brontornis");
			}
		}
	}
}




// MUZZLE CLIMB
script "MuzzleClimb"(int climb, int twist){
	if((climb)&&((CheckInventory("IsMoving"))||(CheckInventory("IsJumping"))||(CheckInventory("IsHit")))){
		climb=climb*random(2,3)+random(4,16)*CheckInventory("IsJumping");
		twist=twist*random(3,4)+random(2,8)*CheckInventory("IsJumping");
	}
	else if(CheckInventory("IsSupported")){
		climb=climb/3;
		twist=twist/3;
	}
	int playerpitch = GetActorPitch(0)-((random(1,3)+5)*climb);
	if (playerpitch > -5825){
		ChangeActorPitch(0,playerpitch,0);
	}
	int playerangle = GetActorAngle(0)-((random(1,2)+4)*twist);
	ChangeActorAngle(0,playerangle,1);
}




// DROP ONE UNIT OF YOUR CURRENT AMMO
script "DropOneAmmo"(void){
	if(getcvar("hd_debug"))Log(s:"DropOneAmmo can easily be replaced in ZScript.");
	if(CheckWeapon("HDPistol")) GiveInventory("DropOnePistolMag",1);
	else if(CheckWeapon("HDSMG")) GiveInventory("DropOneSMGMag",1);
	else if((CheckWeapon("Hunter"))
		||(CheckWeapon("Slayer"))
		) GiveInventory("DropFourSG",1);
	else if((CheckWeapon("ZM66Rifle"))
		||(CheckWeapon("ZM66SemiRifle"))
		) GiveInventory("DropOneZMag",1);
	else if(CheckWeapon("ZM66GrenadeRifle")) GiveInventory("DropOneZMagFrag",1);
	else if(CheckWeapon("Vulcanette")) GiveInventory("DropOneZMagCell",1);
	else if(CheckWeapon("RocquetteLauncher")) GiveInventory("DropOneRocketHEAT",1);
	else if(CheckWeapon("Blooper")) GiveInventory("DropOneRocket",1);
	else if(CheckWeapon("HDFragGrenades")) GiveInventory("DropOneFrag",1);
	else if(CheckWeapon("LiberatorRifle")) GiveInventory("DropOneLib",1);
	else if(CheckWeapon("LiberatorGrenadeRifle")) GiveInventory("DropOneLibFrag",1);
	else if(CheckWeapon("Brontornis")) GiveInventory("DropOneBronto",1);
	else if(CheckWeapon("BossRifle")) GiveInventory("DropOneBoss",1);
	else if((CheckWeapon("ThunderBuster"))
		||(CheckWeapon("BFG9k"))
		||(CheckWeapon("Lumberjack"))
		) GiveInventory("DropOneCell",1);
	else if(CheckWeapon("Injector")) GiveInventory("DropOneMedStimZerk",1);
	else GiveInventory("DropExtra",1);
//	ACS_NamedExecuteAlways("CarryLimit",0,0,0);
}

// DOOMGUY MODE
script "HDDoomguy" (void){
	if(getcvar("hd_debug"))Log(s:"HDDoomguy can easily be replaced in ZScript.");
	bool rk = CheckInventory("RedCard");
	bool bk = CheckInventory("BlueCard");
	bool yk = CheckInventory("YellowCard");
	bool rs = CheckInventory("RedSkull");
	bool bs = CheckInventory("BlueSkull");
	bool ys = CheckInventory("YellowSkull");
	ClearInventory();
	GiveInventory("DoomguyLoadout",1);
	if (rk) GiveInventory("RedCard",1);
	if (bk) GiveInventory("BlueCard",1);
	if (yk) GiveInventory("YellowCard",1);
	if (rs) GiveInventory("RedSkull",1);
	if (bs) GiveInventory("BlueSkull",1);
	if (ys) GiveInventory("YellowSkull",1);
}




//MAIN LOOP
script "HDEnter" ENTER{
	ReplaceBot();
	CheckCVars();
	SetPlayerProperty(0,0,PROP_TOTALLYFROZEN);	//unsuperfreezes player
}




// HELL FLOOR - FOR SCREAMING TREES
// (zscript equivalent is not noticeably less clunky)
script "CheckHellFloor" (void){
	if(
	(CheckActorFloorTexture(0,"SFLR6_1"))||(CheckActorFloorTexture(0,"SFLR6_4"))||(CheckActorFloorTexture(0,"SFLR7_1"))||(CheckActorFloorTexture(0,"SFLR7_4"))
	||(CheckActorFloorTexture(0,"BLOOD1"))||(CheckActorFloorTexture(0,"BLOOD2"))||(CheckActorFloorTexture(0,"BLOOD3"))
//	||(CheckActorFloorTexture(0,"NUKAGE1"))||(CheckActorFloorTexture(0,"NUKAGE2"))||(CheckActorFloorTexture(0,"NUKAGE3"))
	||(CheckActorFloorTexture(0,"LAVA1"))||(CheckActorFloorTexture(0,"LAVA2"))||(CheckActorFloorTexture(0,"LAVA3"))||(CheckActorFloorTexture(0,"LAVA4"))
	)
	GiveInventory("IsInHell",1);
}

// LIGHT LEVEL
// (no zscript equivalent known)
script "LightCheck"(void){
	SetResultValue(GetActorLightLevel(0));
}





#include "hdmulti.acs"
#include "hdxhair.acs"

